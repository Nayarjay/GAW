{"version":3,"file":"js/babylonBundle.js","mappings":"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","sources":["webpack://gaw/webpack/bootstrap","webpack://gaw/webpack/runtime/define property getters","webpack://gaw/webpack/runtime/hasOwnProperty shorthand","webpack://gaw/./game/SoundManager.js","webpack://gaw/./game/cinematique.js","webpack://gaw/./game/End.js","webpack://gaw/./game/CustomModels.js","webpack://gaw/./game/CharacterController.js","webpack://gaw/./game/PlayerLevel1.js","webpack://gaw/./game/scene2.js","webpack://gaw/./game/CharacterController2.js","webpack://gaw/./game/PlayerLevel2.js","webpack://gaw/./game/scene3.js","webpack://gaw/./game/CharacterController3.js","webpack://gaw/./game/PlayerLevel3.js","webpack://gaw/./game/BowlingPin.js","webpack://gaw/./game/scene4.js","webpack://gaw/./game/cinematique_credit.js","webpack://gaw/./game/Menu.js","webpack://gaw/./game/SceneManager.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","class SoundManager {\r\n    constructor(scene, musicName) {\r\n        this.scene = scene;\r\n        this.musicName = musicName;\r\n        this.musicSound = null;\r\n        this.volumeSlider = null; // New property to keep track of the slider element\r\n\r\n         // Initialize the slider when the scene and slider are ready\r\n         document.addEventListener('DOMContentLoaded', () => {\r\n            this.initVolumeSlider(\"volumeSlider\");\r\n        });\r\n    }\r\n\r\n    initMusic() {\r\n        const music = () => {\r\n            this.musicSound = new BABYLON.Sound(\"\", \"./models/Music/\" + this.musicName, this.scene, null, {\r\n                loop: true,\r\n                autoplay: true\r\n            });\r\n            this.updateVolume(); // Ensure volume is set according to the slider at initialization\r\n        };\r\n\r\n        window.addEventListener('mousemove', () => {\r\n            if (BABYLON.Engine.audioEngine.audioContext.state === 'suspended') {\r\n                BABYLON.Engine.audioEngine.audioContext.resume().then(() => {\r\n                    music();\r\n                });\r\n            } else {\r\n                music();\r\n            }\r\n        }, { once: true });\r\n    }\r\n\r\n    initVolumeSlider(sliderId) {\r\n        this.volumeSlider = document.getElementById(sliderId);\r\n        this.volumeSlider.addEventListener('input', () => {\r\n            this.updateVolume();\r\n        });\r\n    }\r\n\r\n    updateVolume() {\r\n        if (this.musicSound && this.volumeSlider) {\r\n            this.musicSound.setVolume(this.volumeSlider.value / 100);\r\n        }\r\n    }\r\n\r\n    stopMusic() {\r\n        if (this.musicSound) {\r\n            this.musicSound.stop();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.stopMusic();\r\n        window.removeEventListener('mousemove', this.clickHandler);\r\n        if (this.volumeSlider) {\r\n            this.volumeSlider.removeEventListener('input', this.updateVolume);\r\n        }\r\n        this.scene = null;\r\n        this.musicName = null;\r\n        this.musicSound = null;\r\n        this.clickHandler = null;\r\n        this.volumeSlider = null;\r\n    }\r\n}\r\n\r\nexport default SoundManager;\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n//let soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n    defaultLoadingScreen();\r\n    soundManager.initMusic();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  \r\n    // Création d'une caméra\r\n        const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n        //camera.attachControl()\r\n    screen();\r\n     // Attendre quelques secondes avant de charger le niveau suivant\r\n    setTimeout(function () {\r\n        soundManager.destroy();\r\n        loadNextLevel();\r\n    }, 21000); \r\n    //loadNextLevel();\r\n   \r\n}\r\nasync function screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 100,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    // Options pour la texture vidéo, y compris la lecture audio\r\n    var videoTextureOptions = {\r\n        loop: false, // Désactivé la boucle\r\n        autoPlay: false, // Désactiver la lecture automatique pour éviter les erreurs\r\n        autoUpdateTexture: true,\r\n        poster: null,\r\n        muted: true // Initialement en mode muet\r\n    };\r\n\r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"./models/video/scrawl text.mp4\", scene, true, false, videoTextureOptions);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n\r\n    // Démarre la vidéo en mode muet pour éviter les restrictions du navigateur\r\n    videoTexture.video.play();\r\n\r\n    // Gestionnaire d'événement pour activer le son après un clic sur le canvas\r\n    var canvas = document.getElementById('renderCanvas');\r\n    canvas.addEventListener('click', function() {\r\n        // Désactiver le mode muet et redémarrer la vidéo\r\n        videoTexture.video.muted = true;\r\n        videoTexture.video.play();\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\nfunction loadNextLevel(){\r\n    \r\n    killLevel();\r\n    sceneManager.launchLevel2();\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n    engine.stopRenderLoop();\r\n \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            //displayControlUI();\r\n        }, 3000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\nexport {  scene, launch };","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"End.mp3\");\r\n\r\nvar createScene = function () {\r\n    defaultLoadingScreen();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 4, -12.5), scene);\r\n\r\n    //camera.attachControl();\r\n    if(sceneManager.winCountPlayer1 > sceneManager.winCountPlayer2){\r\n        playerWin(-4,0,-1);\r\n        playerLoose(2,0,0);\r\n        trophy(-3.5,0,-1.5);\r\n\r\n    }else{\r\n        playerWin(2,0,-1);\r\n        playerLoose(-4,0,0);\r\n        trophy(2.5,0,-1.5);\r\n    }\r\n\r\n    //scene.debugLayer.show();\r\n    //displayControlUI();\r\n    loadEndScene();\r\n    soundManager.initMusic();\r\n    createSkyBox();   \r\n    //hideControlUI();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\nfunction hideControlUI(){\r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n\r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n\r\n}\r\nfunction playerLoose(x,y,z){\r\n    \r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Loose.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerLoose\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n\r\n\r\n}\r\nfunction playerWin(x,y,z){\r\n  \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"victory.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n}\r\n\r\nfunction loadEndScene(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"recommencer.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi end scene\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"EndScene\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\nfunction trophy(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Trophy.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            displayControlUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\nexport {  scene, launch };\r\n\r\n","\r\n\r\n\r\nexport class CustomModels {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    \r\n    \r\n    /** ######################################################################## LEVEL2 3D MODEL #########################################################################**/\r\n\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    async CreateTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n         \r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            \r\n        \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    async CreatePineTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        return   BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            meshes[0].scaling.x = 3\r\n            meshes[0].scaling.y = 2\r\n            meshes[0].scaling.z = 4\r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n            //troncAggregate.shape.\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, shapeBox2, { mass: 0 }, this.scene);\r\n           \r\n            \r\n        \r\n           //return boundingBox;\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n       \r\n    }\r\n\r\n\r\n\r\n    CreateSnowManOnSki(x, y, z,parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        // Charger le modèle 3D\r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"snowman_on_skis.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi SnowMan\", meshes);\r\n            mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n            mesh.name = \"SnowMan\";\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne le modèle une fois chargé\r\n            mesh.setParent(parent);\r\n \r\n            //mesh.rotationQuaternion._y = 85;\r\n\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n    \r\n        return { mesh }; // Retourne mesh\r\n    }\r\n    \r\n    \r\n  \r\n    \r\n   \r\n    async CreateSceneProd(x, y, z) {\r\n       \r\n    }\r\n    async CreatePlayer(x, y, z) {\r\n        \r\n    }\r\n      \r\n    async Zone(x, y, z) {\r\n      \r\n     \r\n    }\r\n\r\n    async plane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(-0.1, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n\r\n    async flatplane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(0, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n    async createDeadTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Dead Trees With Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 30\r\n            meshes[0].scaling.y = 20\r\n            meshes[0].scaling.z = 20\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(30, 30, 30),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n\r\n  \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Snow Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createLitleSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow two.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowMan(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"SnowManRotated.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 1\r\n            meshes[0].scaling.y = 1\r\n            meshes[0].scaling.z = 1\r\n      \r\n            let globalMesh = meshes[0];\r\n            \r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(\"SNOWMAN \"+globalMesh.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateRampe1(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"rampe_2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n \r\n            meshes[0].scaling.x = 5\r\n            meshes[0].scaling.y = 5\r\n            meshes[0].scaling.z = 5\r\n   \r\n           \r\n            let mesh = meshes[0];\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            mesh.name =\"Rampe\"\r\n            let elment =meshes[1] ;\r\n           \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(elment, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n           \r\n\r\n            \r\n           // var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n    createSnowMount(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Rock Forms 3 (White).glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            meshes[0].scaling.x = 150\r\n            meshes[0].scaling.y = 150\r\n            meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            let element =meshes[1] ;\r\n            element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n          \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(element, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n\r\n    createFinalScene2(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"finalscene2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            //meshes[0].scaling.x = 150\r\n            //meshes[0].scaling.y = 150\r\n            //meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[2].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            //let element =meshes[1] ;\r\n            let element = this.scene.getMeshByName(\"Cube (sol)\");\r\n            //let element2 = this.scene.getMeshByName(\"Cube (sol)\") ;\r\n            //let element3 = this.scene.getMeshByUniqueId(769) ;\r\n\r\n            //element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n\r\n            //console.log();\r\n        \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                i++\r\n            }\r\n            \r\n          \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n    \r\n    \r\n    \r\n    /** ######################################################################## Scene3 3D MODEL #########################################################################**/\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreatePlateform(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"plateforme_scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n        CreatePlateformlevel2(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform level2\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n\r\n\r\n /** ######################################################################## Scene4 3D MODEL #########################################################################**/\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    CreatePlateform_Scene4(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene4_gameplay_ELEMENT.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingPlatform(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene_de_bowling.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingBall(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Spiky Ball.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi ball\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n          \r\n            mesh.name =\"ball\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, BABYLON.PhysicsShapeType.SPHERE, { mass: 0 }, this.scene);\r\n         \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** ######################################################################## MENU 3D MODEL #########################################################################**/\r\n\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n               // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n    \r\n                //var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n               // troncAggregate.shape.isTrigger =  true;\r\n    \r\n                \r\n                //var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n\r\n                 \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n          // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateMenu3dScene(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"fmenu.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi du menu\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"fondMenu\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n        async Createlevel1(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"level2Map.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n        \r\n    \r\n            return { boundingBox };\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n    \r\n   \r\n}\r\n","class CharacterController {\r\n    constructor(canvas , engine, character,forward,backward,left,right,forward2,backward2,left2,right2) {\r\n        this.setupKeyboardInput(canvas, engine, character,forward,backward,left,right,forward2,backward2,left2,right2);\r\n    }\r\n\r\n    setupKeyboardInput(canvas, engine, character,forwardI,backward,left,right,forward2,backward2,left2,right2) {\r\n        this.keys = {};\r\n\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            this.keys[event.key] = true;\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            // Vérifie l'état des touches dans l'objet \"keys\" et effectue des actions en conséquence.\r\n\r\n            if (this.keys[forwardI] || this.keys[forward2]) {\r\n                //console.log('Touche Z enfoncée');\r\n                \r\n                let forward = character.transformNode.forward.scale(-5);\r\n               //console.log(forward);\r\n\r\n                character.applyForce(forward , character.transformNode.position);\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n          \r\n            }\r\n\r\n            if (this.keys[backward] || this.keys[backward2]) {\r\n                //console.log('Touche S enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(0, 0, 5), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                //charater.position.z += 0.1; // Déplace le personnage vers l'avant (positif sur l'axe z).\r\n            }\r\n\r\n            if (this.keys[left] || this.keys[left2]) {\r\n                //console.log('Touche Q enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, -0.5, 0));\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.position.x += 0.1; // Déplace le personnage vers la gauche (positif sur l'axe x).\r\n            }\r\n\r\n            if (this.keys[right] || this.keys[right2]) {\r\n                //console.log('Touche D enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(-5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0.5, 0));\r\n                //character.position.x -= 0.1; // Déplace le personnage vers la droite (négatif sur l'axe x).\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController;\r\n","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n\r\n\r\n\r\n\r\nexport class PlayerLevel1 {\r\n\r\n    constructor(scene,engine,name,forward,backward,left,right,x,y,z,forward2,backward2,left2,right2) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.boxBody ;\r\n\r\n        this.testPlayer(scene,engine,name,x,y,z);\r\n        this.enablePlayerControl(forward,backward,left,right,forward2,backward2,left2,right2);\r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n\r\n        \r\n\r\n\r\n       \r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n\r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        box.isVisible = false;\r\n\r\n        let snowMan = new CustomModels(scene).CreateSnowManOnSki(x,y-0.5,z,box);\r\n      \r\n\r\n        \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        \r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n\r\n        //rotate character\r\n      \r\n      \r\n        this.boxBody = boxBody;\r\n        \r\n     \r\n        \r\n      \r\n     \r\n        \r\n    \r\n       \r\n \r\n        return box;\r\n    \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(forward,backward,left,right,forward2,backward2,left2,right2){\r\n       let control = new CharacterController(canvas2,this.engine,this.boxBody,forward,backward,left,right,forward2,backward2,left2,right2);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel1;","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nimport {PlayerLevel1} from \"./PlayerLevel1.js\";\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\nlet soundManager = new SoundManager(scene,\"level1.mp3\");\r\nlet advancedTexture ;\r\nBABYLON.SceneLoader.ShowLoadingScreen = true; \r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nvar name = \"level2\";\r\nvar value = \"start\";     \r\n//var player = new PlayerLevel1(scene);\r\n\r\nasync function getInitializedHavok() {\r\n  return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n   \r\n    // Ajoutez une lumière hémisphériques\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    \r\n    const havokInstance = await HavokPhysics();\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n    defaultLoadingScreen();\r\n    \r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0),  hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n\r\n    var sceneprod = new CustomModels(scene);\r\n\r\n   soundManager.initMusic();\r\n\r\n    let x = -10;\r\n\r\n\r\n//********************************************************** PART 5 LEVEL ******************************************************************************/////////////////\r\n    //rajoute d'un plane\r\n    \r\n\r\n\r\n    //trigger to die and pass\r\n    triggerDie(-1.79, -1.02, -832.37);\r\n    \r\n\r\n    \r\n\r\n    displayControlUI();\r\n\r\n   //testPlayer();\r\n\r\n\r\n    \r\n   //montrer le layer\r\n   //scene.debugLayer.show();\r\n   \r\n   \r\n\r\n    var place = new CustomModels(scene);\r\n    //place.createFinalScene2(4,-24,-970);\r\n   \r\n    await place.Createlevel1(0,0,-800)\r\n    \r\n\r\n    \r\n   let player = new PlayerLevel1(scene,engine,'player1','z','s','q','d',5,170,0,'w','s','a','d');\r\n\r\n   let player2 = new PlayerLevel1(scene,engine,'player2','ArrowUp','ArrowDown','ArrowLeft','ArrowRight',0,170,0);\r\n \r\n\r\n    \r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n\r\n    \r\n    eventHandler(hk,player);\r\n    createSkyBox();\r\n   return playerMesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getScene() {\r\n    return scene;\r\n}\r\n\r\n\r\n\r\nfunction triggerDie(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(40, 40, 40),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction eventHandler(hk,player){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"tronc\"){\r\n                console.log(\"End OF the Game\")\r\n                reloadlevel();\r\n               \r\n                player = null;\r\n}      \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1+\"  COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n           //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n            player = null;\r\n  \r\n\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"Die\"){\r\n            console.log(\"YOU DIEEEEEEEEEE\");\r\n            value = \"death\";\r\n            reloadlevel();\r\n            player = null;\r\n           \r\n            //return \"death\";\r\n        }\r\n    });\r\n}\r\n\r\nasync function launch() {\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1); \r\n\r\n    scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh;\r\n        camera2.lockedTarget = playerMesh2;\r\n\r\n        // Lancer le rendu une fois que la scène est prête\r\n        scene.executeWhenReady(() => {\r\n            engine.runRenderLoop(function () {\r\n                scene.render();\r\n            });\r\n        });\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n    // Afficher l'écran de chargement de Babylon.js\r\n    scene.executeWhenReady(() => {\r\n        BABYLON.SceneLoader.ShowLoadingScreen = true;\r\n    });\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n  \r\n  \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n\r\n}\r\n\r\nfunction reloadlevel(){\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n\r\n \r\n\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    soundManager.destroy();\r\n    sceneManager.launchLevel3();\r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n   // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"block\";\r\n\r\n}\r\nfunction hideControlUI(){\r\n       // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"none\";\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nexport { name, scene, sceneData, launch,killLevel };\r\n","class CharacterController2 {\r\n    constructor(canvas, scene, engine, character1, input1, inputJump,animationGroup) {\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, input1, inputJump,animationGroup);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1, inputJump,animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n\r\n                \r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n                    \r\n                 \r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                    console.log(\"Touche enfoncée, action effectuée jump\");\r\n              \r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n            \r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump ) {\r\n                isKeyPressed2 = false;\r\n                console.log(\"Touche relâchée jump\");\r\n                // Ajoutez ici la logique pour arrêter le saut du personnage si nécessaire\r\n            \r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n                //console.log(\"Touche relâchée\");\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            \r\n            if (isKeyPressed) {\r\n            \r\n                character.applyForce(new BABYLON.Vector3(0, 0, -50), new BABYLON.Vector3(0, 0, 0));\r\n    \r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n               \r\n                isKeyPressed = false;\r\n                //console.log(  animationGroup)\r\n               //animationGroup[1].play();\r\n            }\r\n            /*\r\n            if (isKeyPressed2) {\r\n                character.applyForce(new BABYLON.Vector3(0, 200, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                isKeyPressed2 = false;\r\n                //animationGroup[2].play();\r\n            }\r\n            */\r\n           \r\n            character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController2 from './CharacterController2.js';\r\nvar engine2 = new BABYLON.Engine(canvas, true);\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel2 {\r\n\r\n    constructor(scene,engine,name,forward,jump,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name = name;\r\n        this.boxBody ;\r\n        this.boxMesh;\r\n        this.animationGroups = [];\r\n        this.forward = forward\r\n        this.jump = jump;\r\n        \r\n        this.createPlayer(x,y,z);\r\n        this.enablePlayerControl(forward,jump);\r\n     \r\n     \r\n    }\r\n    \r\n\r\n    async createPlayer(x,y,z){\r\n\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n        var box = BABYLON.MeshBuilder.CreateBox(this.name, {width: boxW, height: boxH, depth: boxD},this.scene);\r\n        this.boxMesh = box;\r\n        //ADD character disable box visibility \r\n        box.visibility = false;\r\n     \r\n\r\n\r\n\r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        //box.position = new BABYLON.Vector3(0,5,0);\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD),this.scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        this.boxBody = boxBody;\r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1.5})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", this.scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n        this.animationGroups = await this.Character(x, y, z, box);\r\n       //console.log(this.animationGroups);\r\n      \r\n    \r\n     \r\n     \r\n \r\n        return box;\r\n    }\r\n    \r\n  \r\n \r\n    enablePlayerControl(forward,jump){\r\n       let control = new CharacterController2(canvas,this.scene,this.engine,this.boxBody,forward,jump,this.animationGroups);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n   \r\n    async Character(x, y, z, parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        const { meshes, animationGroups } = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"./models/character1_anim/\", \"animCharacter.glb\", this.scene);\r\n    \r\n        mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n        mesh.name = \"RUNNER\";\r\n        mesh.position = new BABYLON.Vector3(x, y - 1.05, z); // Positionne le modèle une fois chargé\r\n    \r\n        if (parent) {\r\n            mesh.setParent(parent); // Attacher le modèle au parent si spécifié\r\n        }\r\n        this.animationGroups.push(animationGroups) ;\r\n        // Vous pouvez ajouter des manipulations supplémentaires sur le mesh ici, comme l'échelle ou la rotation\r\n    \r\n        console.log(\"Chargement réussi Personnage\", mesh);\r\n \r\n        await this.animGestionner(canvas,this.forward,this.jump,animationGroups)\r\n        \r\n    \r\n        return { animationGroups };\r\n    }\r\n\r\n    async animGestionner(canvas, input1, inputJump, animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n\r\n\r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n\r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump) {\r\n                isKeyPressed2 = false;\r\n\r\n\r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n\r\n        engine2.runRenderLoop(() => {\r\n\r\n            if (isKeyPressed) {\r\n                isKeyPressed = false;\r\n                console.log(\"VOILA LE GROUPE :\" + animationGroup)\r\n                animationGroup[2].play();\r\n\r\n            }\r\n\r\n            if (isKeyPressed2) {\r\n\r\n                isKeyPressed2 = false;\r\n                //animationGroup[1].play();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel2;","var canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level2.mp3\");\r\nvar name = \"level3\";\r\nimport SoundManager from './SoundManager.js';\r\nimport { CustomModels } from './CustomModels.js';\r\nimport CharacterController2 from './CharacterController2.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport PlayerLevel2 from './PlayerLevel2.js';\r\n\r\nasync function getInitializedHavok() {\r\n    return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n    defaultLoadingScreen();\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n   \r\n\r\n    // Configurez une caméra\r\n   \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    //var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n\r\n\r\n    //var devcamera = new DevCamera(canvas, scene);\r\n    // Positionnez le cube où vous le souhaitez\r\n\r\n    triggerEnd(5,11,-620);\r\n    eventHandler(hk);\r\n\r\n    // Ajoutez l'événement de clic à la scène\r\n    scene.onPointerDown = function (evt, pickResult) {\r\n        onPointerDown(evt, pickResult);\r\n    };\r\n\r\n    var plane2 = new CustomModels(scene);\r\n    //plane2.CreatePlateform(0,0, -472,678);\r\n    plane2.CreatePlateformlevel2(-7,14, -265);\r\n    displayControlUI();\r\n\r\n\r\n     \r\n    let player1 = new PlayerLevel2(scene,engine,\"player1\",'s','f', 0,20,0);\r\n    let player2 = new PlayerLevel2(scene,engine,\"player2\",'k','m',-14,20,0);\r\n   //scene.debugLayer.show();\r\n\r\n   createSkyBox();\r\n\r\n}\r\n\r\nfunction launch() {\r\n   \r\n\r\n    \r\n   \r\n    //var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(-3, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n   \r\n    //scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n    scene.activeCameras.push(camera)\r\n\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(\"MESH PLAYER2\"+playerMesh2); // Utilisez playerMesh comme nécessaire\r\n\r\n        let playerMesh1 = scene.getMeshByName(\"player1\");\r\n        //console.log(\"MESH PLAYER2\"+playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh2;\r\n        camera2.lockedTarget = playerMesh1;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n    engine.runRenderLoop(function () {\r\n        scene.render();\r\n    });\r\n}\r\n\r\n// Fonction appelée lorsqu'un clic est détecté\r\nfunction onPointerDown(evt, pickResult) {\r\n    if (pickResult.hit) {\r\n        // Votre code d'interaction ici, par exemple, changez la couleur de l'objet\r\n        if(pickResult.pickedMesh.name ==\"player\"){\r\n\r\n            pickResult.pickedMesh.material.diffuseColor = new BABYLON.Color3(0, 1, 0); // Vert\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerEnd(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(60, 2, 2000),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n\r\n    var boxW = 40;\r\n    var boxH = 40;\r\n    var boxD = 40;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n        \r\n        \r\n  \r\n    var Aggregate2 =new BABYLON.PhysicsAggregate(box, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, scene);\r\n    Aggregate2.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\nfunction eventHandler(hk){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n   \r\n   \r\n\r\n            //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n\r\n        }\r\n      \r\n    });\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel4();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox3/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\nexport { name, scene, sceneData, launch };\r\n","class CharacterController2 {\r\n    constructor(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch,inputLeft2, inputRight2) {\r\n        this.destroyed = false;\r\n        this.action = false;\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch,inputLeft2, inputRight2);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1,input2, inputJump,inputLaunch,inputLeft2, inputRight2) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n         \r\n             \r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n       \r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n          \r\n            if(!this.destroyed){\r\n                if (this.keys[input1] ||this.keys[inputLeft2] ) {\r\n                    //console.log('Touche gauche enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            \r\n                }\r\n\r\n                if (this.keys[input2] ||this.keys[inputRight2]) {\r\n                    //console.log('Touche Droite enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(-5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n         \r\n                if (this.keys[inputLaunch] && !this.action) {\r\n                    //console.log('Touche LAUNCH enfoncée');\r\n                    this.action = true;\r\n                    character.applyForce(new BABYLON.Vector3(0, 0, 700*4), new BABYLON.Vector3(0, 0, 0));\r\n                    //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            }\r\n        });\r\n\r\n       \r\n    }\r\n\r\n\r\n    destroy() {\r\n     \r\n        this.destroyed = true;\r\n\r\n        // Libérez les références aux objets\r\n        this.canvas = null;\r\n        this.engine = null;\r\n\r\n        //this.character1.dispose();\r\n        this.character1 = null;\r\n        this.inputLeft = null;\r\n        this.inputRight = null;\r\n        this.inputJump = null;\r\n        this.inputLaunch = null;\r\n\r\n        // Réinitialisez ou supprimez d'autres ressources si nécessaire\r\n    }\r\n    isUpperCase(input,key) {\r\n        return key === input.toUpperCase();\r\n    }\r\n    getLastKeyPressed() {\r\n        return this.lastKeyPressed; // Fonction pour récupérer la dernière touche enfoncée\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController3 from './CharacterController3.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel3 {\r\n\r\n    constructor(scene,engine,name,left,right,jump,action,x,y,z,inputLeft2, inputRight2) {\r\n        this.control;\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name= name;\r\n        this.boxBody ;\r\n        this.sphereBody;\r\n        this.box;\r\n        this.rayHelper;\r\n        //this.testPlayer(scene,engine,name,x,y,z);\r\n      \r\n        this.shootBall(left,right,jump,action,x,y,z);\r\n    \r\n        this.enablePlayerControl(left,right,jump,action,inputLeft2, inputRight2);\r\n\r\n        \r\n     \r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n       \r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        this.box =box;\r\n   \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n      \r\n       \r\n        this.boxBody = boxBody;\r\n        \r\n    \r\n     \r\n     \r\n        \r\n    \r\n\r\n      \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(inputLeft,inputRight,jump,action,inputLeft2, inputRight2){\r\n\r\n        let control2 = new CharacterController3(canvas2,this.engine,this.sphereBody, inputRight,inputLeft,jump,action,inputLeft2, inputRight2);\r\n        this.control = control2;\r\n     \r\n      \r\n    }\r\n\r\n   \r\n    shootBall(left,right,jump,action,x,y,z){\r\n        let segments = 16;\r\n        let diameter = 2;\r\n\r\n        const sphere = BABYLON.MeshBuilder.CreateSphere(this.name, { segments, diameter }, this.scene);\r\n        sphere.position = new BABYLON.Vector3(x,y,z);\r\n\r\n       \r\n        var sphereShape = new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),diameter-1,this.scene);\r\n        var sphereBody = new BABYLON.PhysicsBody(sphere, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        sphereBody.shape = sphereShape;\r\n        sphereBody.setMassProperties({mass : 2});\r\n\r\n       \r\n        \r\n        this.sphereBody = sphereBody;\r\n       \r\n    }\r\n    disableThisObject(){\r\n\r\n        this.control.destroy();\r\n        this.control = null;\r\n        \r\n  \r\n       \r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel3;","\r\n\r\nexport class BowlingPin {\r\n\r\n    constructor(scene,x,y,z) {\r\n       \r\n        this.scene = scene;\r\n       \r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        this.mesh;\r\n        this.Aggregate;\r\n        this.meshIdPromise = this.createBowlingPin();\r\n    }\r\n    \r\n    createBowlingPin(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Bowling Pin.glb\", this.scene, (meshes) => {\r\n\r\n             \r\n\r\n                const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                    new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                    new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                    new BABYLON.Vector3(0.5, 1.2, 0.5),      // dimensions of the box\r\n                    this.scene                                // scene of the shape\r\n                );\r\n        \r\n\r\n                let boxKid = BABYLON.MeshBuilder.CreateBox(\"Pintrigger\");\r\n                //boxKid.isVisible = false;\r\n\r\n                //console.log(\"Chargement réussi Pin\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                mesh.scaling._z =  mesh.scaling._z *-1;\r\n                mesh.name =\"Pin\"\r\n\r\n  \r\n            \r\n        \r\n                mesh.position = new BABYLON.Vector3(this.x, this.y, this.z); // Positionne l'objet\r\n            \r\n\r\n            \r\n                var Aggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0.1 }, this.scene);\r\n                Aggregate.body.setCollisionCallbackEnabled(true);\r\n                this.Aggregate = Aggregate;\r\n                this.mesh = mesh;\r\n               \r\n                const meshId = mesh.uniqueId;\r\n                resolve(meshId);\r\n\r\n            }, undefined, undefined, \".glb\");\r\n        })\r\n\r\n    }\r\n  \r\n    \r\n    async getMeshId(){\r\n         return await this.meshIdPromise;\r\n    }\r\n \r\n   \r\n    disableThisObject(){\r\n        this.Aggregate.body.setCollisionCallbackEnabled(false);\r\n        this.Aggregate.body.dispose();\r\n        //this.mesh.dispose();\r\n       \r\n    }\r\n    isPinUp() {\r\n        // Récupérer la rotation de la quille\r\n        const rotation = this.mesh.rotationQuaternion.toEulerAngles();\r\n\r\n        // Définir un seuil pour la rotation, en dessous duquel la quille est considérée comme renversée\r\n        const threshold = 0.1; // À ajuster selon vos besoins\r\n\r\n        // Vérifier si la rotation autour de l'axe X (ou un autre axe selon votre modèle) dépasse le seuil\r\n        const isUp = Math.abs(rotation.x) < threshold;\r\n\r\n        return isUp;\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default BowlingPin;","import { CustomModels } from './CustomModels.js';\r\nimport CharacterController3 from './CharacterController3.js';\r\nimport PlayerLevel3 from './PlayerLevel3.js';\r\nimport BowlingPin from './BowlingPin.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level3.mp3\");\r\nvar name = \"level4\";\r\nlet advancedTexture ;\r\n\r\n\r\n\r\n\r\nlet player1;\r\nlet player2;\r\n\r\nlet countPlayer1 =0;\r\nlet countPlayer2 =0;\r\n\r\n\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n    defaultLoadingScreen();\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n       \r\n    \r\n    \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   \r\n\r\n    var model = new CustomModels(scene);\r\n    \r\n    var listeQuilles1 = [];\r\n\r\n    \r\n\r\n    let add =13 ;\r\n    var listeQuilles2 = [];\r\n   \r\n    \r\n    \r\n\r\n\r\n \r\n   // console.log(countPlayer1);\r\n     player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8,'d','a');\r\n     player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n\r\n     //let pin = new BowlingPin(scene,0,2,19.397);\r\n    \r\n   \r\n    let ball1 = scene.getMeshByName(\"player1\");\r\n    \r\n    displayControlUI();\r\n    //CreateBowlingBall(0,6,0);\r\n\r\n    eventHandler(hk,player1,player2);\r\n\r\n   // model.CreatePlateform_Scene4();\r\n    model.CreateBowlingPlatform();\r\n    listeQuilles1 =  addQuille(listeQuilles1,0,0,-8);\r\n    listeQuilles2 =  addQuille(listeQuilles2,25,0,-8);\r\n\r\n    testSearch(listeQuilles1,countPlayer1,\"player1\");\r\n    testSearch2(listeQuilles2,countPlayer2,\"player2\");\r\n\r\n    \r\n        \r\n\r\n    let ball = scene.getMeshByName(\"ball\");\r\n    \r\n    \r\n\r\n  \r\n    /*\r\n    //trigger Player1\r\n    triggerRespawn(0,2,97.43,30, 30, 10);\r\n    triggerRespawn(7.5,2,48,1, 30,90);\r\n    triggerRespawn(-7.5,2,48,1, 30,90);\r\n\r\n    //trigger Player2\r\n    triggerRespawn(30,2,97.43,30, 30, 10);\r\n    triggerRespawn(20,2,48,1, 30,90);\r\n    triggerRespawn(35.5,2,48,1, 30,90);*/\r\n\r\n    respawnPlayerInput(player1,player2);\r\n\r\n    \r\n    createSkyBox();\r\n\r\n\r\n}\r\n\r\nfunction launch() {\r\n      \r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -22), scene);\r\n    camera.inertia = 0;\r\n    camera.angularSensibility = 0;\r\n    camera.detachControl(canvas);\r\n    camera.cameraRotation = 0;\r\n    scene.activeCameras.push(camera);\r\n    \r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1);\r\n    scene.activeCameras.push(camera);\r\n\r\n\r\n    var camera2 = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(25, 4, -23), scene);\r\n    camera2.inertia = 0;\r\n    camera2.angularSensibility = 0;\r\n    camera2.detachControl(canvas);\r\n    camera2.cameraRotation = 0;\r\n    scene.activeCameras.push(camera2);\r\n    camera2.viewport = new BABYLON.Viewport(0.5,0 , 0.5, 1);\r\n    scene.activeCameras.push(camera2);\r\n    \r\n   \r\n\r\n \r\n\r\n    sceneData();\r\n  \r\n\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n    //console.log(playerMesh2);\r\n    //console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n    \r\n    camera.lockedTarget = playerMesh;\r\n    //camera2.lockedTarget = playerMesh2;\r\n\r\n    engine.runRenderLoop(function () {\r\n\r\n        scene.render();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerRespawn(x,y,z,sizeX,sizeY,sizeZ){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(sizeX,sizeY,sizeZ),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    //let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Respawn\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n    \r\n\r\n    \r\n    //Aggregate.dispose();\r\n    \r\n}\r\n\r\nfunction eventHandler(hk,player1,player2){\r\n\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n       \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n            console.log(\"YOU WINNNNNNN\")\r\n            //killLevel();\r\n            //loadNextLevel();\r\n            player1 = null;\r\n  \r\n\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Respawn\" && ( ev.collider.transformNode.name == \"player1\" || ev.collider.transformNode.name == \"player2\" ) ){\r\n            console.log(\"YOU RESPAWNWNNN\");\r\n\r\n            if(ev.collider.transformNode.name == \"player1\"){\r\n                let ball1 = scene.getMeshByName(\"player1\");\r\n         \r\n                player1.disableThisObject();\r\n                //player1 = null;\r\n                ball1.dispose();\r\n                \r\n                player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',-5,5,0);\r\n            \r\n     \r\n            }else{\r\n                let ball2 = scene.getMeshByName(\"player2\");\r\n                player2.disableThisObject();\r\n                //player2 = null;\r\n                ball2.dispose()\r\n\r\n                player2= new PlayerLevel3(scene,engine,\"player2\",'j','l','i','Enter',28,5,0);\r\n              \r\n            }\r\n          \r\n         \r\n\r\n            \r\n          \r\n        }\r\n     \r\n    });\r\n\r\n   //WinParty\r\n\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nasync function testSearch(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer1++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer1);\r\n        document.getElementById(\"pin1\").innerHTML = countPlayer1 + \"/93 PINS\";\r\n\r\n  \r\n        if(countPlayer1 >=93){\r\n            sceneManager.setcountPlayer1()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2:\"+sceneManager.winCountPlayer2)\r\n        }\r\n        \r\n      \r\n   \r\n        if(countPlayer1 >= 93 ){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n       \r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\nasync function testSearch2(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer2++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer2);\r\n\r\n\r\n        document.getElementById(\"pin2\").innerHTML = countPlayer2 + \"/93 PINS\";\r\n  \r\n     \r\n        if(countPlayer2 >92){\r\n            sceneManager.setcountPlayer2()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2\"+sceneManager.winCountPlayer2)\r\n\r\n        }\r\n   \r\n        if(countPlayer2 >= 93){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\n\r\n\r\n\r\nfunction addQuille( listeQuilles1,x,y,z){\r\n\r\n\r\n    listeQuilles1 = [\r\n        //-3\r\n        new BowlingPin(scene, 0.25+x, 2+y,21+z),\r\n        //-2\r\n             \r\n        //new BowlingPin(scene, 0, 2, 21.5),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y,21.5+z),\r\n        new BowlingPin(scene, 0.50+x, 2+y,21.5+z),\r\n        //new BowlingPin(scene, 0.60, 2,21.5),\r\n      \r\n\r\n\r\n        //-1\r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0.25+x, 2+y, 22+z),\r\n        new BowlingPin(scene, 0.60+x, 2+y,22+z),\r\n        \r\n      \r\n\r\n\r\n        //0\r\n        new BowlingPin(scene, -0.5+x, 2+y, 22.5+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,22.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,22.5+z),\r\n        \r\n        //1\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23+z),\r\n   \r\n        //2\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 23.5+z),\r\n\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,23.5+z),\r\n      \r\n        \r\n        //3\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24+z),\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24+z),\r\n        \r\n        //4\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 24.5+z),\r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 24.5+z),\r\n       \r\n\r\n\r\n        \r\n        //5\r\n\r\n        new BowlingPin(scene, -0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25+z),\r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25+z),\r\n        //new BowlingPin(scene, 4, 2, 25),\r\n        \r\n        \r\n\r\n       //6\r\n       \r\n        new BowlingPin(scene, -0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 25.5+z),\r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 25.5+z),\r\n   \r\n        \r\n\r\n        //7\r\n        new BowlingPin(scene, -0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -4+x, 2+y, 26+z),\r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 26+z),  \r\n        new BowlingPin(scene, 2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4.5+x, 2+y, 26+z),\r\n\r\n        //listeQuilles1.forEach(pin => pin.position.y += 5)\r\n    \r\n     \r\n    ];\r\n    return listeQuilles1;\r\n}\r\n\r\nfunction respawnPlayerInput() {\r\n    // Ajouter un écouteur d'événements pour la touche \"espace\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.key === 'Shift') {\r\n            // Code à exécuter lorsque la touche \"espace\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"espace\" a été enfoncée');\r\n            let ball1 = scene.getMeshByName(\"player1\");\r\n            player1.disableThisObject();\r\n            ball1.dispose();\r\n            player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8,'d','a');\r\n            \r\n        //document.getElementById(\"pin1\").innerText = countPlayer1+\"/93 PINS\";\r\n        \r\n        // Modifier le texte de l'élément avec l'identifiant \"pin2\"\r\n  \r\n        }\r\n    });\r\n\r\n    // Ajouter un écouteur d'événements pour la touche \"entrée\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.code === 'Backspace') {\r\n            // Code à exécuter lorsque la touche \"entrée\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"entrée\" a été enfoncée');\r\n            let ball2 = scene.getMeshByName(\"player2\");\r\n            player2.disableThisObject();\r\n            ball2.dispose();\r\n            player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n            //document.getElementById(\"pin2\").innerText = countPlayer2+\"/93 PINS\";\r\n       \r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchEnd();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox2/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\nexport { name, scene, sceneData, launch };\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Portal_2_End_Credits.mp3\");\r\n//let soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n    defaultLoadingScreen();\r\n    soundManager.initMusic();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  \r\n    // Création d'une caméra\r\n        const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n        //camera.attachControl()\r\n    screen();\r\n     // Attendre quelques secondes avant de charger le niveau suivant\r\n    setTimeout(function () {\r\n        soundManager.destroy();\r\n        loadNextLevel();\r\n    }, 60000); \r\n    //loadNextLevel();\r\n   \r\n}\r\nasync function screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 100,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    // Options pour la texture vidéo, y compris la lecture audio\r\n    var videoTextureOptions = {\r\n        loop: false, // Désactivé la boucle\r\n        autoPlay: false, // Désactiver la lecture automatique pour éviter les erreurs\r\n        autoUpdateTexture: true,\r\n        poster: null,\r\n        muted: true // Initialement en mode muet\r\n    };\r\n\r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"./models/video/Ending crédits.mp4\", scene, true, false, videoTextureOptions);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n\r\n    // Démarre la vidéo en mode muet pour éviter les restrictions du navigateur\r\n    videoTexture.video.play();\r\n\r\n    // Gestionnaire d'événement pour activer le son après un clic sur le canvas\r\n    var canvas = document.getElementById('renderCanvas');\r\n    canvas.addEventListener('click', function() {\r\n        // Désactiver le mode muet et redémarrer la vidéo\r\n        videoTexture.video.muted = true;\r\n        videoTexture.video.play();\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\nfunction loadNextLevel(){\r\n    \r\n    killLevel();\r\n    location.reload();\r\n    //sceneManager.launchLevelMenu();\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n    engine.stopRenderLoop();\r\n \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            //displayControlUI();\r\n        }, 3000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\nexport {  scene, launch };","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n//\r\nvar createScene = function () {\r\n\r\n  \r\n    defaultLoadingScreen();\r\n\r\n\r\n   \r\n    // GUI\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   // Création d'une caméra\r\n    const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(46, 4, -76), scene);\r\n    camera.setTarget(new BABYLON.Vector3(46, 4.2, -75));\r\n    //camera.attachControl()\r\n  \r\n   //screen();\r\n\r\n    let menu = new CustomModels(scene);\r\n    menu.CreateMenu3dScene(0,0,0);\r\n\r\n    displayMenu();\r\n   \r\n    createSkyBox();\r\n \r\n\r\n    //createMusicButton();\r\n    //scene.debugLayer.show();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayMenu(){\r\n\r\n\r\n  \r\n    advancedTexture2 = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_text\");\r\n\r\n    button();\r\n    buttonCredit();\r\n    \r\n    // Création du texte en haut de la page\r\n    const headerText = new BABYLON.GUI.TextBlock();\r\n    headerText.text = \"The Cursed Olympic Games\";\r\n    headerText.color = \"black\";\r\n    headerText.fontSize = 100;\r\n    headerText.fontFamily = \"UnifrakturCook\";\r\n   \r\n   // headerText.fontFamily = \"Pirata One\"; // Utiliser la police Pirata One ici\r\n    headerText.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n    headerText.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP; // Modifier cette ligne\r\n    headerText.paddingTop = \"-500px\"; // Ajout de 20px de padding en haut\r\n    advancedTexture2.addControl(headerText);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    advancedTexture2.dispose();\r\n    advancedTexture.dispose();\r\n    engine.stopRenderLoop();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    //sceneManager.launchLevel2();\r\n    soundManager.stopMusic();\r\n    sceneManager.launchStart();\r\n}\r\n\r\nfunction loadCredits(){\r\n    //sceneManager.launchLevel2();\r\n    soundManager.stopMusic();\r\n    sceneManager.launchCredit();\r\n}\r\n\r\nfunction button(){\r\n    // Création du GUI\r\nadvancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"Play\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    soundManager.stopMusic();\r\n    loadNextLevel();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\nfunction buttonCredit(){\r\n    // Création du GUI\r\n//advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"C r e d i t s\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\nplayButton.top = \"100px\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    soundManager.stopMusic();\r\n    loadCredits();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\n\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    //skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nfunction screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 80,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    \r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"video/Loading.mp4\", scene);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n    \r\n}\r\n\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            soundManager.initMusic();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\nexport {  scene, launch };","// Importez les modules \"scene1.js\" et \"scene2.js\" pour accéder à leurs fonctionnalités\r\nimport * as start from './cinematique.js';\r\nimport * as end from './End.js';\r\nimport * as scene2 from './scene2.js'\r\nimport * as scene3 from './scene3.js'\r\nimport * as scene4 from './scene4.js'\r\nimport * as credit from './cinematique_credit.js'\r\nimport * as menu from './Menu.js'\r\n\r\nlet winCountPlayer1 =0;\r\nlet winCountPlayer2 =0;\r\n// Fonctions principales\r\nfunction Main() {\r\n    \r\n    // Appelez la fonction \"launch\" du module \"level2\" pour lancer la scène 2\r\n    \r\n    //launchEnd();\r\n   \r\n    //launchLevel2();\r\n   //launchLevel3();\r\n   //launchLevel4();\r\n    //launchCredit();\r\n    launchLevelMenu();\r\n   //launchStart();\r\n    \r\n\r\n   \r\n}\r\nfunction launchLevelMenu(){\r\n    \r\n    menu.launch();\r\n}\r\nfunction launchEnd(){\r\n    \r\n    end.launch();\r\n}\r\nfunction launchLevel2(){\r\n    scene2.killLevel();\r\n    scene2.launch();\r\n}\r\n\r\n\r\nfunction launchLevel3(){\r\n    \r\n   scene3.launch();\r\n}\r\n\r\nfunction launchLevel4(){\r\n    \r\n    scene4.launch();\r\n}\r\nfunction launchStart(){\r\n    \r\n    start.launch();\r\n}\r\n\r\nfunction launchCredit(){\r\n    \r\n    credit.launch();\r\n}\r\n\r\nfunction setcountPlayer1(){\r\n    winCountPlayer1++;\r\n}\r\nfunction setcountPlayer2(){\r\n    winCountPlayer2++;\r\n}\r\n\r\n \r\n// Exportez toutes les fonctions d'un coup\r\nexport { Main, launchEnd, launchLevel2, launchLevel3, launchLevel4,setcountPlayer1,setcountPlayer2,launchLevelMenu,launchStart,launchCredit,winCountPlayer1,winCountPlayer2 };\r\n\r\n\r\n// Exécute la fonction principale\r\nMain();\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","scene","musicName","this","musicSound","volumeSlider","document","addEventListener","initVolumeSlider","initMusic","music","BABYLON","Sound","loop","autoplay","updateVolume","window","Engine","audioEngine","audioContext","state","resume","then","once","sliderId","getElementById","setVolume","value","stopMusic","stop","destroy","removeEventListener","clickHandler","canvas","engine","Scene","soundManager","createScene","displayLoadingUI","executeWhenReady","setTimeout","hideLoadingUI","HemisphericLight","Vector3","FreeCamera","async","planeOpts","height","width","sideOrientation","Mesh","DOUBLESIDE","videoPlane","MeshBuilder","CreatePlane","position","videoMaterial","StandardMaterial","videoTexture","VideoTexture","autoPlay","autoUpdateTexture","poster","muted","diffuseTexture","roughness","emissiveColor","Color3","White","material","video","play","screen","meshes","forEach","mesh","dispose","cameras","lights","light","stopRenderLoop","style","display","playerWin","playerLoose","trophy","SceneLoader","ImportMesh","console","log","name","x","y","z","undefined","skybox","CreateBox","size","skyboxMaterial","backFaceCulling","disableLighting","infiniteDistance","reflectionTexture","CubeTexture","coordinatesMode","Texture","SKYBOX_MODE","createSkyBox","CustomModels","CreateTree","tree","tronc","PhysicsAggregate","PhysicsShapeType","BOX","mass","shape","isTrigger","boundingBox","CreatePineTree","scaling","shapeBox1","PhysicsShapeBox","Quaternion","shapeBox2","CreateSnowManOnSki","parent","setParent","CreateSceneProd","CreatePlayer","Zone","plane","ground","CreateGround","subdivisions","addInPlace","rotation","groundMaterial","diffuseColor","flatplane","createDeadTree","globalMesh","createSnowTree","createLitleSnowTree","createSnowMan","CreateRampe1","bigMesh","elment","MESH","createSnowMount","element","createFinalScene2","getMeshByName","i","length","CreatePlateform","CreatePlateformlevel2","CreatePlateform_Scene4","CreateBowlingPlatform","CreateBowlingBall","SPHERE","CreateColiseum","CreateMenu3dScene","Createlevel1","character","forward","backward","left","right","forward2","backward2","left2","right2","setupKeyboardInput","forwardI","keys","event","runRenderLoop","transformNode","scale","applyForce","setAngularVelocity","ZeroReadOnly","canvas2","PlayerLevel1","boxBody","testPlayer","enablePlayerControl","box","depth","isVisible","rotationQuaternion","Identity","boxShape","PhysicsBody","PhysicsMotionType","DYNAMIC","setMassProperties","blueMaterial","setCollisionCallbackEnabled","destroyPlayer","control","ShowLoadingScreen","player","reloadlevel","character1","input1","inputJump","animationGroup","setupKeyboardInputPlayer","isKeyPressed","isKeyPressed2","engine2","jump","boxMesh","animationGroups","createPlayer","visibility","Character","ImportMeshAsync","push","animGestionner","inputLeft","inputRight","inputLaunch","inputLeft2","inputRight2","destroyed","action","input2","isUpperCase","input","toUpperCase","getLastKeyPressed","lastKeyPressed","sphereBody","rayHelper","shootBall","control2","CharacterController3","sphere","CreateSphere","segments","diameter","sphereShape","PhysicsShapeSphere","disableThisObject","Aggregate","meshIdPromise","createBowlingPin","Promise","resolve","_z","body","meshId","uniqueId","getMeshId","isPinUp","toEulerAngles","Math","abs","player1","player2","countPlayer1","countPlayer2","addQuille","listeQuilles1","location","reload","winCountPlayer1","winCountPlayer2","launchEnd","render","launchLevel2","camera","FollowCamera","cameraRotation","viewport","Viewport","camera2","activeCameras","havokInstance","HavokPhysics","hk","HavokPlugin","enablePhysics","collisionsEnabled","triggerDie","place","playerMesh","onTriggerCollisionObservable","add","ev","type","collider","collidedAgainst","eventHandler","sceneData","playerMesh2","lockedTarget","catch","error","launchLevel3","triggerEnd","onPointerDown","evt","pickResult","hit","pickedMesh","playerMesh1","launchLevel4","inertia","angularSensibility","detachControl","model","listeQuilles2","ball1","ball2","countPlayer","playerText","splice","innerHTML","testSearch","testSearch2","code","launchStart","launchCredit","setcountPlayer1","setcountPlayer2","setTarget","GUI","AdvancedDynamicTexture","CreateFullscreenUI","playButton","Button","CreateSimpleButton","color","cornerRadius","background","thickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","pointerEnterAnimation","pointerOutAnimation","children","fontFamily","onPointerClickObservable","addControl","top","buttonCredit","headerText","TextBlock","text","fontSize","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_CENTER","verticalAlignment","VERTICAL_ALIGNMENT_TOP","paddingTop","displayMenu"],"sourceRoot":""}