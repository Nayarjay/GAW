{"version":3,"file":"js/babylonBundle.js","mappings":"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","sources":["webpack://gaw/webpack/bootstrap","webpack://gaw/webpack/runtime/define property getters","webpack://gaw/webpack/runtime/hasOwnProperty shorthand","webpack://gaw/./game/SoundManager.js","webpack://gaw/./game/End.js","webpack://gaw/./game/CustomModels.js","webpack://gaw/./game/CharacterController.js","webpack://gaw/./game/PlayerLevel1.js","webpack://gaw/./game/scene2.js","webpack://gaw/./game/CharacterController2.js","webpack://gaw/./game/PlayerLevel2.js","webpack://gaw/./game/scene3.js","webpack://gaw/./game/CharacterController3.js","webpack://gaw/./game/PlayerLevel3.js","webpack://gaw/./game/BowlingPin.js","webpack://gaw/./game/scene4.js","webpack://gaw/./game/Menu.js","webpack://gaw/./game/SceneManager.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","class SoundManager {\r\n    constructor(scene,  musicName) {\r\n        this.scene = scene;\r\n\r\n        this.musicName = musicName;\r\n        this.musicSound = null;\r\n    }\r\n\r\n    initMusic() {\r\n        const music = () => {\r\n            this.musicSound = new BABYLON.Sound(\"\", \"./models/Music/\"+this.musicName, this.scene, null, {\r\n                loop: true,\r\n                autoplay: true,\r\n            });\r\n        };\r\n\r\n        window.addEventListener('click', () => {\r\n            if (BABYLON.Engine.audioEngine.audioContext.state === 'suspended') {\r\n                BABYLON.Engine.audioEngine.audioContext.resume().then(() => {\r\n                    music();\r\n                });\r\n            } else {\r\n                music();\r\n            }\r\n        }, { once: true });\r\n    }\r\n\r\n    stopMusic() {\r\n        if (this.musicSound) {\r\n            this.musicSound.stop();\r\n        }\r\n    }\r\n}\r\nexport default SoundManager;","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"End.mp3\");\r\n\r\nvar createScene = function () {\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 4, -12.5), scene);\r\n\r\n    //camera.attachControl();\r\n    if(sceneManager.winCountPlayer1 > sceneManager.winCountPlayer2){\r\n        playerWin(-4,0,-1);\r\n        playerLoose(2,0,0);\r\n        trophy(-3.5,0,-1.5);\r\n\r\n    }else{\r\n        playerWin(2,0,-1);\r\n        playerLoose(-4,0,0);\r\n        trophy(2.5,0,-1.5);\r\n    }\r\n\r\n    //scene.debugLayer.show();\r\n    displayControlUI();\r\n    loadEndScene();\r\n    soundManager.initMusic();\r\n    createSkyBox();   \r\n    //hideControlUI();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\nfunction hideControlUI(){\r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n\r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n\r\n}\r\nfunction playerLoose(x,y,z){\r\n    \r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Loose.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerLoose\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n\r\n\r\n}\r\nfunction playerWin(x,y,z){\r\n  \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"victory.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n}\r\n\r\nfunction loadEndScene(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"recommencer.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi end scene\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"EndScene\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\nfunction trophy(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Trophy.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nexport {  scene, launch };\r\n\r\n","\r\n\r\n\r\nexport class CustomModels {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    \r\n    \r\n    /** ######################################################################## LEVEL2 3D MODEL #########################################################################**/\r\n\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    async CreateTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n         \r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            \r\n        \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    async CreatePineTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        return   BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            meshes[0].scaling.x = 3\r\n            meshes[0].scaling.y = 2\r\n            meshes[0].scaling.z = 4\r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n            //troncAggregate.shape.\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, shapeBox2, { mass: 0 }, this.scene);\r\n           \r\n            \r\n        \r\n           //return boundingBox;\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n       \r\n    }\r\n\r\n\r\n\r\n    CreateSnowManOnSki(x, y, z,parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        // Charger le modèle 3D\r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"snowman_on_skis.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi SnowMan\", meshes);\r\n            mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n            mesh.name = \"SnowMan\";\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne le modèle une fois chargé\r\n            mesh.setParent(parent);\r\n \r\n            //mesh.rotationQuaternion._y = 85;\r\n\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n    \r\n        return { mesh }; // Retourne mesh\r\n    }\r\n    \r\n    \r\n  \r\n    \r\n   \r\n    async CreateSceneProd(x, y, z) {\r\n       \r\n    }\r\n    async CreatePlayer(x, y, z) {\r\n        \r\n    }\r\n      \r\n    async Zone(x, y, z) {\r\n      \r\n     \r\n    }\r\n\r\n    async plane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(-0.1, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n\r\n    async flatplane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(0, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n    async createDeadTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Dead Trees With Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 30\r\n            meshes[0].scaling.y = 20\r\n            meshes[0].scaling.z = 20\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(30, 30, 30),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n\r\n  \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Snow Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createLitleSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow two.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowMan(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"SnowManRotated.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 1\r\n            meshes[0].scaling.y = 1\r\n            meshes[0].scaling.z = 1\r\n      \r\n            let globalMesh = meshes[0];\r\n            \r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(\"SNOWMAN \"+globalMesh.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateRampe1(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"rampe_2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n \r\n            meshes[0].scaling.x = 5\r\n            meshes[0].scaling.y = 5\r\n            meshes[0].scaling.z = 5\r\n   \r\n           \r\n            let mesh = meshes[0];\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            mesh.name =\"Rampe\"\r\n            let elment =meshes[1] ;\r\n           \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(elment, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n           \r\n\r\n            \r\n           // var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n    createSnowMount(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Rock Forms 3 (White).glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            meshes[0].scaling.x = 150\r\n            meshes[0].scaling.y = 150\r\n            meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            let element =meshes[1] ;\r\n            element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n          \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(element, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n\r\n    createFinalScene2(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"finalscene2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            //meshes[0].scaling.x = 150\r\n            //meshes[0].scaling.y = 150\r\n            //meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[2].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            //let element =meshes[1] ;\r\n            let element = this.scene.getMeshByName(\"Cube (sol)\");\r\n            //let element2 = this.scene.getMeshByName(\"Cube (sol)\") ;\r\n            //let element3 = this.scene.getMeshByUniqueId(769) ;\r\n\r\n            //element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n\r\n            //console.log();\r\n        \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                i++\r\n            }\r\n            \r\n          \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n    \r\n    \r\n    \r\n    /** ######################################################################## Scene3 3D MODEL #########################################################################**/\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreatePlateform(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"plateforme_scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n        CreatePlateformlevel2(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform level2\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n\r\n\r\n /** ######################################################################## Scene4 3D MODEL #########################################################################**/\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    CreatePlateform_Scene4(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene4_gameplay_ELEMENT.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingPlatform(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene_de_bowling.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingBall(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Spiky Ball.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi ball\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n          \r\n            mesh.name =\"ball\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, BABYLON.PhysicsShapeType.SPHERE, { mass: 0 }, this.scene);\r\n         \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** ######################################################################## MENU 3D MODEL #########################################################################**/\r\n\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n               // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n    \r\n                //var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n               // troncAggregate.shape.isTrigger =  true;\r\n    \r\n                \r\n                //var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n\r\n                 \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n          // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateMenu3dScene(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"fmenu.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi du menu\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"fondMenu\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n        async Createlevel1(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"level2Map.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n        \r\n    \r\n            return { boundingBox };\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n    \r\n   \r\n}\r\n","class CharacterController {\r\n    constructor(canvas , engine, character,forward,backward,left,right) {\r\n        this.setupKeyboardInput(canvas, engine, character,forward,backward,left,right);\r\n    }\r\n\r\n    setupKeyboardInput(canvas, engine, character,forwardI,backward,left,right) {\r\n        this.keys = {};\r\n\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            this.keys[event.key] = true;\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            // Vérifie l'état des touches dans l'objet \"keys\" et effectue des actions en conséquence.\r\n\r\n            if (this.keys[forwardI]) {\r\n                //console.log('Touche Z enfoncée');\r\n                \r\n                let forward = character.transformNode.forward.scale(-5);\r\n               //console.log(forward);\r\n\r\n                character.applyForce(forward , character.transformNode.position);\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n          \r\n            }\r\n\r\n            if (this.keys[backward]) {\r\n                //console.log('Touche S enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(0, 0, 5), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                //charater.position.z += 0.1; // Déplace le personnage vers l'avant (positif sur l'axe z).\r\n            }\r\n\r\n            if (this.keys[left]) {\r\n                //console.log('Touche Q enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, -0.5, 0));\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.position.x += 0.1; // Déplace le personnage vers la gauche (positif sur l'axe x).\r\n            }\r\n\r\n            if (this.keys[right]) {\r\n                //console.log('Touche D enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(-5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0.5, 0));\r\n                //character.position.x -= 0.1; // Déplace le personnage vers la droite (négatif sur l'axe x).\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController;\r\n","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n\r\n\r\n\r\n\r\nexport class PlayerLevel1 {\r\n\r\n    constructor(scene,engine,name,forward,backward,left,right,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.boxBody ;\r\n\r\n        this.testPlayer(scene,engine,name,x,y,z);\r\n        this.enablePlayerControl(forward,backward,left,right);\r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n\r\n        \r\n\r\n\r\n       \r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n\r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        box.isVisible = false;\r\n\r\n        let snowMan = new CustomModels(scene).CreateSnowManOnSki(x,y-0.5,z,box);\r\n      \r\n\r\n        \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        \r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n\r\n        //rotate character\r\n      \r\n      \r\n        this.boxBody = boxBody;\r\n        \r\n     \r\n        \r\n      \r\n     \r\n        \r\n    \r\n       \r\n \r\n        return box;\r\n    \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(forward,backward,left,right){\r\n       let control = new CharacterController(canvas2,this.engine,this.boxBody,forward,backward,left,right);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel1;","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nimport {PlayerLevel1} from \"./PlayerLevel1.js\";\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\nlet soundManager = new SoundManager(scene,\"level1.mp3\");\r\nlet advancedTexture ;\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nvar name = \"level2\";\r\nvar value = \"start\";     \r\n//var player = new PlayerLevel1(scene);\r\n\r\nasync function getInitializedHavok() {\r\n  return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //displayControlUI();\r\n    // Ajoutez une lumière hémisphériques\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    \r\n    const havokInstance = await HavokPhysics();\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n   \r\n    \r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0),  hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n\r\n    var sceneprod = new CustomModels(scene);\r\n\r\n   soundManager.initMusic();\r\n\r\n    let x = -10;\r\n\r\n\r\n//********************************************************** PART 5 LEVEL ******************************************************************************/////////////////\r\n    //rajoute d'un plane\r\n    \r\n\r\n\r\n    //trigger to die and pass\r\n    triggerDie(-1.79, -1.02, -832.37);\r\n    \r\n\r\n    \r\n\r\n    displayControlUI();\r\n\r\n   //testPlayer();\r\n\r\n\r\n    \r\n   //montrer le layer\r\n   //scene.debugLayer.show();\r\n   \r\n   \r\n\r\n    var place = new CustomModels(scene);\r\n    //place.createFinalScene2(4,-24,-970);\r\n   \r\n    await place.Createlevel1(0,0,-800)\r\n    \r\n\r\n    \r\n   let player = new PlayerLevel1(scene,engine,'player1','z','s','q','d',5,170,0);\r\n\r\n   let player2 = new PlayerLevel1(scene,engine,'player2','ArrowUp','ArrowDown','ArrowLeft','ArrowRight',0,170,0);\r\n \r\n\r\n    \r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n\r\n    \r\n    eventHandler(hk,player);\r\n    createSkyBox();\r\n   return playerMesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getScene() {\r\n    return scene;\r\n}\r\n\r\n\r\n\r\nfunction triggerDie(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(40, 40, 40),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction eventHandler(hk,player){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"tronc\"){\r\n                console.log(\"End OF the Game\")\r\n                reloadlevel();\r\n               \r\n                player = null;\r\n}      \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1+\"  COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n           //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n            player = null;\r\n  \r\n\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"Die\"){\r\n            console.log(\"YOU DIEEEEEEEEEE\");\r\n            value = \"death\";\r\n            reloadlevel();\r\n            player = null;\r\n           \r\n            //return \"death\";\r\n        }\r\n    });\r\n}\r\n\r\nfunction launch() {\r\n \r\n    \r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 0.5);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 0.5); \r\n   \r\n    scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh;\r\n        camera2.lockedTarget = playerMesh2;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n    \r\n       \r\n \r\n    engine.runRenderLoop(function () {\r\n       //console.log(value)\r\n       scene.render();\r\n       \r\n     \r\n    });\r\n    \r\n   \r\n}\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n  \r\n  \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction reloadlevel(){\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n\r\n \r\n\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel3();\r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n   // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"block\";\r\n\r\n}\r\nfunction hideControlUI(){\r\n       // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"none\";\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nexport { name, scene, sceneData, launch,killLevel };\r\n","class CharacterController2 {\r\n    constructor(canvas, scene, engine, character1, input1, inputJump,animationGroup) {\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, input1, inputJump,animationGroup);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1, inputJump,animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n\r\n                \r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n                    \r\n                 \r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                    console.log(\"Touche enfoncée, action effectuée jump\");\r\n              \r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n            \r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump ) {\r\n                isKeyPressed2 = false;\r\n                console.log(\"Touche relâchée jump\");\r\n                // Ajoutez ici la logique pour arrêter le saut du personnage si nécessaire\r\n            \r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n                //console.log(\"Touche relâchée\");\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            \r\n            if (isKeyPressed) {\r\n            \r\n                character.applyForce(new BABYLON.Vector3(0, 0, -50), new BABYLON.Vector3(0, 0, 0));\r\n    \r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n               \r\n                isKeyPressed = false;\r\n                //console.log(  animationGroup)\r\n               //animationGroup[1].play();\r\n            }\r\n            /*\r\n            if (isKeyPressed2) {\r\n                character.applyForce(new BABYLON.Vector3(0, 200, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                isKeyPressed2 = false;\r\n                //animationGroup[2].play();\r\n            }\r\n            */\r\n           \r\n            character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController2 from './CharacterController2.js';\r\nvar engine2 = new BABYLON.Engine(canvas, true);\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel2 {\r\n\r\n    constructor(scene,engine,name,forward,jump,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name = name;\r\n        this.boxBody ;\r\n        this.boxMesh;\r\n        this.animationGroups = [];\r\n        this.forward = forward\r\n        this.jump = jump;\r\n        \r\n        this.createPlayer(x,y,z);\r\n        this.enablePlayerControl(forward,jump);\r\n     \r\n     \r\n    }\r\n    \r\n\r\n    async createPlayer(x,y,z){\r\n\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n        var box = BABYLON.MeshBuilder.CreateBox(this.name, {width: boxW, height: boxH, depth: boxD},this.scene);\r\n        this.boxMesh = box;\r\n        //ADD character disable box visibility \r\n        box.visibility = false;\r\n     \r\n\r\n\r\n\r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        //box.position = new BABYLON.Vector3(0,5,0);\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD),this.scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        this.boxBody = boxBody;\r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", this.scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n        this.animationGroups = await this.Character(x, y, z, box);\r\n       //console.log(this.animationGroups);\r\n      \r\n    \r\n     \r\n     \r\n \r\n        return box;\r\n    }\r\n    \r\n  \r\n \r\n    enablePlayerControl(forward,jump){\r\n       let control = new CharacterController2(canvas,this.scene,this.engine,this.boxBody,forward,jump,this.animationGroups);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n   \r\n    async Character(x, y, z, parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        const { meshes, animationGroups } = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"./models/character1_anim/\", \"animCharacter.glb\", this.scene);\r\n    \r\n        mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n        mesh.name = \"RUNNER\";\r\n        mesh.position = new BABYLON.Vector3(x, y - 1.05, z); // Positionne le modèle une fois chargé\r\n    \r\n        if (parent) {\r\n            mesh.setParent(parent); // Attacher le modèle au parent si spécifié\r\n        }\r\n        this.animationGroups.push(animationGroups) ;\r\n        // Vous pouvez ajouter des manipulations supplémentaires sur le mesh ici, comme l'échelle ou la rotation\r\n    \r\n        console.log(\"Chargement réussi Personnage\", mesh);\r\n \r\n        await this.animGestionner(canvas,this.forward,this.jump,animationGroups)\r\n        \r\n    \r\n        return { animationGroups };\r\n    }\r\n\r\n    async animGestionner(canvas, input1, inputJump, animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n\r\n\r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n\r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump) {\r\n                isKeyPressed2 = false;\r\n\r\n\r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n\r\n        engine2.runRenderLoop(() => {\r\n\r\n            if (isKeyPressed) {\r\n                isKeyPressed = false;\r\n                console.log(\"VOILA LE GROUPE :\" + animationGroup)\r\n                animationGroup[2].play();\r\n\r\n            }\r\n\r\n            if (isKeyPressed2) {\r\n\r\n                isKeyPressed2 = false;\r\n                //animationGroup[1].play();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel2;","var canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level2.mp3\");\r\nvar name = \"level3\";\r\nimport SoundManager from './SoundManager.js';\r\nimport { CustomModels } from './CustomModels.js';\r\nimport CharacterController2 from './CharacterController2.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport PlayerLevel2 from './PlayerLevel2.js';\r\n\r\nasync function getInitializedHavok() {\r\n    return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n   \r\n\r\n    // Configurez une caméra\r\n   \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    //var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n\r\n\r\n    //var devcamera = new DevCamera(canvas, scene);\r\n    // Positionnez le cube où vous le souhaitez\r\n\r\n    triggerEnd(5,11,-620);\r\n    eventHandler(hk);\r\n\r\n    // Ajoutez l'événement de clic à la scène\r\n    scene.onPointerDown = function (evt, pickResult) {\r\n        onPointerDown(evt, pickResult);\r\n    };\r\n\r\n    var plane2 = new CustomModels(scene);\r\n    //plane2.CreatePlateform(0,0, -472,678);\r\n    plane2.CreatePlateformlevel2(-7,14, -265);\r\n    displayControlUI();\r\n\r\n\r\n     \r\n    let player1 = new PlayerLevel2(scene,engine,\"player1\",'s','f', 0,20,0);\r\n    let player2 = new PlayerLevel2(scene,engine,\"player2\",'k','m',-14,20,0);\r\n   //scene.debugLayer.show();\r\n\r\n   createSkyBox();\r\n\r\n}\r\n\r\nfunction launch() {\r\n   \r\n\r\n    \r\n   \r\n    //var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 0.5);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(-3, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 0.5); \r\n   \r\n    //scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n    scene.activeCameras.push(camera)\r\n\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(\"MESH PLAYER2\"+playerMesh2); // Utilisez playerMesh comme nécessaire\r\n\r\n        let playerMesh1 = scene.getMeshByName(\"player1\");\r\n        //console.log(\"MESH PLAYER2\"+playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh2;\r\n        camera2.lockedTarget = playerMesh1;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n    engine.runRenderLoop(function () {\r\n        scene.render();\r\n    });\r\n}\r\n\r\n// Fonction appelée lorsqu'un clic est détecté\r\nfunction onPointerDown(evt, pickResult) {\r\n    if (pickResult.hit) {\r\n        // Votre code d'interaction ici, par exemple, changez la couleur de l'objet\r\n        if(pickResult.pickedMesh.name ==\"player\"){\r\n\r\n            pickResult.pickedMesh.material.diffuseColor = new BABYLON.Color3(0, 1, 0); // Vert\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerEnd(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(60, 2, 2000),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n\r\n    var boxW = 40;\r\n    var boxH = 40;\r\n    var boxD = 40;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n        \r\n        \r\n  \r\n    var Aggregate2 =new BABYLON.PhysicsAggregate(box, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, scene);\r\n    Aggregate2.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\nfunction eventHandler(hk){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n   \r\n   \r\n\r\n            //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n\r\n        }\r\n      \r\n    });\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel4();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox3/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nexport { name, scene, sceneData, launch };\r\n","class CharacterController2 {\r\n    constructor(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch) {\r\n        this.destroyed = false;\r\n        this.action = false;\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1,input2, inputJump,inputLaunch) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n         \r\n             \r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n       \r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n          \r\n            if(!this.destroyed){\r\n                if (this.keys[input1] ) {\r\n                    //console.log('Touche gauche enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            \r\n                }\r\n\r\n                if (this.keys[input2] ) {\r\n                    //console.log('Touche Droite enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(-5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n         \r\n                if (this.keys[inputLaunch] && !this.action) {\r\n                    //console.log('Touche LAUNCH enfoncée');\r\n                    this.action = true;\r\n                    character.applyForce(new BABYLON.Vector3(0, 0, 700*4), new BABYLON.Vector3(0, 0, 0));\r\n                    //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            }\r\n        });\r\n\r\n       \r\n    }\r\n\r\n\r\n    destroy() {\r\n     \r\n        this.destroyed = true;\r\n\r\n        // Libérez les références aux objets\r\n        this.canvas = null;\r\n        this.engine = null;\r\n\r\n        //this.character1.dispose();\r\n        this.character1 = null;\r\n        this.inputLeft = null;\r\n        this.inputRight = null;\r\n        this.inputJump = null;\r\n        this.inputLaunch = null;\r\n\r\n        // Réinitialisez ou supprimez d'autres ressources si nécessaire\r\n    }\r\n    isUpperCase(input,key) {\r\n        return key === input.toUpperCase();\r\n    }\r\n    getLastKeyPressed() {\r\n        return this.lastKeyPressed; // Fonction pour récupérer la dernière touche enfoncée\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController3 from './CharacterController3.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel3 {\r\n\r\n    constructor(scene,engine,name,left,right,jump,action,x,y,z) {\r\n        this.control;\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name= name;\r\n        this.boxBody ;\r\n        this.sphereBody;\r\n        this.box;\r\n        this.rayHelper;\r\n        //this.testPlayer(scene,engine,name,x,y,z);\r\n      \r\n        this.shootBall(left,right,jump,action,x,y,z);\r\n    \r\n        this.enablePlayerControl(left,right,jump,action);\r\n\r\n        \r\n     \r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n       \r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        this.box =box;\r\n   \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n      \r\n       \r\n        this.boxBody = boxBody;\r\n        \r\n    \r\n     \r\n     \r\n        \r\n    \r\n\r\n      \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(inputLeft,inputRight,jump,action){\r\n\r\n        let control2 = new CharacterController3(canvas2,this.engine,this.sphereBody, inputRight,inputLeft,jump,action);\r\n        this.control = control2;\r\n     \r\n      \r\n    }\r\n\r\n   \r\n    shootBall(left,right,jump,action,x,y,z){\r\n        let segments = 16;\r\n        let diameter = 2;\r\n\r\n        const sphere = BABYLON.MeshBuilder.CreateSphere(this.name, { segments, diameter }, this.scene);\r\n        sphere.position = new BABYLON.Vector3(x,y,z);\r\n\r\n       \r\n        var sphereShape = new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),diameter-1,this.scene);\r\n        var sphereBody = new BABYLON.PhysicsBody(sphere, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        sphereBody.shape = sphereShape;\r\n        sphereBody.setMassProperties({mass : 2});\r\n\r\n       \r\n        \r\n        this.sphereBody = sphereBody;\r\n       \r\n    }\r\n    disableThisObject(){\r\n\r\n        this.control.destroy();\r\n        this.control = null;\r\n        \r\n  \r\n       \r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel3;","\r\n\r\nexport class BowlingPin {\r\n\r\n    constructor(scene,x,y,z) {\r\n       \r\n        this.scene = scene;\r\n       \r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        this.mesh;\r\n        this.Aggregate;\r\n        this.meshIdPromise = this.createBowlingPin();\r\n    }\r\n    \r\n    createBowlingPin(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Bowling Pin.glb\", this.scene, (meshes) => {\r\n\r\n             \r\n\r\n                const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                    new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                    new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                    new BABYLON.Vector3(0.5, 1.2, 0.5),      // dimensions of the box\r\n                    this.scene                                // scene of the shape\r\n                );\r\n        \r\n\r\n                let boxKid = BABYLON.MeshBuilder.CreateBox(\"Pintrigger\");\r\n                //boxKid.isVisible = false;\r\n\r\n                //console.log(\"Chargement réussi Pin\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                mesh.scaling._z =  mesh.scaling._z *-1;\r\n                mesh.name =\"Pin\"\r\n\r\n  \r\n            \r\n        \r\n                mesh.position = new BABYLON.Vector3(this.x, this.y, this.z); // Positionne l'objet\r\n            \r\n\r\n            \r\n                var Aggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0.1 }, this.scene);\r\n                Aggregate.body.setCollisionCallbackEnabled(true);\r\n                this.Aggregate = Aggregate;\r\n                this.mesh = mesh;\r\n               \r\n                const meshId = mesh.uniqueId;\r\n                resolve(meshId);\r\n\r\n            }, undefined, undefined, \".glb\");\r\n        })\r\n\r\n    }\r\n  \r\n    \r\n    async getMeshId(){\r\n         return await this.meshIdPromise;\r\n    }\r\n \r\n   \r\n    disableThisObject(){\r\n        this.Aggregate.body.setCollisionCallbackEnabled(false);\r\n        this.Aggregate.body.dispose();\r\n        //this.mesh.dispose();\r\n       \r\n    }\r\n    isPinUp() {\r\n        // Récupérer la rotation de la quille\r\n        const rotation = this.mesh.rotationQuaternion.toEulerAngles();\r\n\r\n        // Définir un seuil pour la rotation, en dessous duquel la quille est considérée comme renversée\r\n        const threshold = 0.1; // À ajuster selon vos besoins\r\n\r\n        // Vérifier si la rotation autour de l'axe X (ou un autre axe selon votre modèle) dépasse le seuil\r\n        const isUp = Math.abs(rotation.x) < threshold;\r\n\r\n        return isUp;\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default BowlingPin;","import { CustomModels } from './CustomModels.js';\r\nimport CharacterController3 from './CharacterController3.js';\r\nimport PlayerLevel3 from './PlayerLevel3.js';\r\nimport BowlingPin from './BowlingPin.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level3.mp3\");\r\nvar name = \"level4\";\r\nlet advancedTexture ;\r\n\r\n\r\n\r\n\r\nlet player1;\r\nlet player2;\r\n\r\nlet countPlayer1 =0;\r\nlet countPlayer2 =0;\r\n\r\n\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n       \r\n    \r\n    \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   \r\n\r\n    var model = new CustomModels(scene);\r\n    \r\n    var listeQuilles1 = [];\r\n\r\n    \r\n\r\n    let add =13 ;\r\n    var listeQuilles2 = [];\r\n   \r\n    \r\n    \r\n\r\n\r\n \r\n   // console.log(countPlayer1);\r\n     player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8);\r\n     player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n\r\n     //let pin = new BowlingPin(scene,0,2,19.397);\r\n    \r\n   \r\n    let ball1 = scene.getMeshByName(\"player1\");\r\n    \r\n    displayControlUI();\r\n    //CreateBowlingBall(0,6,0);\r\n\r\n    eventHandler(hk,player1,player2);\r\n\r\n   // model.CreatePlateform_Scene4();\r\n    model.CreateBowlingPlatform();\r\n    listeQuilles1 =  addQuille(listeQuilles1,0,0,-8);\r\n    listeQuilles2 =  addQuille(listeQuilles2,25,0,-8);\r\n\r\n    testSearch(listeQuilles1,countPlayer1,\"player1\");\r\n    testSearch2(listeQuilles2,countPlayer2,\"player2\");\r\n\r\n    \r\n        \r\n\r\n    let ball = scene.getMeshByName(\"ball\");\r\n    \r\n    \r\n\r\n  \r\n    /*\r\n    //trigger Player1\r\n    triggerRespawn(0,2,97.43,30, 30, 10);\r\n    triggerRespawn(7.5,2,48,1, 30,90);\r\n    triggerRespawn(-7.5,2,48,1, 30,90);\r\n\r\n    //trigger Player2\r\n    triggerRespawn(30,2,97.43,30, 30, 10);\r\n    triggerRespawn(20,2,48,1, 30,90);\r\n    triggerRespawn(35.5,2,48,1, 30,90);*/\r\n\r\n    respawnPlayerInput(player1,player2);\r\n\r\n    \r\n    createSkyBox();\r\n\r\n\r\n}\r\n\r\nfunction launch() {\r\n      \r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -22), scene);\r\n    camera.inertia = 0;\r\n    camera.angularSensibility = 0;\r\n    camera.detachControl(canvas);\r\n    camera.cameraRotation = 0;\r\n    scene.activeCameras.push(camera);\r\n    \r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1);\r\n    scene.activeCameras.push(camera);\r\n\r\n\r\n    var camera2 = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(25, 4, -23), scene);\r\n    camera2.inertia = 0;\r\n    camera2.angularSensibility = 0;\r\n    camera2.detachControl(canvas);\r\n    camera2.cameraRotation = 0;\r\n    scene.activeCameras.push(camera2);\r\n    camera2.viewport = new BABYLON.Viewport(0.5,0 , 0.5, 1);\r\n    scene.activeCameras.push(camera2);\r\n    \r\n   \r\n\r\n \r\n\r\n    sceneData();\r\n  \r\n\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n    //console.log(playerMesh2);\r\n    //console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n    \r\n    camera.lockedTarget = playerMesh;\r\n    //camera2.lockedTarget = playerMesh2;\r\n\r\n    engine.runRenderLoop(function () {\r\n\r\n        scene.render();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerRespawn(x,y,z,sizeX,sizeY,sizeZ){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(sizeX,sizeY,sizeZ),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    //let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Respawn\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n    \r\n\r\n    \r\n    //Aggregate.dispose();\r\n    \r\n}\r\n\r\nfunction eventHandler(hk,player1,player2){\r\n\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n       \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n            console.log(\"YOU WINNNNNNN\")\r\n            //killLevel();\r\n            //loadNextLevel();\r\n            player1 = null;\r\n  \r\n\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Respawn\" && ( ev.collider.transformNode.name == \"player1\" || ev.collider.transformNode.name == \"player2\" ) ){\r\n            console.log(\"YOU RESPAWNWNNN\");\r\n\r\n            if(ev.collider.transformNode.name == \"player1\"){\r\n                let ball1 = scene.getMeshByName(\"player1\");\r\n         \r\n                player1.disableThisObject();\r\n                //player1 = null;\r\n                ball1.dispose();\r\n                \r\n                player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',-5,5,0);\r\n            \r\n     \r\n            }else{\r\n                let ball2 = scene.getMeshByName(\"player2\");\r\n                player2.disableThisObject();\r\n                //player2 = null;\r\n                ball2.dispose()\r\n\r\n                player2= new PlayerLevel3(scene,engine,\"player2\",'j','l','i','Enter',28,5,0);\r\n              \r\n            }\r\n          \r\n         \r\n\r\n            \r\n          \r\n        }\r\n     \r\n    });\r\n\r\n   //WinParty\r\n\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nfunction pinsCount(hk){\r\n\r\n    hk.onCollisionObservable.add((ev) => {\r\n        //console.log(ev.type);\r\n        //console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n       //check if Pin is collided add count to counter of the player\r\n   \r\n       if(ev.collidedAgainst.transformNode.name ==\"Pin\" ){\r\n            //console.log(\"YOU collide a pin\");\r\n            let uniqueId =ev.collidedAgainst.transformNode.uniqueId;\r\n            //console.log(ev.collidedAgainst.transformNode.uniqueId);\r\n            //list.push();\r\n            if(ev.collider.transformNode.name == \"player2\"){\r\n\r\n                //console.log(\"player1 IS ON THE PLACE\")\r\n\r\n                testSearch(uniqueId);\r\n              \r\n                countPlayer1++;\r\n                //console.log(countPlayer1);\r\n                \r\n            }\r\n      \r\n        }\r\n});\r\n\r\n}\r\n\r\nasync function testSearch(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer1++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer1);\r\n        document.getElementById(\"pin1\").innerHTML = countPlayer1 + \"/93 PINS\";\r\n\r\n  \r\n        if(countPlayer1 >=93){\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            console.log(\"PLAYER2:\"+sceneManager.winCountPlayer2)\r\n        }\r\n        \r\n      \r\n   \r\n        if(countPlayer1 >= 93 ||countPlayer2 >= 93){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\nasync function testSearch2(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer2++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer2);\r\n\r\n\r\n        document.getElementById(\"pin2\").innerHTML = countPlayer2 + \"/93 PINS\";\r\n  \r\n     \r\n        if(countPlayer2 >92){\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            console.log(\"PLAYER2\"+sceneManager.winCountPlayer2)\r\n\r\n        }\r\n   \r\n        if(countPlayer1 >= 93 ||countPlayer2 >= 93){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\n\r\n\r\n\r\nfunction addQuille( listeQuilles1,x,y,z){\r\n\r\n\r\n    listeQuilles1 = [\r\n        //-3\r\n        new BowlingPin(scene, 0.25+x, 2+y,21+z),\r\n        //-2\r\n             \r\n        //new BowlingPin(scene, 0, 2, 21.5),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y,21.5+z),\r\n        new BowlingPin(scene, 0.50+x, 2+y,21.5+z),\r\n        //new BowlingPin(scene, 0.60, 2,21.5),\r\n      \r\n\r\n\r\n        //-1\r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0.25+x, 2+y, 22+z),\r\n        new BowlingPin(scene, 0.60+x, 2+y,22+z),\r\n        \r\n      \r\n\r\n\r\n        //0\r\n        new BowlingPin(scene, -0.5+x, 2+y, 22.5+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,22.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,22.5+z),\r\n        \r\n        //1\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23+z),\r\n   \r\n        //2\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 23.5+z),\r\n\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,23.5+z),\r\n      \r\n        \r\n        //3\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24+z),\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24+z),\r\n        \r\n        //4\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 24.5+z),\r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 24.5+z),\r\n       \r\n\r\n\r\n        \r\n        //5\r\n\r\n        new BowlingPin(scene, -0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25+z),\r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25+z),\r\n        //new BowlingPin(scene, 4, 2, 25),\r\n        \r\n        \r\n\r\n       //6\r\n       \r\n        new BowlingPin(scene, -0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 25.5+z),\r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 25.5+z),\r\n   \r\n        \r\n\r\n        //7\r\n        new BowlingPin(scene, -0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -4+x, 2+y, 26+z),\r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 26+z),  \r\n        new BowlingPin(scene, 2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4.5+x, 2+y, 26+z),\r\n\r\n        //listeQuilles1.forEach(pin => pin.position.y += 5)\r\n    \r\n     \r\n    ];\r\n    return listeQuilles1;\r\n}\r\n\r\nfunction respawnPlayerInput() {\r\n    // Ajouter un écouteur d'événements pour la touche \"espace\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.key === 'Shift') {\r\n            // Code à exécuter lorsque la touche \"espace\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"espace\" a été enfoncée');\r\n            let ball1 = scene.getMeshByName(\"player1\");\r\n            player1.disableThisObject();\r\n            ball1.dispose();\r\n            player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8);\r\n            \r\n        //document.getElementById(\"pin1\").innerText = countPlayer1+\"/93 PINS\";\r\n        \r\n        // Modifier le texte de l'élément avec l'identifiant \"pin2\"\r\n  \r\n        }\r\n    });\r\n\r\n    // Ajouter un écouteur d'événements pour la touche \"entrée\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.code === 'Backspace') {\r\n            // Code à exécuter lorsque la touche \"entrée\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"entrée\" a été enfoncée');\r\n            let ball2 = scene.getMeshByName(\"player2\");\r\n            player2.disableThisObject();\r\n            ball2.dispose();\r\n            player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n            //document.getElementById(\"pin2\").innerText = countPlayer2+\"/93 PINS\";\r\n       \r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\nfunction displayPinNumber(){\r\n    \r\n     advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n    var button1 = BABYLON.GUI.Button.CreateSimpleButton(\"but1\", \"Click Me\");\r\n    button1.width = \"1000px\"\r\n    button1.height = \"40px\";\r\n    button1.color = \"white\";\r\n    button1.cornerRadius = 20;\r\n    button1.background = \"green\";\r\n    button1.onPointerUpObservable.add(function() {\r\n        alert(\"you did it!\");\r\n    });\r\n    advancedTexture.addControl(button1);   \r\n    \r\n    \r\n\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchEnd();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox2/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nexport { name, scene, sceneData, launch };\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\nvar createScene = function () {\r\n    \r\n    // GUI\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   // Création d'une caméra\r\n    const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n    //camera.attachControl()\r\n  \r\n   \r\n\r\n    let menu = new CustomModels(scene);\r\n    menu.CreateMenu3dScene(0,0,0);\r\n\r\n    displayMenu();\r\n    soundManager.initMusic();\r\n    createSkyBox();\r\n\r\n\r\n    //scene.debugLayer.show();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayMenu(){\r\n\r\n\r\n  \r\n    advancedTexture2 = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_text\");\r\n\r\n    button();\r\n\r\n    \r\n    // Création du texte en haut de la page\r\n    const headerText = new BABYLON.GUI.TextBlock();\r\n    headerText.text = \"Les Jeux Olympiques Maudits\";\r\n    headerText.color = \"black\";\r\n    headerText.fontSize = 100;\r\n    headerText.fontFamily = \"UnifrakturCook\";\r\n   \r\n   // headerText.fontFamily = \"Pirata One\"; // Utiliser la police Pirata One ici\r\n    headerText.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n    headerText.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP; // Modifier cette ligne\r\n    headerText.paddingTop = \"-500px\"; // Ajout de 20px de padding en haut\r\n    advancedTexture2.addControl(headerText);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    advancedTexture2.dispose();\r\n    advancedTexture.dispose();\r\n    engine.stopRenderLoop();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    sceneManager.launchLevel2();\r\n}\r\n\r\nfunction button(){\r\n    // Création du GUI\r\nadvancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"Play\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    loadNextLevel();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 100.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    //skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nexport {  scene, launch };","// Importez les modules \"scene1.js\" et \"scene2.js\" pour accéder à leurs fonctionnalités\r\n\r\nimport * as end from './End.js';\r\nimport * as scene2 from './scene2.js'\r\nimport * as scene3 from './scene3.js'\r\nimport * as scene4 from './scene4.js'\r\nimport * as menu from './Menu.js'\r\n\r\nlet winCountPlayer1 =0;\r\nlet winCountPlayer2 =0;\r\n// Fonctions principales\r\nfunction Main() {\r\n    \r\n    // Appelez la fonction \"launch\" du module \"level2\" pour lancer la scène 2\r\n    \r\n    //launchEnd();\r\n   \r\n    //launchLevel2();\r\n   //launchLevel3();\r\n   //launchLevel4();\r\n\r\n    launchLevelMenu();\r\n    \r\n\r\n   \r\n}\r\nfunction launchLevelMenu(){\r\n    \r\n    menu.launch();\r\n}\r\nfunction launchEnd(){\r\n    \r\n    end.launch();\r\n}\r\nfunction launchLevel2(){\r\n    scene2.killLevel();\r\n    scene2.launch();\r\n}\r\n\r\n\r\nfunction launchLevel3(){\r\n    \r\n   scene3.launch();\r\n}\r\n\r\nfunction launchLevel4(){\r\n    \r\n    scene4.launch();\r\n}\r\n\r\n\r\nfunction setcountPlayer1(){\r\n    winCountPlayer1++;\r\n}\r\nfunction setcountPlayer2(){\r\n    winCountPlayer2++;\r\n}\r\n \r\n// Exportez toutes les fonctions d'un coup\r\nexport { Main, launchEnd, launchLevel2, launchLevel3, launchLevel4,setcountPlayer1,setcountPlayer2,winCountPlayer1,winCountPlayer2 };\r\n\r\n\r\n// Exécute la fonction principale\r\nMain();\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","scene","musicName","this","musicSound","initMusic","music","BABYLON","Sound","loop","autoplay","window","addEventListener","Engine","audioEngine","audioContext","state","resume","then","once","stopMusic","stop","canvas","document","getElementById","engine","Scene","soundManager","createScene","HemisphericLight","Vector3","FreeCamera","playerWin","playerLoose","trophy","style","display","SceneLoader","ImportMesh","meshes","console","log","mesh","name","position","x","y","z","undefined","skybox","MeshBuilder","CreateBox","size","skyboxMaterial","StandardMaterial","backFaceCulling","disableLighting","material","infiniteDistance","reflectionTexture","CubeTexture","coordinatesMode","Texture","SKYBOX_MODE","createSkyBox","CustomModels","CreateTree","tree","tronc","PhysicsAggregate","PhysicsShapeType","BOX","mass","shape","isTrigger","boundingBox","CreatePineTree","scaling","shapeBox1","PhysicsShapeBox","Quaternion","shapeBox2","CreateSnowManOnSki","parent","setParent","CreateSceneProd","CreatePlayer","Zone","plane","width","height","ground","CreateGround","subdivisions","addInPlace","rotation","groundMaterial","diffuseColor","Color3","flatplane","createDeadTree","globalMesh","createSnowTree","createLitleSnowTree","createSnowMan","CreateRampe1","bigMesh","elment","MESH","createSnowMount","element","createFinalScene2","getMeshByName","i","length","CreatePlateform","CreatePlateformlevel2","CreatePlateform_Scene4","CreateBowlingPlatform","CreateBowlingBall","SPHERE","CreateColiseum","CreateMenu3dScene","Createlevel1","character","forward","backward","left","right","setupKeyboardInput","forwardI","keys","event","runRenderLoop","transformNode","scale","applyForce","setAngularVelocity","ZeroReadOnly","canvas2","PlayerLevel1","boxBody","testPlayer","enablePlayerControl","box","depth","isVisible","rotationQuaternion","Identity","boxShape","PhysicsBody","PhysicsMotionType","DYNAMIC","setMassProperties","blueMaterial","setCollisionCallbackEnabled","destroyPlayer","control","killLevel","player","forEach","dispose","cameras","lights","light","stopRenderLoop","reloadlevel","character1","input1","inputJump","animationGroup","setupKeyboardInputPlayer","isKeyPressed","isKeyPressed2","engine2","jump","boxMesh","animationGroups","createPlayer","visibility","Character","ImportMeshAsync","push","animGestionner","play","inputLeft","inputRight","inputLaunch","destroyed","action","input2","destroy","isUpperCase","input","toUpperCase","getLastKeyPressed","lastKeyPressed","sphereBody","rayHelper","shootBall","control2","CharacterController3","sphere","CreateSphere","segments","diameter","sphereShape","PhysicsShapeSphere","disableThisObject","Aggregate","meshIdPromise","createBowlingPin","Promise","resolve","_z","body","meshId","uniqueId","getMeshId","isPinUp","toEulerAngles","Math","abs","player1","player2","advancedTexture2","countPlayer1","countPlayer2","async","havokInstance","HavokPhysics","hk","HavokPlugin","enablePhysics","collisionsEnabled","model","listeQuilles1","listeQuilles2","onTriggerCollisionObservable","add","ev","type","collider","collidedAgainst","ball1","ball2","addQuille","countPlayer","playerText","splice","innerHTML","testSearch","testSearch2","code","winCountPlayer1","winCountPlayer2","launchEnd","render","launchLevel2","camera","FollowCamera","cameraRotation","viewport","Viewport","camera2","activeCameras","triggerDie","place","playerMesh","eventHandler","sceneData","playerMesh2","lockedTarget","catch","error","launchLevel3","triggerEnd","onPointerDown","evt","pickResult","hit","pickedMesh","playerMesh1","launchLevel4","inertia","angularSensibility","detachControl","setcountPlayer1","setcountPlayer2","GUI","AdvancedDynamicTexture","CreateFullscreenUI","playButton","Button","CreateSimpleButton","color","cornerRadius","background","thickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","pointerEnterAnimation","pointerOutAnimation","children","fontFamily","onPointerClickObservable","addControl","headerText","TextBlock","text","fontSize","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_CENTER","verticalAlignment","VERTICAL_ALIGNMENT_TOP","paddingTop","displayMenu"],"sourceRoot":""}