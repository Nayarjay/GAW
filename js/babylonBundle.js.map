{"version":3,"file":"js/babylonBundle.js","mappings":"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","sources":["webpack://gaw/webpack/bootstrap","webpack://gaw/webpack/runtime/define property getters","webpack://gaw/webpack/runtime/hasOwnProperty shorthand","webpack://gaw/./game/SoundManager.js","webpack://gaw/./game/CharacterController2.js","webpack://gaw/./game/PlayerLevel2.js","webpack://gaw/./game/sceneSwiming.js","webpack://gaw/./game/cinematique.js","webpack://gaw/./game/CustomModels.js","webpack://gaw/./game/End.js","webpack://gaw/./game/CharacterController.js","webpack://gaw/./game/PlayerLevel1.js","webpack://gaw/./game/scene2.js","webpack://gaw/./game/scene3.js","webpack://gaw/./game/CharacterController3.js","webpack://gaw/./game/PlayerLevel3.js","webpack://gaw/./game/BowlingPin.js","webpack://gaw/./game/scene4.js","webpack://gaw/./game/cinematique_credit.js","webpack://gaw/./game/Menu.js","webpack://gaw/./game/SceneManager.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","class SoundManager {\r\n    constructor(scene, musicName) {\r\n        this.scene = scene;\r\n        this.musicName = musicName;\r\n        this.musicSound = null;\r\n        this.volumeSlider = null; // New property to keep track of the slider element\r\n\r\n         // Initialize the slider when the scene and slider are ready\r\n         document.addEventListener('DOMContentLoaded', () => {\r\n            this.initVolumeSlider(\"volumeSlider\");\r\n        });\r\n    }\r\n\r\n    initMusic() {\r\n        const music = () => {\r\n            this.musicSound = new BABYLON.Sound(\"\", \"./models/Music/\" + this.musicName, this.scene, null, {\r\n                loop: true,\r\n                autoplay: true\r\n            });\r\n            this.updateVolume(); // Ensure volume is set according to the slider at initialization\r\n        };\r\n\r\n        window.addEventListener('mousemove', () => {\r\n            if (BABYLON.Engine.audioEngine.audioContext.state === 'suspended') {\r\n                BABYLON.Engine.audioEngine.audioContext.resume().then(() => {\r\n                    music();\r\n                });\r\n            } else {\r\n                music();\r\n            }\r\n        }, { once: true });\r\n    }\r\n\r\n    initVolumeSlider(sliderId) {\r\n        this.volumeSlider = document.getElementById(sliderId);\r\n        this.volumeSlider.addEventListener('input', () => {\r\n            this.updateVolume();\r\n        });\r\n    }\r\n\r\n    updateVolume() {\r\n        if (this.musicSound && this.volumeSlider) {\r\n            this.musicSound.setVolume(this.volumeSlider.value / 100);\r\n        }\r\n    }\r\n\r\n    stopMusic() {\r\n        if (this.musicSound) {\r\n            this.musicSound.stop();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.stopMusic();\r\n        window.removeEventListener('mousemove', this.clickHandler);\r\n        if (this.volumeSlider) {\r\n            this.volumeSlider.removeEventListener('input', this.updateVolume);\r\n        }\r\n        this.scene = null;\r\n        this.musicName = null;\r\n        this.musicSound = null;\r\n        this.clickHandler = null;\r\n        this.volumeSlider = null;\r\n    }\r\n}\r\n\r\nexport default SoundManager;\r\n","class CharacterController2 {\r\n    constructor(canvas, scene, engine, character1, input1, inputJump,animationGroup) {\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, input1, inputJump,animationGroup);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1, inputJump,animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n\r\n                \r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n                    \r\n                 \r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                    console.log(\"Touche enfoncée, action effectuée jump\");\r\n              \r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n            \r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump ) {\r\n                isKeyPressed2 = false;\r\n                console.log(\"Touche relâchée jump\");\r\n                // Ajoutez ici la logique pour arrêter le saut du personnage si nécessaire\r\n            \r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n                //console.log(\"Touche relâchée\");\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            \r\n            if (isKeyPressed) {\r\n            \r\n                character.applyForce(new BABYLON.Vector3(0, 0, -50), new BABYLON.Vector3(0, 0, 0));\r\n    \r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n               \r\n                isKeyPressed = false;\r\n                //console.log(  animationGroup)\r\n               //animationGroup[1].play();\r\n            }\r\n            /*\r\n            if (isKeyPressed2) {\r\n                character.applyForce(new BABYLON.Vector3(0, 200, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                isKeyPressed2 = false;\r\n                //animationGroup[2].play();\r\n            }\r\n            */\r\n           \r\n            character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController2 from './CharacterController2.js';\r\nvar engine2 = new BABYLON.Engine(canvas, true);\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel2 {\r\n\r\n    constructor(scene,engine,name,forward,jump,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name = name;\r\n        this.boxBody ;\r\n        this.boxMesh;\r\n        this.animationGroups = [];\r\n        this.forward = forward\r\n        this.jump = jump;\r\n        \r\n        this.createPlayer(x,y,z);\r\n        this.enablePlayerControl(forward,jump);\r\n     \r\n     \r\n    }\r\n    \r\n\r\n    async createPlayer(x,y,z){\r\n\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n        var box = BABYLON.MeshBuilder.CreateBox(this.name, {width: boxW, height: boxH, depth: boxD},this.scene);\r\n        this.boxMesh = box;\r\n        //ADD character disable box visibility \r\n        box.visibility = false;\r\n     \r\n\r\n\r\n\r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        //box.position = new BABYLON.Vector3(0,5,0);\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD),this.scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        this.boxBody = boxBody;\r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1.5})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", this.scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n        this.animationGroups = await this.Character(x, y, z, box);\r\n       //console.log(this.animationGroups);\r\n      \r\n    \r\n     \r\n     \r\n \r\n        return box;\r\n    }\r\n    \r\n  \r\n \r\n    enablePlayerControl(forward,jump){\r\n       let control = new CharacterController2(canvas,this.scene,this.engine,this.boxBody,forward,jump,this.animationGroups);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n   \r\n    async Character(x, y, z, parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        const { meshes, animationGroups } = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"./models/character1_anim/\", \"animCharacter.glb\", this.scene);\r\n    \r\n        mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n        mesh.name = \"RUNNER\";\r\n        mesh.position = new BABYLON.Vector3(x, y - 1.05, z); // Positionne le modèle une fois chargé\r\n    \r\n        if (parent) {\r\n            mesh.setParent(parent); // Attacher le modèle au parent si spécifié\r\n        }\r\n        this.animationGroups.push(animationGroups) ;\r\n        // Vous pouvez ajouter des manipulations supplémentaires sur le mesh ici, comme l'échelle ou la rotation\r\n    \r\n        console.log(\"Chargement réussi Personnage\", mesh);\r\n \r\n        await this.animGestionner(canvas,this.forward,this.jump,animationGroups)\r\n        \r\n    \r\n        return { animationGroups };\r\n    }\r\n\r\n    async animGestionner(canvas, input1, inputJump, animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n\r\n\r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n\r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump) {\r\n                isKeyPressed2 = false;\r\n\r\n\r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n\r\n        engine2.runRenderLoop(() => {\r\n\r\n            if (isKeyPressed) {\r\n                isKeyPressed = false;\r\n                console.log(\"VOILA LE GROUPE :\" + animationGroup)\r\n                animationGroup[2].play();\r\n\r\n            }\r\n\r\n            if (isKeyPressed2) {\r\n\r\n                isKeyPressed2 = false;\r\n                //animationGroup[1].play();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel2;","var canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level2.mp3\");\r\nvar name = \"level3\";\r\nimport SoundManager from './SoundManager.js';\r\nimport { CustomModels } from './CustomModels.js';\r\nimport CharacterController2 from './CharacterController2.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport PlayerLevel2 from './PlayerLevel2.js';\r\n\r\nasync function getInitializedHavok() {\r\n    return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n    defaultLoadingScreen();\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n   \r\n\r\n    // Configurez une caméra\r\n   \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    //var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n\r\n\r\n    //var devcamera = new DevCamera(canvas, scene);\r\n    // Positionnez le cube où vous le souhaitez\r\n\r\n    triggerEnd(5,11,-620,scene);\r\n    eventHandler(hk);\r\n    //createWaterSurface(scene,100,100,0,20,0);\r\n\r\n    // Ajoutez l'événement de clic à la scène\r\n    scene.onPointerDown = function (evt, pickResult) {\r\n        onPointerDown(evt, pickResult);\r\n    };\r\n\r\n        \r\n    var plane2 = new CustomModels(scene);\r\n    //plane2.CreatePlateform(0,0, -472,678);\r\n    plane2.CreatePlateformlevel3(-7,14, -265);\r\n\r\n\r\n    displayControlUI();\r\n\r\n\r\n     \r\n    let player1 = new PlayerLevel2(scene,engine,\"player1\",'s','f', 0,20,0);\r\n    let player2 = new PlayerLevel2(scene,engine,\"player2\",'k','m',-14,60,0);\r\n   //scene.debugLayer.show();\r\n\r\n   createSkyBox();\r\n\r\n}\r\n\r\nfunction launch() {\r\n   \r\n\r\n    \r\n   \r\n    //var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(-3, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n   \r\n    //scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n    scene.activeCameras.push(camera)\r\n\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(\"MESH PLAYER2\"+playerMesh2); // Utilisez playerMesh comme nécessaire\r\n\r\n        let playerMesh1 = scene.getMeshByName(\"player1\");\r\n        //console.log(\"MESH PLAYER2\"+playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh2;\r\n        camera2.lockedTarget = playerMesh1;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n    engine.runRenderLoop(function () {\r\n        scene.render();\r\n    });\r\n}\r\n\r\n// Fonction appelée lorsqu'un clic est détecté\r\nfunction onPointerDown(evt, pickResult) {\r\n    if (pickResult.hit) {\r\n        // Votre code d'interaction ici, par exemple, changez la couleur de l'objet\r\n        if(pickResult.pickedMesh.name ==\"player\"){\r\n\r\n            pickResult.pickedMesh.material.diffuseColor = new BABYLON.Color3(0, 1, 0); // Vert\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerEnd(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(60, 2, 2000),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n\r\n    var boxW = 40;\r\n    var boxH = 40;\r\n    var boxD = 40;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n        \r\n        \r\n  \r\n    var Aggregate2 =new BABYLON.PhysicsAggregate(box, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, scene);\r\n    Aggregate2.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\nfunction eventHandler(hk){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n   \r\n   \r\n\r\n            //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n\r\n        }\r\n      \r\n    });\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel4();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox3/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\nfunction createWaterSurface(scene, width, height, posX, posY, posZ) {\r\n    var waterMesh = BABYLON.MeshBuilder.CreateGround(\"waterMesh\", { width: width, height: height }, scene);\r\n    var water = new BABYLON.Material(\"water\", scene, new BABYLON.Vector2(512, 512));\r\n    water.backFaceCulling = true;\r\n    water.bumpTexture = new BABYLON.Texture(\"./models/img/water.jpg\", scene);\r\n    water.windForce = -10;\r\n    water.waveHeight = 0.5;\r\n    water.bumpHeight = 0.1;\r\n    water.waveLength = 0.1;\r\n    water.colorBlendFactor = 0;\r\n    waterMesh.material = water;\r\n    waterMesh.position = new BABYLON.Vector3(posX, posY, posZ); // Ajouter cette ligne pour définir la position\r\n\r\n    // Ajouter des objets à la liste de rendu de l'eau pour réflexions/réfractions\r\n    // Assurez-vous que ces objets existent dans votre scène\r\n    //water.addToRenderList(skybox);\r\n    //water.addToRenderList(ground);\r\n\r\n    return waterMesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport { name, scene, sceneData, launch };\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n//let soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n    defaultLoadingScreen();\r\n    soundManager.initMusic();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  \r\n    // Création d'une caméra\r\n        const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n        //camera.attachControl()\r\n    screen();\r\n     // Attendre quelques secondes avant de charger le niveau suivant\r\n    setTimeout(function () {\r\n        soundManager.destroy();\r\n        loadNextLevel();\r\n    }, 21000); \r\n    //loadNextLevel();\r\n   \r\n}\r\nasync function screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 100,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    // Options pour la texture vidéo, y compris la lecture audio\r\n    var videoTextureOptions = {\r\n        loop: false, // Désactivé la boucle\r\n        autoPlay: false, // Désactiver la lecture automatique pour éviter les erreurs\r\n        autoUpdateTexture: true,\r\n        poster: null,\r\n        muted: true // Initialement en mode muet\r\n    };\r\n\r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"./models/video/scrawl text.mp4\", scene, true, false, videoTextureOptions);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n\r\n    // Démarre la vidéo en mode muet pour éviter les restrictions du navigateur\r\n    videoTexture.video.play();\r\n\r\n    // Gestionnaire d'événement pour activer le son après un clic sur le canvas\r\n    var canvas = document.getElementById('renderCanvas');\r\n    canvas.addEventListener('click', function() {\r\n        // Désactiver le mode muet et redémarrer la vidéo\r\n        videoTexture.video.muted = true;\r\n        videoTexture.video.play();\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\nfunction loadNextLevel(){\r\n    \r\n    killLevel();\r\n    sceneManager.launchLevel2();\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n    engine.stopRenderLoop();\r\n \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            //displayControlUI();\r\n        }, 3000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\nexport {  scene, launch };","\r\n\r\n\r\nexport class CustomModels {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    \r\n    \r\n    /** ######################################################################## LEVEL2 3D MODEL #########################################################################**/\r\n\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    async CreateTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n         \r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            \r\n        \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    async CreatePineTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        return   BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            meshes[0].scaling.x = 3\r\n            meshes[0].scaling.y = 2\r\n            meshes[0].scaling.z = 4\r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n            //troncAggregate.shape.\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, shapeBox2, { mass: 0 }, this.scene);\r\n           \r\n            \r\n        \r\n           //return boundingBox;\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n       \r\n    }\r\n\r\n\r\n\r\n    CreateSnowManOnSki(x, y, z,parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        // Charger le modèle 3D\r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"snowman_on_skis.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi SnowMan\", meshes);\r\n            mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n            mesh.name = \"SnowMan\";\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne le modèle une fois chargé\r\n            mesh.setParent(parent);\r\n \r\n            //mesh.rotationQuaternion._y = 85;\r\n\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n    \r\n        return { mesh }; // Retourne mesh\r\n    }\r\n    \r\n    \r\n  \r\n    \r\n   \r\n    async CreateSceneProd(x, y, z) {\r\n       \r\n    }\r\n    async CreatePlayer(x, y, z) {\r\n        \r\n    }\r\n      \r\n    async Zone(x, y, z) {\r\n      \r\n     \r\n    }\r\n\r\n    async plane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(-0.1, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n\r\n    async flatplane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(0, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n    async createDeadTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Dead Trees With Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 30\r\n            meshes[0].scaling.y = 20\r\n            meshes[0].scaling.z = 20\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(30, 30, 30),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n\r\n  \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Snow Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createLitleSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow two.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowMan(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"SnowManRotated.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 1\r\n            meshes[0].scaling.y = 1\r\n            meshes[0].scaling.z = 1\r\n      \r\n            let globalMesh = meshes[0];\r\n            \r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(\"SNOWMAN \"+globalMesh.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateRampe1(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"rampe_2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n \r\n            meshes[0].scaling.x = 5\r\n            meshes[0].scaling.y = 5\r\n            meshes[0].scaling.z = 5\r\n   \r\n           \r\n            let mesh = meshes[0];\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            mesh.name =\"Rampe\"\r\n            let elment =meshes[1] ;\r\n           \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(elment, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n           \r\n\r\n            \r\n           // var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n    createSnowMount(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Rock Forms 3 (White).glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            meshes[0].scaling.x = 150\r\n            meshes[0].scaling.y = 150\r\n            meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            let element =meshes[1] ;\r\n            element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n          \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(element, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n\r\n    createFinalScene2(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"finalscene2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            //meshes[0].scaling.x = 150\r\n            //meshes[0].scaling.y = 150\r\n            //meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[2].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            //let element =meshes[1] ;\r\n            let element = this.scene.getMeshByName(\"Cube (sol)\");\r\n            //let element2 = this.scene.getMeshByName(\"Cube (sol)\") ;\r\n            //let element3 = this.scene.getMeshByUniqueId(769) ;\r\n\r\n            //element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n\r\n            //console.log();\r\n        \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                i++\r\n            }\r\n            \r\n          \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n    \r\n    \r\n    \r\n    /** ######################################################################## Scene3 3D MODEL #########################################################################**/\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreatePlateform(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"plateforme_scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n        CreatePlateformlevel2(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform level2\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n\r\n\r\n /** ######################################################################## Scene4 3D MODEL #########################################################################**/\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    CreatePlateform_Scene4(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene4_gameplay_ELEMENT.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingPlatform(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene_de_bowling.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingBall(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Spiky Ball.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi ball\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n          \r\n            mesh.name =\"ball\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, BABYLON.PhysicsShapeType.SPHERE, { mass: 0 }, this.scene);\r\n         \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** ######################################################################## MENU 3D MODEL #########################################################################**/\r\n\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n               // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n    \r\n                //var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n               // troncAggregate.shape.isTrigger =  true;\r\n    \r\n                \r\n                //var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n\r\n                 \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n          // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateMenu3dScene(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"fmenu.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi du menu\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"fondMenu\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n        async Createlevel1(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"level2Map.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n        \r\n    \r\n            return { boundingBox };\r\n        }\r\n\r\n        \r\nCreatePlateformlevel3(x, y, z,scene) {\r\n    let tree;\r\n    let boundingBox;\r\n    let tronc;\r\n\r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"swimingPool.glb\",this.scene, (meshes) => {\r\n        console.log(\"Chargement réussi plateform level2\", meshes);\r\n    \r\n        let mesh = meshes[0];\r\n        //tronc = meshes[1];\r\n        mesh.name =\"colision\"\r\n        \r\n    \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n        let i =1;\r\n        while( i <  meshes.length){\r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.cene);\r\n            i++\r\n        }\r\n    \r\n    \r\n    }, undefined, undefined, \".glb\");\r\n\r\n\r\n\r\n    return { boundingBox };\r\n}\r\n\r\n\r\n        \r\n\r\n\r\n\r\n\r\n    \r\n   \r\n}\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"End.mp3\");\r\n\r\nvar createScene = function () {\r\n    defaultLoadingScreen();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 4, -12.5), scene);\r\n    camera.attachControl();\r\n    \r\n    let menu = new CustomModels(scene);\r\n    menu.CreateMenu3dScene(-44.927,-1.197,61.948);\r\n\r\n    //camera.attachControl();\r\n    if(sceneManager.winCountPlayer1 > sceneManager.winCountPlayer2){\r\n        playerWin(-4,0,-1);\r\n        playerLoose(2,0,0);\r\n        trophy(-3.5,0,-1.5);\r\n\r\n    }else{\r\n        playerWin(2,0,-1);\r\n        playerLoose(-4,0,0);\r\n        trophy(2.5,0,-1.5);\r\n    }\r\n\r\n    //scene.debugLayer.show();\r\n    //displayControlUI();\r\n    loadEndScene();\r\n    soundManager.initMusic();\r\n    createSkyBox();   \r\n    //hideControlUI();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\nfunction hideControlUI(){\r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n\r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n\r\n}\r\nfunction playerLoose(x,y,z){\r\n    \r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Loose.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerLoose\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n\r\n\r\n}\r\nfunction playerWin(x,y,z){\r\n  \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"victory.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n}\r\n\r\nfunction loadEndScene(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"recommencer.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi end scene\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"EndScene\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\nfunction trophy(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Trophy.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            //displayControlUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\nexport {  scene, launch };\r\n\r\n","class CharacterController {\r\n    constructor(canvas , engine, character,forward,backward,left,right,forward2,backward2,left2,right2) {\r\n        this.setupKeyboardInput(canvas, engine, character,forward,backward,left,right,forward2,backward2,left2,right2);\r\n    }\r\n\r\n    setupKeyboardInput(canvas, engine, character,forwardI,backward,left,right,forward2,backward2,left2,right2) {\r\n        this.keys = {};\r\n\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            this.keys[event.key] = true;\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            // Vérifie l'état des touches dans l'objet \"keys\" et effectue des actions en conséquence.\r\n\r\n            if (this.keys[forwardI] || this.keys[forward2]) {\r\n                //console.log('Touche Z enfoncée');\r\n                \r\n                let forward = character.transformNode.forward.scale(-5);\r\n               //console.log(forward);\r\n\r\n                character.applyForce(forward , character.transformNode.position);\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n          \r\n            }\r\n\r\n            if (this.keys[backward] || this.keys[backward2]) {\r\n                //console.log('Touche S enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(0, 0, 5), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                //charater.position.z += 0.1; // Déplace le personnage vers l'avant (positif sur l'axe z).\r\n            }\r\n\r\n            if (this.keys[left] || this.keys[left2]) {\r\n                //console.log('Touche Q enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, -0.5, 0));\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.position.x += 0.1; // Déplace le personnage vers la gauche (positif sur l'axe x).\r\n            }\r\n\r\n            if (this.keys[right] || this.keys[right2]) {\r\n                //console.log('Touche D enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(-5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0.5, 0));\r\n                //character.position.x -= 0.1; // Déplace le personnage vers la droite (négatif sur l'axe x).\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController;\r\n","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n\r\n\r\n\r\n\r\nexport class PlayerLevel1 {\r\n\r\n    constructor(scene,engine,name,forward,backward,left,right,x,y,z,forward2,backward2,left2,right2) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.boxBody ;\r\n\r\n        this.testPlayer(scene,engine,name,x,y,z);\r\n        this.enablePlayerControl(forward,backward,left,right,forward2,backward2,left2,right2);\r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n\r\n        \r\n\r\n\r\n       \r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n\r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        box.isVisible = false;\r\n\r\n        let snowMan = new CustomModels(scene).CreateSnowManOnSki(x,y-0.5,z,box);\r\n      \r\n\r\n        \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        \r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n\r\n        //rotate character\r\n      \r\n      \r\n        this.boxBody = boxBody;\r\n        \r\n     \r\n        \r\n      \r\n     \r\n        \r\n    \r\n       \r\n \r\n        return box;\r\n    \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(forward,backward,left,right,forward2,backward2,left2,right2){\r\n       let control = new CharacterController(canvas2,this.engine,this.boxBody,forward,backward,left,right,forward2,backward2,left2,right2);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel1;","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nimport {PlayerLevel1} from \"./PlayerLevel1.js\";\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\nlet soundManager = new SoundManager(scene,\"level1.mp3\");\r\nlet advancedTexture ;\r\nBABYLON.SceneLoader.ShowLoadingScreen = true; \r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nvar name = \"level2\";\r\nvar value = \"start\";     \r\n//var player = new PlayerLevel1(scene);\r\n\r\nasync function getInitializedHavok() {\r\n  return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n   \r\n    // Ajoutez une lumière hémisphériques\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    \r\n    const havokInstance = await HavokPhysics();\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n    defaultLoadingScreen();\r\n    \r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0),  hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n\r\n    var sceneprod = new CustomModels(scene);\r\n\r\n   soundManager.initMusic();\r\n\r\n    let x = -10;\r\n\r\n\r\n//********************************************************** PART 5 LEVEL ******************************************************************************/////////////////\r\n    //rajoute d'un plane\r\n    \r\n\r\n\r\n    //trigger to die and pass\r\n    triggerDie(-1.79, -1.02, -832.37);\r\n    \r\n\r\n    \r\n\r\n    displayControlUI();\r\n\r\n   //testPlayer();\r\n\r\n\r\n    \r\n   //montrer le layer\r\n   //scene.debugLayer.show();\r\n   \r\n   \r\n\r\n    var place = new CustomModels(scene);\r\n    //place.createFinalScene2(4,-24,-970);\r\n   \r\n    await place.Createlevel1(0,0,-800)\r\n    \r\n\r\n    \r\n   let player = new PlayerLevel1(scene,engine,'player1','z','s','q','d',5,170,0,'w','s','a','d');\r\n\r\n   let player2 = new PlayerLevel1(scene,engine,'player2','ArrowUp','ArrowDown','ArrowLeft','ArrowRight',0,170,0);\r\n \r\n\r\n    \r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n\r\n    \r\n    eventHandler(hk,player);\r\n    createSkyBox();\r\n   return playerMesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getScene() {\r\n    return scene;\r\n}\r\n\r\n\r\n\r\nfunction triggerDie(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(40, 40, 40),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction eventHandler(hk,player){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"tronc\"){\r\n                console.log(\"End OF the Game\")\r\n                reloadlevel();\r\n               \r\n                player = null;\r\n}      \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1+\"  COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n           //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n            player = null;\r\n  \r\n\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"Die\"){\r\n            console.log(\"YOU DIEEEEEEEEEE\");\r\n            value = \"death\";\r\n            reloadlevel();\r\n            player = null;\r\n           \r\n            //return \"death\";\r\n        }\r\n    });\r\n}\r\n\r\nasync function launch() {\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1); \r\n\r\n    scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh;\r\n        camera2.lockedTarget = playerMesh2;\r\n\r\n        // Lancer le rendu une fois que la scène est prête\r\n        scene.executeWhenReady(() => {\r\n            engine.runRenderLoop(function () {\r\n                scene.render();\r\n            });\r\n        });\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n    // Afficher l'écran de chargement de Babylon.js\r\n    scene.executeWhenReady(() => {\r\n        BABYLON.SceneLoader.ShowLoadingScreen = true;\r\n    });\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n  \r\n  \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n\r\n}\r\n\r\nfunction reloadlevel(){\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n\r\n \r\n\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    soundManager.destroy();\r\n    sceneManager.launchLevel3();\r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n   // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"block\";\r\n\r\n}\r\nfunction hideControlUI(){\r\n       // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"none\";\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nexport { name, scene, sceneData, launch,killLevel };\r\n","var canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level2.mp3\");\r\nvar name = \"level3\";\r\nimport SoundManager from './SoundManager.js';\r\nimport { CustomModels } from './CustomModels.js';\r\nimport CharacterController2 from './CharacterController2.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport PlayerLevel2 from './PlayerLevel2.js';\r\n\r\nasync function getInitializedHavok() {\r\n    return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n    defaultLoadingScreen();\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n   \r\n\r\n    // Configurez une caméra\r\n   \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    //var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n\r\n\r\n    //var devcamera = new DevCamera(canvas, scene);\r\n    // Positionnez le cube où vous le souhaitez\r\n\r\n    triggerEnd(5,11,-620);\r\n    eventHandler(hk);\r\n\r\n    // Ajoutez l'événement de clic à la scène\r\n    scene.onPointerDown = function (evt, pickResult) {\r\n        onPointerDown(evt, pickResult);\r\n    };\r\n\r\n    var plane2 = new CustomModels(scene);\r\n    //plane2.CreatePlateform(0,0, -472,678);\r\n    plane2.CreatePlateformlevel2(-7,14, -265);\r\n    displayControlUI();\r\n\r\n\r\n     \r\n    let player1 = new PlayerLevel2(scene,engine,\"player1\",'s','f', 0,20,0);\r\n    let player2 = new PlayerLevel2(scene,engine,\"player2\",'k','m',-14,20,0);\r\n   //scene.debugLayer.show();\r\n\r\n   createSkyBox();\r\n\r\n}\r\n\r\nfunction launch() {\r\n   \r\n\r\n    \r\n   \r\n    //var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(-3, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n   \r\n    //scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n    scene.activeCameras.push(camera)\r\n\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(\"MESH PLAYER2\"+playerMesh2); // Utilisez playerMesh comme nécessaire\r\n\r\n        let playerMesh1 = scene.getMeshByName(\"player1\");\r\n        //console.log(\"MESH PLAYER2\"+playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh2;\r\n        camera2.lockedTarget = playerMesh1;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n    engine.runRenderLoop(function () {\r\n        scene.render();\r\n    });\r\n}\r\n\r\n// Fonction appelée lorsqu'un clic est détecté\r\nfunction onPointerDown(evt, pickResult) {\r\n    if (pickResult.hit) {\r\n        // Votre code d'interaction ici, par exemple, changez la couleur de l'objet\r\n        if(pickResult.pickedMesh.name ==\"player\"){\r\n\r\n            pickResult.pickedMesh.material.diffuseColor = new BABYLON.Color3(0, 1, 0); // Vert\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerEnd(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(60, 2, 2000),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n\r\n    var boxW = 40;\r\n    var boxH = 40;\r\n    var boxD = 40;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n        \r\n        \r\n  \r\n    var Aggregate2 =new BABYLON.PhysicsAggregate(box, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, scene);\r\n    Aggregate2.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\nfunction eventHandler(hk){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n   \r\n   \r\n\r\n            //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n\r\n        }\r\n      \r\n    });\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel4();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox3/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\nexport { name, scene, sceneData, launch };\r\n","class CharacterController2 {\r\n    constructor(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch,inputLeft2, inputRight2) {\r\n        this.destroyed = false;\r\n        this.action = false;\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch,inputLeft2, inputRight2);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1,input2, inputJump,inputLaunch,inputLeft2, inputRight2) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n         \r\n             \r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n       \r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n          \r\n            if(!this.destroyed){\r\n                if (this.keys[input1] ||this.keys[inputLeft2] ) {\r\n                    //console.log('Touche gauche enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            \r\n                }\r\n\r\n                if (this.keys[input2] ||this.keys[inputRight2]) {\r\n                    //console.log('Touche Droite enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(-5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n         \r\n                if (this.keys[inputLaunch] && !this.action) {\r\n                    //console.log('Touche LAUNCH enfoncée');\r\n                    this.action = true;\r\n                    character.applyForce(new BABYLON.Vector3(0, 0, 700*4), new BABYLON.Vector3(0, 0, 0));\r\n                    //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            }\r\n        });\r\n\r\n       \r\n    }\r\n\r\n\r\n    destroy() {\r\n     \r\n        this.destroyed = true;\r\n\r\n        // Libérez les références aux objets\r\n        this.canvas = null;\r\n        this.engine = null;\r\n\r\n        //this.character1.dispose();\r\n        this.character1 = null;\r\n        this.inputLeft = null;\r\n        this.inputRight = null;\r\n        this.inputJump = null;\r\n        this.inputLaunch = null;\r\n\r\n        // Réinitialisez ou supprimez d'autres ressources si nécessaire\r\n    }\r\n    isUpperCase(input,key) {\r\n        return key === input.toUpperCase();\r\n    }\r\n    getLastKeyPressed() {\r\n        return this.lastKeyPressed; // Fonction pour récupérer la dernière touche enfoncée\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController3 from './CharacterController3.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel3 {\r\n\r\n    constructor(scene,engine,name,left,right,jump,action,x,y,z,inputLeft2, inputRight2) {\r\n        this.control;\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name= name;\r\n        this.boxBody ;\r\n        this.sphereBody;\r\n        this.box;\r\n        this.rayHelper;\r\n        //this.testPlayer(scene,engine,name,x,y,z);\r\n      \r\n        this.shootBall(left,right,jump,action,x,y,z);\r\n    \r\n        this.enablePlayerControl(left,right,jump,action,inputLeft2, inputRight2);\r\n\r\n        \r\n     \r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n       \r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        this.box =box;\r\n   \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n      \r\n       \r\n        this.boxBody = boxBody;\r\n        \r\n    \r\n     \r\n     \r\n        \r\n    \r\n\r\n      \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(inputLeft,inputRight,jump,action,inputLeft2, inputRight2){\r\n\r\n        let control2 = new CharacterController3(canvas2,this.engine,this.sphereBody, inputRight,inputLeft,jump,action,inputLeft2, inputRight2);\r\n        this.control = control2;\r\n     \r\n      \r\n    }\r\n\r\n   \r\n    shootBall(left,right,jump,action,x,y,z){\r\n        let segments = 16;\r\n        let diameter = 2;\r\n\r\n        const sphere = BABYLON.MeshBuilder.CreateSphere(this.name, { segments, diameter }, this.scene);\r\n        sphere.position = new BABYLON.Vector3(x,y,z);\r\n\r\n       \r\n        var sphereShape = new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),diameter-1,this.scene);\r\n        var sphereBody = new BABYLON.PhysicsBody(sphere, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        sphereBody.shape = sphereShape;\r\n        sphereBody.setMassProperties({mass : 2});\r\n\r\n       \r\n        \r\n        this.sphereBody = sphereBody;\r\n       \r\n    }\r\n    disableThisObject(){\r\n\r\n        this.control.destroy();\r\n        this.control = null;\r\n        \r\n  \r\n       \r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel3;","\r\n\r\nexport class BowlingPin {\r\n\r\n    constructor(scene,x,y,z) {\r\n       \r\n        this.scene = scene;\r\n       \r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        this.mesh;\r\n        this.Aggregate;\r\n        this.meshIdPromise = this.createBowlingPin();\r\n    }\r\n    \r\n    createBowlingPin(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Bowling Pin.glb\", this.scene, (meshes) => {\r\n\r\n             \r\n\r\n                const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                    new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                    new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                    new BABYLON.Vector3(0.5, 1.2, 0.5),      // dimensions of the box\r\n                    this.scene                                // scene of the shape\r\n                );\r\n        \r\n\r\n                let boxKid = BABYLON.MeshBuilder.CreateBox(\"Pintrigger\");\r\n                //boxKid.isVisible = false;\r\n\r\n                //console.log(\"Chargement réussi Pin\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                mesh.scaling._z =  mesh.scaling._z *-1;\r\n                mesh.name =\"Pin\"\r\n\r\n  \r\n            \r\n        \r\n                mesh.position = new BABYLON.Vector3(this.x, this.y, this.z); // Positionne l'objet\r\n            \r\n\r\n            \r\n                var Aggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0.1 }, this.scene);\r\n                Aggregate.body.setCollisionCallbackEnabled(true);\r\n                this.Aggregate = Aggregate;\r\n                this.mesh = mesh;\r\n               \r\n                const meshId = mesh.uniqueId;\r\n                resolve(meshId);\r\n\r\n            }, undefined, undefined, \".glb\");\r\n        })\r\n\r\n    }\r\n  \r\n    \r\n    async getMeshId(){\r\n         return await this.meshIdPromise;\r\n    }\r\n \r\n   \r\n    disableThisObject(){\r\n        this.Aggregate.body.setCollisionCallbackEnabled(false);\r\n        this.Aggregate.body.dispose();\r\n        //this.mesh.dispose();\r\n       \r\n    }\r\n    isPinUp() {\r\n        // Récupérer la rotation de la quille\r\n        const rotation = this.mesh.rotationQuaternion.toEulerAngles();\r\n\r\n        // Définir un seuil pour la rotation, en dessous duquel la quille est considérée comme renversée\r\n        const threshold = 0.1; // À ajuster selon vos besoins\r\n\r\n        // Vérifier si la rotation autour de l'axe X (ou un autre axe selon votre modèle) dépasse le seuil\r\n        const isUp = Math.abs(rotation.x) < threshold;\r\n\r\n        return isUp;\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default BowlingPin;","import { CustomModels } from './CustomModels.js';\r\nimport CharacterController3 from './CharacterController3.js';\r\nimport PlayerLevel3 from './PlayerLevel3.js';\r\nimport BowlingPin from './BowlingPin.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level3.mp3\");\r\nvar name = \"level4\";\r\nlet advancedTexture ;\r\n\r\n\r\n\r\n\r\nlet player1;\r\nlet player2;\r\n\r\nlet countPlayer1 =0;\r\nlet countPlayer2 =0;\r\n\r\n\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n    defaultLoadingScreen();\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n       \r\n    \r\n    \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   \r\n\r\n    var model = new CustomModels(scene);\r\n    \r\n    var listeQuilles1 = [];\r\n\r\n    \r\n\r\n    let add =13 ;\r\n    var listeQuilles2 = [];\r\n   \r\n    \r\n    \r\n\r\n\r\n \r\n   // console.log(countPlayer1);\r\n     player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8,'d','a');\r\n     player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n\r\n     //let pin = new BowlingPin(scene,0,2,19.397);\r\n    \r\n   \r\n    let ball1 = scene.getMeshByName(\"player1\");\r\n    \r\n    displayControlUI();\r\n    //CreateBowlingBall(0,6,0);\r\n\r\n    eventHandler(hk,player1,player2);\r\n\r\n   // model.CreatePlateform_Scene4();\r\n    model.CreateBowlingPlatform();\r\n    listeQuilles1 =  addQuille(listeQuilles1,0,0,-8);\r\n    listeQuilles2 =  addQuille(listeQuilles2,25,0,-8);\r\n\r\n    testSearch(listeQuilles1,countPlayer1,\"player1\");\r\n    testSearch2(listeQuilles2,countPlayer2,\"player2\");\r\n\r\n    \r\n        \r\n\r\n    let ball = scene.getMeshByName(\"ball\");\r\n    \r\n    \r\n\r\n  \r\n    /*\r\n    //trigger Player1\r\n    triggerRespawn(0,2,97.43,30, 30, 10);\r\n    triggerRespawn(7.5,2,48,1, 30,90);\r\n    triggerRespawn(-7.5,2,48,1, 30,90);\r\n\r\n    //trigger Player2\r\n    triggerRespawn(30,2,97.43,30, 30, 10);\r\n    triggerRespawn(20,2,48,1, 30,90);\r\n    triggerRespawn(35.5,2,48,1, 30,90);*/\r\n\r\n    respawnPlayerInput(player1,player2);\r\n\r\n    \r\n    createSkyBox();\r\n\r\n\r\n}\r\n\r\nfunction launch() {\r\n      \r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -22), scene);\r\n    camera.inertia = 0;\r\n    camera.angularSensibility = 0;\r\n    camera.detachControl(canvas);\r\n    camera.cameraRotation = 0;\r\n    scene.activeCameras.push(camera);\r\n    \r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1);\r\n    scene.activeCameras.push(camera);\r\n\r\n\r\n    var camera2 = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(25, 4, -23), scene);\r\n    camera2.inertia = 0;\r\n    camera2.angularSensibility = 0;\r\n    camera2.detachControl(canvas);\r\n    camera2.cameraRotation = 0;\r\n    scene.activeCameras.push(camera2);\r\n    camera2.viewport = new BABYLON.Viewport(0.5,0 , 0.5, 1);\r\n    scene.activeCameras.push(camera2);\r\n    \r\n   \r\n\r\n \r\n\r\n    sceneData();\r\n  \r\n\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n    //console.log(playerMesh2);\r\n    //console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n    \r\n    camera.lockedTarget = playerMesh;\r\n    //camera2.lockedTarget = playerMesh2;\r\n\r\n    engine.runRenderLoop(function () {\r\n\r\n        scene.render();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerRespawn(x,y,z,sizeX,sizeY,sizeZ){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(sizeX,sizeY,sizeZ),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    //let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Respawn\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n    \r\n\r\n    \r\n    //Aggregate.dispose();\r\n    \r\n}\r\n\r\nfunction eventHandler(hk,player1,player2){\r\n\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n       \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n            console.log(\"YOU WINNNNNNN\")\r\n            //killLevel();\r\n            //loadNextLevel();\r\n            player1 = null;\r\n  \r\n\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Respawn\" && ( ev.collider.transformNode.name == \"player1\" || ev.collider.transformNode.name == \"player2\" ) ){\r\n            console.log(\"YOU RESPAWNWNNN\");\r\n\r\n            if(ev.collider.transformNode.name == \"player1\"){\r\n                let ball1 = scene.getMeshByName(\"player1\");\r\n         \r\n                player1.disableThisObject();\r\n                //player1 = null;\r\n                ball1.dispose();\r\n                \r\n                player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',-5,5,0);\r\n            \r\n     \r\n            }else{\r\n                let ball2 = scene.getMeshByName(\"player2\");\r\n                player2.disableThisObject();\r\n                //player2 = null;\r\n                ball2.dispose()\r\n\r\n                player2= new PlayerLevel3(scene,engine,\"player2\",'j','l','i','Enter',28,5,0);\r\n              \r\n            }\r\n          \r\n         \r\n\r\n            \r\n          \r\n        }\r\n     \r\n    });\r\n\r\n   //WinParty\r\n\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nasync function testSearch(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer1++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer1);\r\n        document.getElementById(\"pin1\").innerHTML = countPlayer1 + \"/93 PINS\";\r\n\r\n  \r\n        if(countPlayer1 >=93){\r\n            sceneManager.setcountPlayer1()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2:\"+sceneManager.winCountPlayer2)\r\n        }\r\n        \r\n      \r\n   \r\n        if(countPlayer1 >= 93 ){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n       \r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\nasync function testSearch2(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer2++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer2);\r\n\r\n\r\n        document.getElementById(\"pin2\").innerHTML = countPlayer2 + \"/93 PINS\";\r\n  \r\n     \r\n        if(countPlayer2 >92){\r\n            sceneManager.setcountPlayer2()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2\"+sceneManager.winCountPlayer2)\r\n\r\n        }\r\n   \r\n        if(countPlayer2 >= 93){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\n\r\n\r\n\r\nfunction addQuille( listeQuilles1,x,y,z){\r\n\r\n\r\n    listeQuilles1 = [\r\n        //-3\r\n        new BowlingPin(scene, 0.25+x, 2+y,21+z),\r\n        //-2\r\n             \r\n        //new BowlingPin(scene, 0, 2, 21.5),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y,21.5+z),\r\n        new BowlingPin(scene, 0.50+x, 2+y,21.5+z),\r\n        //new BowlingPin(scene, 0.60, 2,21.5),\r\n      \r\n\r\n\r\n        //-1\r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0.25+x, 2+y, 22+z),\r\n        new BowlingPin(scene, 0.60+x, 2+y,22+z),\r\n        \r\n      \r\n\r\n\r\n        //0\r\n        new BowlingPin(scene, -0.5+x, 2+y, 22.5+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,22.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,22.5+z),\r\n        \r\n        //1\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23+z),\r\n   \r\n        //2\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 23.5+z),\r\n\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,23.5+z),\r\n      \r\n        \r\n        //3\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24+z),\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24+z),\r\n        \r\n        //4\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 24.5+z),\r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 24.5+z),\r\n       \r\n\r\n\r\n        \r\n        //5\r\n\r\n        new BowlingPin(scene, -0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25+z),\r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25+z),\r\n        //new BowlingPin(scene, 4, 2, 25),\r\n        \r\n        \r\n\r\n       //6\r\n       \r\n        new BowlingPin(scene, -0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 25.5+z),\r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 25.5+z),\r\n   \r\n        \r\n\r\n        //7\r\n        new BowlingPin(scene, -0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -4+x, 2+y, 26+z),\r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 26+z),  \r\n        new BowlingPin(scene, 2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4.5+x, 2+y, 26+z),\r\n\r\n        //listeQuilles1.forEach(pin => pin.position.y += 5)\r\n    \r\n     \r\n    ];\r\n    return listeQuilles1;\r\n}\r\n\r\nfunction respawnPlayerInput() {\r\n    // Ajouter un écouteur d'événements pour la touche \"espace\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.key === 'Shift') {\r\n            // Code à exécuter lorsque la touche \"espace\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"espace\" a été enfoncée');\r\n            let ball1 = scene.getMeshByName(\"player1\");\r\n            player1.disableThisObject();\r\n            ball1.dispose();\r\n            player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8,'d','a');\r\n            \r\n        //document.getElementById(\"pin1\").innerText = countPlayer1+\"/93 PINS\";\r\n        \r\n        // Modifier le texte de l'élément avec l'identifiant \"pin2\"\r\n  \r\n        }\r\n    });\r\n\r\n    // Ajouter un écouteur d'événements pour la touche \"entrée\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.code === 'Backspace') {\r\n            // Code à exécuter lorsque la touche \"entrée\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"entrée\" a été enfoncée');\r\n            let ball2 = scene.getMeshByName(\"player2\");\r\n            player2.disableThisObject();\r\n            ball2.dispose();\r\n            player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n            //document.getElementById(\"pin2\").innerText = countPlayer2+\"/93 PINS\";\r\n       \r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchEnd();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox2/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\nexport { name, scene, sceneData, launch };\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Portal_2_End_Credits.mp3\");\r\n//let soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n    defaultLoadingScreen();\r\n    soundManager.initMusic();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  \r\n    // Création d'une caméra\r\n        const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n        //camera.attachControl()\r\n    screen();\r\n     // Attendre quelques secondes avant de charger le niveau suivant\r\n    setTimeout(function () {\r\n        soundManager.destroy();\r\n        loadNextLevel();\r\n    }, 60000); \r\n    //loadNextLevel();\r\n   \r\n}\r\nasync function screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 100,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    // Options pour la texture vidéo, y compris la lecture audio\r\n    var videoTextureOptions = {\r\n        loop: false, // Désactivé la boucle\r\n        autoPlay: false, // Désactiver la lecture automatique pour éviter les erreurs\r\n        autoUpdateTexture: true,\r\n        poster: null,\r\n        muted: true // Initialement en mode muet\r\n    };\r\n\r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"./models/video/Ending crédits.mp4\", scene, true, false, videoTextureOptions);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n\r\n    // Démarre la vidéo en mode muet pour éviter les restrictions du navigateur\r\n    videoTexture.video.play();\r\n\r\n    // Gestionnaire d'événement pour activer le son après un clic sur le canvas\r\n    var canvas = document.getElementById('renderCanvas');\r\n    canvas.addEventListener('click', function() {\r\n        // Désactiver le mode muet et redémarrer la vidéo\r\n        videoTexture.video.muted = true;\r\n        videoTexture.video.play();\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\nfunction loadNextLevel(){\r\n    \r\n    killLevel();\r\n    location.reload();\r\n    //sceneManager.launchLevelMenu();\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n    engine.stopRenderLoop();\r\n \r\n}\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            //displayControlUI();\r\n        }, 3000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\nexport {  scene, launch };","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n//\r\nvar createScene = function () {\r\n\r\n  \r\n    defaultLoadingScreen();\r\n\r\n\r\n   \r\n    // GUI\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   // Création d'une caméra\r\n    const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(46, 4, -76), scene);\r\n    camera.setTarget(new BABYLON.Vector3(46, 4.2, -75));\r\n    //camera.attachControl()\r\n  \r\n   //screen();\r\n\r\n    let menu = new CustomModels(scene);\r\n    menu.CreateMenu3dScene(0,0,0);\r\n\r\n    displayMenu();\r\n   \r\n    createSkyBox();\r\n \r\n\r\n    //createMusicButton();\r\n    //scene.debugLayer.show();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayMenu(){\r\n\r\n\r\n  \r\n    advancedTexture2 = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_text\");\r\n\r\n    button();\r\n    buttonCredit();\r\n    \r\n    // Création du texte en haut de la page\r\n    const headerText = new BABYLON.GUI.TextBlock();\r\n    headerText.text = \"The Cursed Olympic Games\";\r\n    headerText.color = \"black\";\r\n    headerText.fontSize = 100;\r\n    headerText.fontFamily = \"UnifrakturCook\";\r\n   \r\n   // headerText.fontFamily = \"Pirata One\"; // Utiliser la police Pirata One ici\r\n    headerText.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n    headerText.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP; // Modifier cette ligne\r\n    headerText.paddingTop = \"-500px\"; // Ajout de 20px de padding en haut\r\n    advancedTexture2.addControl(headerText);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    advancedTexture2.dispose();\r\n    advancedTexture.dispose();\r\n    engine.stopRenderLoop();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    //sceneManager.launchLevel2();\r\n    soundManager.stopMusic();\r\n    sceneManager.launchStart();\r\n}\r\n\r\nfunction loadCredits(){\r\n    //sceneManager.launchLevel2();\r\n    soundManager.stopMusic();\r\n    sceneManager.launchCredit();\r\n}\r\n\r\nfunction button(){\r\n    // Création du GUI\r\nadvancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"Play\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    soundManager.stopMusic();\r\n    loadNextLevel();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\nfunction buttonCredit(){\r\n    // Création du GUI\r\n//advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"C r e d i t s\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\nplayButton.top = \"100px\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    soundManager.stopMusic();\r\n    loadCredits();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\n\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    //skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nfunction screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 80,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    \r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"video/Loading.mp4\", scene);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n    \r\n}\r\n\r\n\r\nfunction defaultLoadingScreen(){\r\n    engine.displayLoadingUI();\r\n\r\n    scene.executeWhenReady(function () {\r\n        setTimeout(function () {\r\n            engine.hideLoadingUI();\r\n            soundManager.initMusic();\r\n        }, 5000); // 5000 millisecondes = 5 secondes\r\n    });\r\n\r\n}\r\n\r\n\r\nexport {  scene, launch };","// Importez les modules \"scene1.js\" et \"scene2.js\" pour accéder à leurs fonctionnalités\r\nimport * as levelSwimming from './sceneSwiming.js';\r\nimport * as start from './cinematique.js';\r\nimport * as end from './End.js';\r\nimport * as scene2 from './scene2.js'\r\nimport * as scene3 from './scene3.js'\r\nimport * as scene4 from './scene4.js'\r\nimport * as credit from './cinematique_credit.js'\r\nimport * as menu from './Menu.js'\r\n\r\nlet winCountPlayer1 =0;\r\nlet winCountPlayer2 =0;\r\n// Fonctions principales\r\nfunction Main() {\r\n    \r\n    // Appelez la fonction \"launch\" du module \"level2\" pour lancer la scène 2\r\n    \r\n    //launchEnd();\r\n   \r\n    //launchLevel2();\r\n   //launchLevel3();\r\n    //launchLevel4();\r\n    //launchCredit();\r\n    //launchSwimingLevel();\r\n    launchLevelMenu();\r\n   //launchStart();\r\n    \r\n\r\n   \r\n}\r\nfunction launchLevelMenu(){\r\n    \r\n    menu.launch();\r\n}\r\nfunction launchEnd(){\r\n    \r\n    end.launch();\r\n}\r\nfunction launchLevel2(){\r\n    scene2.killLevel();\r\n    scene2.launch();\r\n}\r\n\r\n\r\nfunction launchLevel3(){\r\n    \r\n   scene3.launch();\r\n}\r\n\r\nfunction launchLevel4(){\r\n    \r\n    scene4.launch();\r\n}\r\nfunction launchStart(){\r\n    \r\n    start.launch();\r\n}\r\n\r\nfunction launchCredit(){\r\n    \r\n    credit.launch();\r\n}\r\nfunction launchSwimingLevel(){\r\n    levelSwimming.launch();\r\n    \r\n  \r\n}\r\n\r\nfunction setcountPlayer1(){\r\n    winCountPlayer1++;\r\n}\r\nfunction setcountPlayer2(){\r\n    winCountPlayer2++;\r\n}\r\n\r\n \r\n// Exportez toutes les fonctions d'un coup\r\nexport { Main, launchEnd, launchLevel2, launchLevel3, launchLevel4,setcountPlayer1,setcountPlayer2,launchLevelMenu,launchStart,launchCredit,winCountPlayer1,winCountPlayer2 };\r\n\r\n\r\n// Exécute la fonction principale\r\nMain();\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","scene","musicName","this","musicSound","volumeSlider","document","addEventListener","initVolumeSlider","initMusic","music","BABYLON","Sound","loop","autoplay","updateVolume","window","Engine","audioEngine","audioContext","state","resume","then","once","sliderId","getElementById","setVolume","value","stopMusic","stop","destroy","removeEventListener","clickHandler","canvas","engine","character1","input1","inputJump","animationGroup","setupKeyboardInputPlayer","character","keys","isKeyPressed","isKeyPressed2","event","console","log","runRenderLoop","applyForce","Vector3","setAngularVelocity","engine2","name","forward","jump","x","y","z","boxBody","boxMesh","animationGroups","createPlayer","enablePlayerControl","box","MeshBuilder","CreateBox","width","height","depth","visibility","rotationQuaternion","Quaternion","Identity","position","boxShape","PhysicsShapeBox","PhysicsBody","PhysicsMotionType","DYNAMIC","shape","setMassProperties","mass","blueMaterial","StandardMaterial","diffuseColor","Color3","material","setCollisionCallbackEnabled","Character","destroyPlayer","control","parent","mesh","meshes","SceneLoader","ImportMeshAsync","setParent","push","animGestionner","play","Scene","createScene","displayLoadingUI","executeWhenReady","setTimeout","hideLoadingUI","HemisphericLight","FreeCamera","async","planeOpts","sideOrientation","Mesh","DOUBLESIDE","videoPlane","CreatePlane","videoMaterial","videoTexture","VideoTexture","autoPlay","autoUpdateTexture","poster","muted","diffuseTexture","roughness","emissiveColor","White","video","screen","forEach","dispose","cameras","lights","light","stopRenderLoop","CreateTree","tree","tronc","ImportMesh","PhysicsAggregate","PhysicsShapeType","BOX","isTrigger","undefined","boundingBox","CreatePineTree","scaling","shapeBox1","shapeBox2","CreateSnowManOnSki","CreateSceneProd","CreatePlayer","Zone","plane","ground","CreateGround","subdivisions","addInPlace","rotation","groundMaterial","flatplane","createDeadTree","globalMesh","createSnowTree","createLitleSnowTree","createSnowMan","CreateRampe1","bigMesh","elment","MESH","createSnowMount","element","createFinalScene2","getMeshByName","i","length","CreatePlateform","CreatePlateformlevel2","CreatePlateform_Scene4","CreateBowlingPlatform","CreateBowlingBall","SPHERE","CreateColiseum","CreateMenu3dScene","Createlevel1","CreatePlateformlevel3","cene","attachControl","playerWin","playerLoose","trophy","skybox","size","skyboxMaterial","backFaceCulling","disableLighting","infiniteDistance","reflectionTexture","CubeTexture","coordinatesMode","Texture","SKYBOX_MODE","backward","left","right","forward2","backward2","left2","right2","setupKeyboardInput","forwardI","transformNode","scale","ZeroReadOnly","canvas2","PlayerLevel1","testPlayer","isVisible","ShowLoadingScreen","player","style","display","reloadlevel","inputLeft","inputRight","inputLaunch","inputLeft2","inputRight2","destroyed","action","input2","isUpperCase","input","toUpperCase","getLastKeyPressed","lastKeyPressed","sphereBody","rayHelper","shootBall","control2","CharacterController3","sphere","CreateSphere","segments","diameter","sphereShape","PhysicsShapeSphere","disableThisObject","Aggregate","meshIdPromise","createBowlingPin","Promise","resolve","_z","body","meshId","uniqueId","getMeshId","isPinUp","toEulerAngles","Math","abs","player1","player2","countPlayer1","countPlayer2","addQuille","listeQuilles1","location","reload","winCountPlayer1","winCountPlayer2","launchEnd","render","launchLevel2","camera","FollowCamera","cameraRotation","viewport","Viewport","camera2","activeCameras","havokInstance","HavokPhysics","hk","HavokPlugin","enablePhysics","collisionsEnabled","triggerDie","place","playerMesh","onTriggerCollisionObservable","add","ev","type","collider","collidedAgainst","playerMesh2","lockedTarget","catch","error","launchLevel3","onPointerDown","evt","pickResult","hit","pickedMesh","playerMesh1","launchLevel4","inertia","angularSensibility","detachControl","model","listeQuilles2","ball1","ball2","countPlayer","playerText","splice","innerHTML","testSearch","testSearch2","code","launchStart","launchCredit","setcountPlayer1","setcountPlayer2","setTarget","GUI","AdvancedDynamicTexture","CreateFullscreenUI","playButton","Button","CreateSimpleButton","color","cornerRadius","background","thickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","pointerEnterAnimation","pointerOutAnimation","children","fontFamily","onPointerClickObservable","addControl","top","buttonCredit","headerText","TextBlock","text","fontSize","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_CENTER","verticalAlignment","VERTICAL_ALIGNMENT_TOP","paddingTop","displayMenu"],"sourceRoot":""}