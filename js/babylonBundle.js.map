{"version":3,"file":"js/babylonBundle.js","mappings":"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","sources":["webpack://gaw/webpack/bootstrap","webpack://gaw/webpack/runtime/define property getters","webpack://gaw/webpack/runtime/hasOwnProperty shorthand","webpack://gaw/./game/SoundManager.js","webpack://gaw/./game/cinematique.js","webpack://gaw/./game/End.js","webpack://gaw/./game/CustomModels.js","webpack://gaw/./game/CharacterController.js","webpack://gaw/./game/PlayerLevel1.js","webpack://gaw/./game/scene2.js","webpack://gaw/./game/CharacterController2.js","webpack://gaw/./game/PlayerLevel2.js","webpack://gaw/./game/scene3.js","webpack://gaw/./game/CharacterController3.js","webpack://gaw/./game/PlayerLevel3.js","webpack://gaw/./game/BowlingPin.js","webpack://gaw/./game/scene4.js","webpack://gaw/./game/Menu.js","webpack://gaw/./game/SceneManager.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","class SoundManager {\r\n    constructor(scene,  musicName) {\r\n        this.scene = scene;\r\n\r\n        this.musicName = musicName;\r\n        this.musicSound = null;\r\n    }\r\n\r\n    initMusic() {\r\n        const music = () => {\r\n            this.musicSound = new BABYLON.Sound(\"\", \"./models/Music/\"+this.musicName, this.scene, null, {\r\n                loop: true,\r\n                autoplay: true,\r\n            });\r\n        };\r\n\r\n        window.addEventListener('click', () => {\r\n            if (BABYLON.Engine.audioEngine.audioContext.state === 'suspended') {\r\n                BABYLON.Engine.audioEngine.audioContext.resume().then(() => {\r\n                    music();\r\n                });\r\n            } else {\r\n                music();\r\n            }\r\n        }, { once: true });\r\n    }\r\n\r\n    stopMusic() {\r\n        if (this.musicSound) {\r\n            this.musicSound.stop();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        // Arrête la musique avant de détruire l'instance\r\n        this.stopMusic();\r\n        \r\n        // Supprime l'écouteur d'événement\r\n        window.removeEventListener('click', this.clickHandler);\r\n\r\n        // Réinitialise les propriétés à null ou undefined pour faciliter la libération de la mémoire par le garbage collector\r\n        this.scene = null;\r\n        this.musicName = null;\r\n        this.musicSound = null;\r\n        this.clickHandler = null;\r\n    }\r\n}\r\nexport default SoundManager;","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n//let soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n    soundManager.initMusic();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  \r\n    // Création d'une caméra\r\n        const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n        //camera.attachControl()\r\n    screen();\r\n     // Attendre quelques secondes avant de charger le niveau suivant\r\n    setTimeout(function () {\r\n        soundManager.destroy();\r\n        loadNextLevel();\r\n    }, 21000); \r\n    //loadNextLevel();\r\n   \r\n}\r\nasync function screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 100,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    // Options pour la texture vidéo, y compris la lecture audio\r\n    var videoTextureOptions = {\r\n        loop: false, // Désactivé la boucle\r\n        autoPlay: false, // Désactiver la lecture automatique pour éviter les erreurs\r\n        autoUpdateTexture: true,\r\n        poster: null,\r\n        muted: true // Initialement en mode muet\r\n    };\r\n\r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"./models/video/scrawl text.mp4\", scene, true, false, videoTextureOptions);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n\r\n    // Démarre la vidéo en mode muet pour éviter les restrictions du navigateur\r\n    videoTexture.video.play();\r\n\r\n    // Gestionnaire d'événement pour activer le son après un clic sur le canvas\r\n    var canvas = document.getElementById('renderCanvas');\r\n    canvas.addEventListener('click', function() {\r\n        // Désactiver le mode muet et redémarrer la vidéo\r\n        videoTexture.video.muted = true;\r\n        videoTexture.video.play();\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\nfunction loadNextLevel(){\r\n    \r\n    killLevel();\r\n    sceneManager.launchLevel2();\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n    engine.stopRenderLoop();\r\n \r\n}\r\n\r\n\r\nexport {  scene, launch };","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"End.mp3\");\r\n\r\nvar createScene = function () {\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 4, -12.5), scene);\r\n\r\n    //camera.attachControl();\r\n    if(sceneManager.winCountPlayer1 > sceneManager.winCountPlayer2){\r\n        playerWin(-4,0,-1);\r\n        playerLoose(2,0,0);\r\n        trophy(-3.5,0,-1.5);\r\n\r\n    }else{\r\n        playerWin(2,0,-1);\r\n        playerLoose(-4,0,0);\r\n        trophy(2.5,0,-1.5);\r\n    }\r\n\r\n    //scene.debugLayer.show();\r\n    displayControlUI();\r\n    loadEndScene();\r\n    soundManager.initMusic();\r\n    createSkyBox();   \r\n    //hideControlUI();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\nfunction hideControlUI(){\r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n\r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n\r\n}\r\nfunction playerLoose(x,y,z){\r\n    \r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Loose.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerLoose\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n\r\n\r\n}\r\nfunction playerWin(x,y,z){\r\n  \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"victory.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n}\r\n\r\nfunction loadEndScene(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"recommencer.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi end scene\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"EndScene\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\nfunction trophy(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Trophy.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nexport {  scene, launch };\r\n\r\n","\r\n\r\n\r\nexport class CustomModels {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    \r\n    \r\n    /** ######################################################################## LEVEL2 3D MODEL #########################################################################**/\r\n\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    async CreateTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n         \r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            \r\n        \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    async CreatePineTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        return   BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            meshes[0].scaling.x = 3\r\n            meshes[0].scaling.y = 2\r\n            meshes[0].scaling.z = 4\r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n            //troncAggregate.shape.\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, shapeBox2, { mass: 0 }, this.scene);\r\n           \r\n            \r\n        \r\n           //return boundingBox;\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n       \r\n    }\r\n\r\n\r\n\r\n    CreateSnowManOnSki(x, y, z,parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        // Charger le modèle 3D\r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"snowman_on_skis.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi SnowMan\", meshes);\r\n            mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n            mesh.name = \"SnowMan\";\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne le modèle une fois chargé\r\n            mesh.setParent(parent);\r\n \r\n            //mesh.rotationQuaternion._y = 85;\r\n\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n    \r\n        return { mesh }; // Retourne mesh\r\n    }\r\n    \r\n    \r\n  \r\n    \r\n   \r\n    async CreateSceneProd(x, y, z) {\r\n       \r\n    }\r\n    async CreatePlayer(x, y, z) {\r\n        \r\n    }\r\n      \r\n    async Zone(x, y, z) {\r\n      \r\n     \r\n    }\r\n\r\n    async plane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(-0.1, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n\r\n    async flatplane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(0, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n    async createDeadTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Dead Trees With Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 30\r\n            meshes[0].scaling.y = 20\r\n            meshes[0].scaling.z = 20\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(30, 30, 30),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n\r\n  \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Snow Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createLitleSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow two.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowMan(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"SnowManRotated.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 1\r\n            meshes[0].scaling.y = 1\r\n            meshes[0].scaling.z = 1\r\n      \r\n            let globalMesh = meshes[0];\r\n            \r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(\"SNOWMAN \"+globalMesh.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateRampe1(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"rampe_2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n \r\n            meshes[0].scaling.x = 5\r\n            meshes[0].scaling.y = 5\r\n            meshes[0].scaling.z = 5\r\n   \r\n           \r\n            let mesh = meshes[0];\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            mesh.name =\"Rampe\"\r\n            let elment =meshes[1] ;\r\n           \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(elment, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n           \r\n\r\n            \r\n           // var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n    createSnowMount(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Rock Forms 3 (White).glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            meshes[0].scaling.x = 150\r\n            meshes[0].scaling.y = 150\r\n            meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            let element =meshes[1] ;\r\n            element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n          \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(element, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n\r\n    createFinalScene2(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"finalscene2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            //meshes[0].scaling.x = 150\r\n            //meshes[0].scaling.y = 150\r\n            //meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[2].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            //let element =meshes[1] ;\r\n            let element = this.scene.getMeshByName(\"Cube (sol)\");\r\n            //let element2 = this.scene.getMeshByName(\"Cube (sol)\") ;\r\n            //let element3 = this.scene.getMeshByUniqueId(769) ;\r\n\r\n            //element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n\r\n            //console.log();\r\n        \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                i++\r\n            }\r\n            \r\n          \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n    \r\n    \r\n    \r\n    /** ######################################################################## Scene3 3D MODEL #########################################################################**/\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreatePlateform(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"plateforme_scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n        CreatePlateformlevel2(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform level2\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n\r\n\r\n /** ######################################################################## Scene4 3D MODEL #########################################################################**/\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    CreatePlateform_Scene4(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene4_gameplay_ELEMENT.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingPlatform(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene_de_bowling.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingBall(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Spiky Ball.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi ball\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n          \r\n            mesh.name =\"ball\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, BABYLON.PhysicsShapeType.SPHERE, { mass: 0 }, this.scene);\r\n         \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** ######################################################################## MENU 3D MODEL #########################################################################**/\r\n\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n               // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n    \r\n                //var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n               // troncAggregate.shape.isTrigger =  true;\r\n    \r\n                \r\n                //var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n\r\n                 \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n          // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateMenu3dScene(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"fmenu.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi du menu\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"fondMenu\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n        async Createlevel1(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"level2Map.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n        \r\n    \r\n            return { boundingBox };\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n    \r\n   \r\n}\r\n","class CharacterController {\r\n    constructor(canvas , engine, character,forward,backward,left,right,forward2,backward2,left2,right2) {\r\n        this.setupKeyboardInput(canvas, engine, character,forward,backward,left,right,forward2,backward2,left2,right2);\r\n    }\r\n\r\n    setupKeyboardInput(canvas, engine, character,forwardI,backward,left,right,forward2,backward2,left2,right2) {\r\n        this.keys = {};\r\n\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            this.keys[event.key] = true;\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            // Vérifie l'état des touches dans l'objet \"keys\" et effectue des actions en conséquence.\r\n\r\n            if (this.keys[forwardI] || this.keys[forward2]) {\r\n                //console.log('Touche Z enfoncée');\r\n                \r\n                let forward = character.transformNode.forward.scale(-5);\r\n               //console.log(forward);\r\n\r\n                character.applyForce(forward , character.transformNode.position);\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n          \r\n            }\r\n\r\n            if (this.keys[backward] || this.keys[backward2]) {\r\n                //console.log('Touche S enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(0, 0, 5), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                //charater.position.z += 0.1; // Déplace le personnage vers l'avant (positif sur l'axe z).\r\n            }\r\n\r\n            if (this.keys[left] || this.keys[left2]) {\r\n                //console.log('Touche Q enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, -0.5, 0));\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.position.x += 0.1; // Déplace le personnage vers la gauche (positif sur l'axe x).\r\n            }\r\n\r\n            if (this.keys[right] || this.keys[right2]) {\r\n                //console.log('Touche D enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(-5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0.5, 0));\r\n                //character.position.x -= 0.1; // Déplace le personnage vers la droite (négatif sur l'axe x).\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController;\r\n","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n\r\n\r\n\r\n\r\nexport class PlayerLevel1 {\r\n\r\n    constructor(scene,engine,name,forward,backward,left,right,x,y,z,forward2,backward2,left2,right2) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.boxBody ;\r\n\r\n        this.testPlayer(scene,engine,name,x,y,z);\r\n        this.enablePlayerControl(forward,backward,left,right,forward2,backward2,left2,right2);\r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n\r\n        \r\n\r\n\r\n       \r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n\r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        box.isVisible = false;\r\n\r\n        let snowMan = new CustomModels(scene).CreateSnowManOnSki(x,y-0.5,z,box);\r\n      \r\n\r\n        \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        \r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n\r\n        //rotate character\r\n      \r\n      \r\n        this.boxBody = boxBody;\r\n        \r\n     \r\n        \r\n      \r\n     \r\n        \r\n    \r\n       \r\n \r\n        return box;\r\n    \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(forward,backward,left,right,forward2,backward2,left2,right2){\r\n       let control = new CharacterController(canvas2,this.engine,this.boxBody,forward,backward,left,right,forward2,backward2,left2,right2);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel1;","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nimport {PlayerLevel1} from \"./PlayerLevel1.js\";\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\nlet soundManager = new SoundManager(scene,\"level1.mp3\");\r\nlet advancedTexture ;\r\nBABYLON.SceneLoader.ShowLoadingScreen = true; \r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nvar name = \"level2\";\r\nvar value = \"start\";     \r\n//var player = new PlayerLevel1(scene);\r\n\r\nasync function getInitializedHavok() {\r\n  return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //BABYLON.SceneLoader.ShowLoadingScreen = true; \r\n    //displayControlUI();\r\n    // Ajoutez une lumière hémisphériques\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    \r\n    const havokInstance = await HavokPhysics();\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n   \r\n    \r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0),  hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n\r\n    var sceneprod = new CustomModels(scene);\r\n\r\n   soundManager.initMusic();\r\n\r\n    let x = -10;\r\n\r\n\r\n//********************************************************** PART 5 LEVEL ******************************************************************************/////////////////\r\n    //rajoute d'un plane\r\n    \r\n\r\n\r\n    //trigger to die and pass\r\n    triggerDie(-1.79, -1.02, -832.37);\r\n    \r\n\r\n    \r\n\r\n    displayControlUI();\r\n\r\n   //testPlayer();\r\n\r\n\r\n    \r\n   //montrer le layer\r\n   //scene.debugLayer.show();\r\n   \r\n   \r\n\r\n    var place = new CustomModels(scene);\r\n    //place.createFinalScene2(4,-24,-970);\r\n   \r\n    await place.Createlevel1(0,0,-800)\r\n    \r\n\r\n    \r\n   let player = new PlayerLevel1(scene,engine,'player1','z','s','q','d',5,170,0,'w','s','a','d');\r\n\r\n   let player2 = new PlayerLevel1(scene,engine,'player2','ArrowUp','ArrowDown','ArrowLeft','ArrowRight',0,170,0);\r\n \r\n\r\n    \r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n\r\n    \r\n    eventHandler(hk,player);\r\n    createSkyBox();\r\n   return playerMesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getScene() {\r\n    return scene;\r\n}\r\n\r\n\r\n\r\nfunction triggerDie(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(40, 40, 40),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction eventHandler(hk,player){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"tronc\"){\r\n                console.log(\"End OF the Game\")\r\n                reloadlevel();\r\n               \r\n                player = null;\r\n}      \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1+\"  COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n           //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n            player = null;\r\n  \r\n\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"Die\"){\r\n            console.log(\"YOU DIEEEEEEEEEE\");\r\n            value = \"death\";\r\n            reloadlevel();\r\n            player = null;\r\n           \r\n            //return \"death\";\r\n        }\r\n    });\r\n}\r\n\r\nasync function launch() {\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1); \r\n\r\n    scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh;\r\n        camera2.lockedTarget = playerMesh2;\r\n\r\n        // Lancer le rendu une fois que la scène est prête\r\n        scene.executeWhenReady(() => {\r\n            engine.runRenderLoop(function () {\r\n                scene.render();\r\n            });\r\n        });\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n    // Afficher l'écran de chargement de Babylon.js\r\n    scene.executeWhenReady(() => {\r\n        BABYLON.SceneLoader.ShowLoadingScreen = true;\r\n    });\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n  \r\n  \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n\r\n}\r\n\r\nfunction reloadlevel(){\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n\r\n \r\n\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    soundManager.destroy();\r\n    sceneManager.launchLevel3();\r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n   // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"block\";\r\n\r\n}\r\nfunction hideControlUI(){\r\n       // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"none\";\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nexport { name, scene, sceneData, launch,killLevel };\r\n","class CharacterController2 {\r\n    constructor(canvas, scene, engine, character1, input1, inputJump,animationGroup) {\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, input1, inputJump,animationGroup);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1, inputJump,animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n\r\n                \r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n                    \r\n                 \r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                    console.log(\"Touche enfoncée, action effectuée jump\");\r\n              \r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n            \r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump ) {\r\n                isKeyPressed2 = false;\r\n                console.log(\"Touche relâchée jump\");\r\n                // Ajoutez ici la logique pour arrêter le saut du personnage si nécessaire\r\n            \r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n                //console.log(\"Touche relâchée\");\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            \r\n            if (isKeyPressed) {\r\n            \r\n                character.applyForce(new BABYLON.Vector3(0, 0, -50), new BABYLON.Vector3(0, 0, 0));\r\n    \r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n               \r\n                isKeyPressed = false;\r\n                //console.log(  animationGroup)\r\n               //animationGroup[1].play();\r\n            }\r\n            /*\r\n            if (isKeyPressed2) {\r\n                character.applyForce(new BABYLON.Vector3(0, 200, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                isKeyPressed2 = false;\r\n                //animationGroup[2].play();\r\n            }\r\n            */\r\n           \r\n            character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController2 from './CharacterController2.js';\r\nvar engine2 = new BABYLON.Engine(canvas, true);\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel2 {\r\n\r\n    constructor(scene,engine,name,forward,jump,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name = name;\r\n        this.boxBody ;\r\n        this.boxMesh;\r\n        this.animationGroups = [];\r\n        this.forward = forward\r\n        this.jump = jump;\r\n        \r\n        this.createPlayer(x,y,z);\r\n        this.enablePlayerControl(forward,jump);\r\n     \r\n     \r\n    }\r\n    \r\n\r\n    async createPlayer(x,y,z){\r\n\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n        var box = BABYLON.MeshBuilder.CreateBox(this.name, {width: boxW, height: boxH, depth: boxD},this.scene);\r\n        this.boxMesh = box;\r\n        //ADD character disable box visibility \r\n        box.visibility = false;\r\n     \r\n\r\n\r\n\r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        //box.position = new BABYLON.Vector3(0,5,0);\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD),this.scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        this.boxBody = boxBody;\r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", this.scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n        this.animationGroups = await this.Character(x, y, z, box);\r\n       //console.log(this.animationGroups);\r\n      \r\n    \r\n     \r\n     \r\n \r\n        return box;\r\n    }\r\n    \r\n  \r\n \r\n    enablePlayerControl(forward,jump){\r\n       let control = new CharacterController2(canvas,this.scene,this.engine,this.boxBody,forward,jump,this.animationGroups);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n   \r\n    async Character(x, y, z, parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        const { meshes, animationGroups } = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"./models/character1_anim/\", \"animCharacter.glb\", this.scene);\r\n    \r\n        mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n        mesh.name = \"RUNNER\";\r\n        mesh.position = new BABYLON.Vector3(x, y - 1.05, z); // Positionne le modèle une fois chargé\r\n    \r\n        if (parent) {\r\n            mesh.setParent(parent); // Attacher le modèle au parent si spécifié\r\n        }\r\n        this.animationGroups.push(animationGroups) ;\r\n        // Vous pouvez ajouter des manipulations supplémentaires sur le mesh ici, comme l'échelle ou la rotation\r\n    \r\n        console.log(\"Chargement réussi Personnage\", mesh);\r\n \r\n        await this.animGestionner(canvas,this.forward,this.jump,animationGroups)\r\n        \r\n    \r\n        return { animationGroups };\r\n    }\r\n\r\n    async animGestionner(canvas, input1, inputJump, animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n\r\n\r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n\r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump) {\r\n                isKeyPressed2 = false;\r\n\r\n\r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n\r\n        engine2.runRenderLoop(() => {\r\n\r\n            if (isKeyPressed) {\r\n                isKeyPressed = false;\r\n                console.log(\"VOILA LE GROUPE :\" + animationGroup)\r\n                animationGroup[2].play();\r\n\r\n            }\r\n\r\n            if (isKeyPressed2) {\r\n\r\n                isKeyPressed2 = false;\r\n                //animationGroup[1].play();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel2;","var canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level2.mp3\");\r\nvar name = \"level3\";\r\nimport SoundManager from './SoundManager.js';\r\nimport { CustomModels } from './CustomModels.js';\r\nimport CharacterController2 from './CharacterController2.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport PlayerLevel2 from './PlayerLevel2.js';\r\n\r\nasync function getInitializedHavok() {\r\n    return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n   \r\n\r\n    // Configurez une caméra\r\n   \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    //var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n\r\n\r\n    //var devcamera = new DevCamera(canvas, scene);\r\n    // Positionnez le cube où vous le souhaitez\r\n\r\n    triggerEnd(5,11,-620);\r\n    eventHandler(hk);\r\n\r\n    // Ajoutez l'événement de clic à la scène\r\n    scene.onPointerDown = function (evt, pickResult) {\r\n        onPointerDown(evt, pickResult);\r\n    };\r\n\r\n    var plane2 = new CustomModels(scene);\r\n    //plane2.CreatePlateform(0,0, -472,678);\r\n    plane2.CreatePlateformlevel2(-7,14, -265);\r\n    displayControlUI();\r\n\r\n\r\n     \r\n    let player1 = new PlayerLevel2(scene,engine,\"player1\",'s','f', 0,20,0);\r\n    let player2 = new PlayerLevel2(scene,engine,\"player2\",'k','m',-14,20,0);\r\n   //scene.debugLayer.show();\r\n\r\n   createSkyBox();\r\n\r\n}\r\n\r\nfunction launch() {\r\n   \r\n\r\n    \r\n   \r\n    //var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(-3, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n   \r\n    //scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n    scene.activeCameras.push(camera)\r\n\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(\"MESH PLAYER2\"+playerMesh2); // Utilisez playerMesh comme nécessaire\r\n\r\n        let playerMesh1 = scene.getMeshByName(\"player1\");\r\n        //console.log(\"MESH PLAYER2\"+playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh2;\r\n        camera2.lockedTarget = playerMesh1;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n    engine.runRenderLoop(function () {\r\n        scene.render();\r\n    });\r\n}\r\n\r\n// Fonction appelée lorsqu'un clic est détecté\r\nfunction onPointerDown(evt, pickResult) {\r\n    if (pickResult.hit) {\r\n        // Votre code d'interaction ici, par exemple, changez la couleur de l'objet\r\n        if(pickResult.pickedMesh.name ==\"player\"){\r\n\r\n            pickResult.pickedMesh.material.diffuseColor = new BABYLON.Color3(0, 1, 0); // Vert\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerEnd(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(60, 2, 2000),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n\r\n    var boxW = 40;\r\n    var boxH = 40;\r\n    var boxD = 40;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n        \r\n        \r\n  \r\n    var Aggregate2 =new BABYLON.PhysicsAggregate(box, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, scene);\r\n    Aggregate2.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\nfunction eventHandler(hk){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n   \r\n   \r\n\r\n            //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n\r\n        }\r\n      \r\n    });\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel4();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox3/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nexport { name, scene, sceneData, launch };\r\n","class CharacterController2 {\r\n    constructor(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch,inputLeft2, inputRight2) {\r\n        this.destroyed = false;\r\n        this.action = false;\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch,inputLeft2, inputRight2);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1,input2, inputJump,inputLaunch,inputLeft2, inputRight2) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n         \r\n             \r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n       \r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n          \r\n            if(!this.destroyed){\r\n                if (this.keys[input1] ||this.keys[inputLeft2] ) {\r\n                    //console.log('Touche gauche enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            \r\n                }\r\n\r\n                if (this.keys[input2] ||this.keys[inputRight2]) {\r\n                    //console.log('Touche Droite enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(-5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n         \r\n                if (this.keys[inputLaunch] && !this.action) {\r\n                    //console.log('Touche LAUNCH enfoncée');\r\n                    this.action = true;\r\n                    character.applyForce(new BABYLON.Vector3(0, 0, 700*4), new BABYLON.Vector3(0, 0, 0));\r\n                    //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            }\r\n        });\r\n\r\n       \r\n    }\r\n\r\n\r\n    destroy() {\r\n     \r\n        this.destroyed = true;\r\n\r\n        // Libérez les références aux objets\r\n        this.canvas = null;\r\n        this.engine = null;\r\n\r\n        //this.character1.dispose();\r\n        this.character1 = null;\r\n        this.inputLeft = null;\r\n        this.inputRight = null;\r\n        this.inputJump = null;\r\n        this.inputLaunch = null;\r\n\r\n        // Réinitialisez ou supprimez d'autres ressources si nécessaire\r\n    }\r\n    isUpperCase(input,key) {\r\n        return key === input.toUpperCase();\r\n    }\r\n    getLastKeyPressed() {\r\n        return this.lastKeyPressed; // Fonction pour récupérer la dernière touche enfoncée\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController3 from './CharacterController3.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel3 {\r\n\r\n    constructor(scene,engine,name,left,right,jump,action,x,y,z,inputLeft2, inputRight2) {\r\n        this.control;\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name= name;\r\n        this.boxBody ;\r\n        this.sphereBody;\r\n        this.box;\r\n        this.rayHelper;\r\n        //this.testPlayer(scene,engine,name,x,y,z);\r\n      \r\n        this.shootBall(left,right,jump,action,x,y,z);\r\n    \r\n        this.enablePlayerControl(left,right,jump,action,inputLeft2, inputRight2);\r\n\r\n        \r\n     \r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n       \r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        this.box =box;\r\n   \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n      \r\n       \r\n        this.boxBody = boxBody;\r\n        \r\n    \r\n     \r\n     \r\n        \r\n    \r\n\r\n      \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(inputLeft,inputRight,jump,action,inputLeft2, inputRight2){\r\n\r\n        let control2 = new CharacterController3(canvas2,this.engine,this.sphereBody, inputRight,inputLeft,jump,action,inputLeft2, inputRight2);\r\n        this.control = control2;\r\n     \r\n      \r\n    }\r\n\r\n   \r\n    shootBall(left,right,jump,action,x,y,z){\r\n        let segments = 16;\r\n        let diameter = 2;\r\n\r\n        const sphere = BABYLON.MeshBuilder.CreateSphere(this.name, { segments, diameter }, this.scene);\r\n        sphere.position = new BABYLON.Vector3(x,y,z);\r\n\r\n       \r\n        var sphereShape = new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),diameter-1,this.scene);\r\n        var sphereBody = new BABYLON.PhysicsBody(sphere, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        sphereBody.shape = sphereShape;\r\n        sphereBody.setMassProperties({mass : 2});\r\n\r\n       \r\n        \r\n        this.sphereBody = sphereBody;\r\n       \r\n    }\r\n    disableThisObject(){\r\n\r\n        this.control.destroy();\r\n        this.control = null;\r\n        \r\n  \r\n       \r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel3;","\r\n\r\nexport class BowlingPin {\r\n\r\n    constructor(scene,x,y,z) {\r\n       \r\n        this.scene = scene;\r\n       \r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        this.mesh;\r\n        this.Aggregate;\r\n        this.meshIdPromise = this.createBowlingPin();\r\n    }\r\n    \r\n    createBowlingPin(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Bowling Pin.glb\", this.scene, (meshes) => {\r\n\r\n             \r\n\r\n                const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                    new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                    new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                    new BABYLON.Vector3(0.5, 1.2, 0.5),      // dimensions of the box\r\n                    this.scene                                // scene of the shape\r\n                );\r\n        \r\n\r\n                let boxKid = BABYLON.MeshBuilder.CreateBox(\"Pintrigger\");\r\n                //boxKid.isVisible = false;\r\n\r\n                //console.log(\"Chargement réussi Pin\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                mesh.scaling._z =  mesh.scaling._z *-1;\r\n                mesh.name =\"Pin\"\r\n\r\n  \r\n            \r\n        \r\n                mesh.position = new BABYLON.Vector3(this.x, this.y, this.z); // Positionne l'objet\r\n            \r\n\r\n            \r\n                var Aggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0.1 }, this.scene);\r\n                Aggregate.body.setCollisionCallbackEnabled(true);\r\n                this.Aggregate = Aggregate;\r\n                this.mesh = mesh;\r\n               \r\n                const meshId = mesh.uniqueId;\r\n                resolve(meshId);\r\n\r\n            }, undefined, undefined, \".glb\");\r\n        })\r\n\r\n    }\r\n  \r\n    \r\n    async getMeshId(){\r\n         return await this.meshIdPromise;\r\n    }\r\n \r\n   \r\n    disableThisObject(){\r\n        this.Aggregate.body.setCollisionCallbackEnabled(false);\r\n        this.Aggregate.body.dispose();\r\n        //this.mesh.dispose();\r\n       \r\n    }\r\n    isPinUp() {\r\n        // Récupérer la rotation de la quille\r\n        const rotation = this.mesh.rotationQuaternion.toEulerAngles();\r\n\r\n        // Définir un seuil pour la rotation, en dessous duquel la quille est considérée comme renversée\r\n        const threshold = 0.1; // À ajuster selon vos besoins\r\n\r\n        // Vérifier si la rotation autour de l'axe X (ou un autre axe selon votre modèle) dépasse le seuil\r\n        const isUp = Math.abs(rotation.x) < threshold;\r\n\r\n        return isUp;\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default BowlingPin;","import { CustomModels } from './CustomModels.js';\r\nimport CharacterController3 from './CharacterController3.js';\r\nimport PlayerLevel3 from './PlayerLevel3.js';\r\nimport BowlingPin from './BowlingPin.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level3.mp3\");\r\nvar name = \"level4\";\r\nlet advancedTexture ;\r\n\r\n\r\n\r\n\r\nlet player1;\r\nlet player2;\r\n\r\nlet countPlayer1 =0;\r\nlet countPlayer2 =0;\r\n\r\n\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n       \r\n    \r\n    \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   \r\n\r\n    var model = new CustomModels(scene);\r\n    \r\n    var listeQuilles1 = [];\r\n\r\n    \r\n\r\n    let add =13 ;\r\n    var listeQuilles2 = [];\r\n   \r\n    \r\n    \r\n\r\n\r\n \r\n   // console.log(countPlayer1);\r\n     player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8,'d','a');\r\n     player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n\r\n     //let pin = new BowlingPin(scene,0,2,19.397);\r\n    \r\n   \r\n    let ball1 = scene.getMeshByName(\"player1\");\r\n    \r\n    displayControlUI();\r\n    //CreateBowlingBall(0,6,0);\r\n\r\n    eventHandler(hk,player1,player2);\r\n\r\n   // model.CreatePlateform_Scene4();\r\n    model.CreateBowlingPlatform();\r\n    listeQuilles1 =  addQuille(listeQuilles1,0,0,-8);\r\n    listeQuilles2 =  addQuille(listeQuilles2,25,0,-8);\r\n\r\n    testSearch(listeQuilles1,countPlayer1,\"player1\");\r\n    testSearch2(listeQuilles2,countPlayer2,\"player2\");\r\n\r\n    \r\n        \r\n\r\n    let ball = scene.getMeshByName(\"ball\");\r\n    \r\n    \r\n\r\n  \r\n    /*\r\n    //trigger Player1\r\n    triggerRespawn(0,2,97.43,30, 30, 10);\r\n    triggerRespawn(7.5,2,48,1, 30,90);\r\n    triggerRespawn(-7.5,2,48,1, 30,90);\r\n\r\n    //trigger Player2\r\n    triggerRespawn(30,2,97.43,30, 30, 10);\r\n    triggerRespawn(20,2,48,1, 30,90);\r\n    triggerRespawn(35.5,2,48,1, 30,90);*/\r\n\r\n    respawnPlayerInput(player1,player2);\r\n\r\n    \r\n    createSkyBox();\r\n\r\n\r\n}\r\n\r\nfunction launch() {\r\n      \r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -22), scene);\r\n    camera.inertia = 0;\r\n    camera.angularSensibility = 0;\r\n    camera.detachControl(canvas);\r\n    camera.cameraRotation = 0;\r\n    scene.activeCameras.push(camera);\r\n    \r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1);\r\n    scene.activeCameras.push(camera);\r\n\r\n\r\n    var camera2 = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(25, 4, -23), scene);\r\n    camera2.inertia = 0;\r\n    camera2.angularSensibility = 0;\r\n    camera2.detachControl(canvas);\r\n    camera2.cameraRotation = 0;\r\n    scene.activeCameras.push(camera2);\r\n    camera2.viewport = new BABYLON.Viewport(0.5,0 , 0.5, 1);\r\n    scene.activeCameras.push(camera2);\r\n    \r\n   \r\n\r\n \r\n\r\n    sceneData();\r\n  \r\n\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n    //console.log(playerMesh2);\r\n    //console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n    \r\n    camera.lockedTarget = playerMesh;\r\n    //camera2.lockedTarget = playerMesh2;\r\n\r\n    engine.runRenderLoop(function () {\r\n\r\n        scene.render();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerRespawn(x,y,z,sizeX,sizeY,sizeZ){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(sizeX,sizeY,sizeZ),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    //let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Respawn\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n    \r\n\r\n    \r\n    //Aggregate.dispose();\r\n    \r\n}\r\n\r\nfunction eventHandler(hk,player1,player2){\r\n\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n       \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n            console.log(\"YOU WINNNNNNN\")\r\n            //killLevel();\r\n            //loadNextLevel();\r\n            player1 = null;\r\n  \r\n\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Respawn\" && ( ev.collider.transformNode.name == \"player1\" || ev.collider.transformNode.name == \"player2\" ) ){\r\n            console.log(\"YOU RESPAWNWNNN\");\r\n\r\n            if(ev.collider.transformNode.name == \"player1\"){\r\n                let ball1 = scene.getMeshByName(\"player1\");\r\n         \r\n                player1.disableThisObject();\r\n                //player1 = null;\r\n                ball1.dispose();\r\n                \r\n                player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',-5,5,0);\r\n            \r\n     \r\n            }else{\r\n                let ball2 = scene.getMeshByName(\"player2\");\r\n                player2.disableThisObject();\r\n                //player2 = null;\r\n                ball2.dispose()\r\n\r\n                player2= new PlayerLevel3(scene,engine,\"player2\",'j','l','i','Enter',28,5,0);\r\n              \r\n            }\r\n          \r\n         \r\n\r\n            \r\n          \r\n        }\r\n     \r\n    });\r\n\r\n   //WinParty\r\n\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nasync function testSearch(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer1++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer1);\r\n        document.getElementById(\"pin1\").innerHTML = countPlayer1 + \"/93 PINS\";\r\n\r\n  \r\n        if(countPlayer1 >=93){\r\n            sceneManager.setcountPlayer1()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2:\"+sceneManager.winCountPlayer2)\r\n        }\r\n        \r\n      \r\n   \r\n        if(countPlayer1 >= 93 ){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n       \r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\nasync function testSearch2(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer2++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer2);\r\n\r\n\r\n        document.getElementById(\"pin2\").innerHTML = countPlayer2 + \"/93 PINS\";\r\n  \r\n     \r\n        if(countPlayer2 >92){\r\n            sceneManager.setcountPlayer2()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2\"+sceneManager.winCountPlayer2)\r\n\r\n        }\r\n   \r\n        if(countPlayer2 >= 93){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\n\r\n\r\n\r\nfunction addQuille( listeQuilles1,x,y,z){\r\n\r\n\r\n    listeQuilles1 = [\r\n        //-3\r\n        new BowlingPin(scene, 0.25+x, 2+y,21+z),\r\n        //-2\r\n             \r\n        //new BowlingPin(scene, 0, 2, 21.5),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y,21.5+z),\r\n        new BowlingPin(scene, 0.50+x, 2+y,21.5+z),\r\n        //new BowlingPin(scene, 0.60, 2,21.5),\r\n      \r\n\r\n\r\n        //-1\r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0.25+x, 2+y, 22+z),\r\n        new BowlingPin(scene, 0.60+x, 2+y,22+z),\r\n        \r\n      \r\n\r\n\r\n        //0\r\n        new BowlingPin(scene, -0.5+x, 2+y, 22.5+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,22.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,22.5+z),\r\n        \r\n        //1\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23+z),\r\n   \r\n        //2\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 23.5+z),\r\n\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,23.5+z),\r\n      \r\n        \r\n        //3\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24+z),\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24+z),\r\n        \r\n        //4\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 24.5+z),\r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 24.5+z),\r\n       \r\n\r\n\r\n        \r\n        //5\r\n\r\n        new BowlingPin(scene, -0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25+z),\r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25+z),\r\n        //new BowlingPin(scene, 4, 2, 25),\r\n        \r\n        \r\n\r\n       //6\r\n       \r\n        new BowlingPin(scene, -0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 25.5+z),\r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 25.5+z),\r\n   \r\n        \r\n\r\n        //7\r\n        new BowlingPin(scene, -0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -4+x, 2+y, 26+z),\r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 26+z),  \r\n        new BowlingPin(scene, 2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4.5+x, 2+y, 26+z),\r\n\r\n        //listeQuilles1.forEach(pin => pin.position.y += 5)\r\n    \r\n     \r\n    ];\r\n    return listeQuilles1;\r\n}\r\n\r\nfunction respawnPlayerInput() {\r\n    // Ajouter un écouteur d'événements pour la touche \"espace\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.key === 'Shift') {\r\n            // Code à exécuter lorsque la touche \"espace\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"espace\" a été enfoncée');\r\n            let ball1 = scene.getMeshByName(\"player1\");\r\n            player1.disableThisObject();\r\n            ball1.dispose();\r\n            player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8,'d','a');\r\n            \r\n        //document.getElementById(\"pin1\").innerText = countPlayer1+\"/93 PINS\";\r\n        \r\n        // Modifier le texte de l'élément avec l'identifiant \"pin2\"\r\n  \r\n        }\r\n    });\r\n\r\n    // Ajouter un écouteur d'événements pour la touche \"entrée\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.code === 'Backspace') {\r\n            // Code à exécuter lorsque la touche \"entrée\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"entrée\" a été enfoncée');\r\n            let ball2 = scene.getMeshByName(\"player2\");\r\n            player2.disableThisObject();\r\n            ball2.dispose();\r\n            player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n            //document.getElementById(\"pin2\").innerText = countPlayer2+\"/93 PINS\";\r\n       \r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchEnd();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox2/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nexport { name, scene, sceneData, launch };\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n//\r\nvar createScene = function () {\r\n    soundManager.initMusic();\r\n  \r\n    // GUI\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   // Création d'une caméra\r\n    const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n    //camera.attachControl()\r\n  \r\n   //screen();\r\n\r\n    let menu = new CustomModels(scene);\r\n    menu.CreateMenu3dScene(0,0,0);\r\n\r\n    displayMenu();\r\n   \r\n    createSkyBox();\r\n\r\n    //createMusicButton();\r\n    //scene.debugLayer.show();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayMenu(){\r\n\r\n\r\n  \r\n    advancedTexture2 = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_text\");\r\n\r\n    button();\r\n\r\n    \r\n    // Création du texte en haut de la page\r\n    const headerText = new BABYLON.GUI.TextBlock();\r\n    headerText.text = \"Les Jeux Olympiques Maudits\";\r\n    headerText.color = \"black\";\r\n    headerText.fontSize = 100;\r\n    headerText.fontFamily = \"UnifrakturCook\";\r\n   \r\n   // headerText.fontFamily = \"Pirata One\"; // Utiliser la police Pirata One ici\r\n    headerText.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n    headerText.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP; // Modifier cette ligne\r\n    headerText.paddingTop = \"-500px\"; // Ajout de 20px de padding en haut\r\n    advancedTexture2.addControl(headerText);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    advancedTexture2.dispose();\r\n    advancedTexture.dispose();\r\n    engine.stopRenderLoop();\r\n    soundManager.stopMusic();\r\n    soundManager.destroy();\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    //sceneManager.launchLevel2();\r\n    soundManager.stopMusic();\r\n    sceneManager.launchStart();\r\n}\r\n\r\nfunction button(){\r\n    // Création du GUI\r\nadvancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"Play\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    soundManager.stopMusic();\r\n    loadNextLevel();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 100.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    //skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nfunction screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 80,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    \r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"video/Loading.mp4\", scene);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n    \r\n}\r\n\r\n// Fonction pour créer le bouton de contrôle de la musique\r\nfunction createMusicButton() {\r\n    const musicButton = BABYLON.GUI.Button.CreateSimpleButton(\"musicButton\", \"Music\");\r\n    musicButton.width = \"100px\";\r\n    musicButton.height = \"50px\";\r\n    musicButton.color = \"white\";\r\n    musicButton.background = \"blue\";\r\n    musicButton.left = \"-700px\"; // Position en haut à gauche\r\n    musicButton.top = \"300px\";\r\n    musicButton.cornerRadius = 10;\r\n\r\n    // Logique du bouton Music\r\n    musicButton.onPointerClickObservable.add(function () {\r\n        // Ajoutez ici la logique pour activer/désactiver la musique\r\n        soundManager.initMusic();\r\n        console.log(\"Music button clicked\");\r\n    });\r\n\r\n    advancedTexture.addControl(musicButton);\r\n}\r\n\r\n\r\nexport {  scene, launch };","// Importez les modules \"scene1.js\" et \"scene2.js\" pour accéder à leurs fonctionnalités\r\nimport * as start from './cinematique.js';\r\nimport * as end from './End.js';\r\nimport * as scene2 from './scene2.js'\r\nimport * as scene3 from './scene3.js'\r\nimport * as scene4 from './scene4.js'\r\nimport * as menu from './Menu.js'\r\n\r\nlet winCountPlayer1 =0;\r\nlet winCountPlayer2 =0;\r\n// Fonctions principales\r\nfunction Main() {\r\n    \r\n    // Appelez la fonction \"launch\" du module \"level2\" pour lancer la scène 2\r\n    \r\n    //launchEnd();\r\n   \r\n    //launchLevel2();\r\n   //launchLevel3();\r\n   //launchLevel4();\r\n\r\n    launchLevelMenu();\r\n   //launchStart();\r\n    \r\n\r\n   \r\n}\r\nfunction launchLevelMenu(){\r\n    \r\n    menu.launch();\r\n}\r\nfunction launchEnd(){\r\n    \r\n    end.launch();\r\n}\r\nfunction launchLevel2(){\r\n    scene2.killLevel();\r\n    scene2.launch();\r\n}\r\n\r\n\r\nfunction launchLevel3(){\r\n    \r\n   scene3.launch();\r\n}\r\n\r\nfunction launchLevel4(){\r\n    \r\n    scene4.launch();\r\n}\r\nfunction launchStart(){\r\n    \r\n    start.launch();\r\n}\r\n\r\n\r\n\r\nfunction setcountPlayer1(){\r\n    winCountPlayer1++;\r\n}\r\nfunction setcountPlayer2(){\r\n    winCountPlayer2++;\r\n}\r\n \r\n// Exportez toutes les fonctions d'un coup\r\nexport { Main, launchEnd, launchLevel2, launchLevel3, launchLevel4,setcountPlayer1,setcountPlayer2,launchLevelMenu,launchStart,winCountPlayer1,winCountPlayer2 };\r\n\r\n\r\n// Exécute la fonction principale\r\nMain();\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","scene","musicName","this","musicSound","initMusic","music","BABYLON","Sound","loop","autoplay","window","addEventListener","Engine","audioEngine","audioContext","state","resume","then","once","stopMusic","stop","destroy","removeEventListener","clickHandler","canvas","document","getElementById","engine","Scene","soundManager","createScene","HemisphericLight","Vector3","FreeCamera","async","planeOpts","height","width","sideOrientation","Mesh","DOUBLESIDE","videoPlane","MeshBuilder","CreatePlane","position","videoMaterial","StandardMaterial","videoTexture","VideoTexture","autoPlay","autoUpdateTexture","poster","muted","diffuseTexture","roughness","emissiveColor","Color3","White","material","video","play","screen","setTimeout","meshes","forEach","mesh","dispose","cameras","lights","light","stopRenderLoop","playerWin","playerLoose","trophy","style","display","SceneLoader","ImportMesh","console","log","name","x","y","z","undefined","skybox","CreateBox","size","skyboxMaterial","backFaceCulling","disableLighting","infiniteDistance","reflectionTexture","CubeTexture","coordinatesMode","Texture","SKYBOX_MODE","createSkyBox","CustomModels","CreateTree","tree","tronc","PhysicsAggregate","PhysicsShapeType","BOX","mass","shape","isTrigger","boundingBox","CreatePineTree","scaling","shapeBox1","PhysicsShapeBox","Quaternion","shapeBox2","CreateSnowManOnSki","parent","setParent","CreateSceneProd","CreatePlayer","Zone","plane","ground","CreateGround","subdivisions","addInPlace","rotation","groundMaterial","diffuseColor","flatplane","createDeadTree","globalMesh","createSnowTree","createLitleSnowTree","createSnowMan","CreateRampe1","bigMesh","elment","MESH","createSnowMount","element","createFinalScene2","getMeshByName","i","length","CreatePlateform","CreatePlateformlevel2","CreatePlateform_Scene4","CreateBowlingPlatform","CreateBowlingBall","SPHERE","CreateColiseum","CreateMenu3dScene","Createlevel1","character","forward","backward","left","right","forward2","backward2","left2","right2","setupKeyboardInput","forwardI","keys","event","runRenderLoop","transformNode","scale","applyForce","setAngularVelocity","ZeroReadOnly","canvas2","PlayerLevel1","boxBody","testPlayer","enablePlayerControl","box","depth","isVisible","rotationQuaternion","Identity","boxShape","PhysicsBody","PhysicsMotionType","DYNAMIC","setMassProperties","blueMaterial","setCollisionCallbackEnabled","destroyPlayer","control","ShowLoadingScreen","player","reloadlevel","character1","input1","inputJump","animationGroup","setupKeyboardInputPlayer","isKeyPressed","isKeyPressed2","engine2","jump","boxMesh","animationGroups","createPlayer","visibility","Character","ImportMeshAsync","push","animGestionner","inputLeft","inputRight","inputLaunch","inputLeft2","inputRight2","destroyed","action","input2","isUpperCase","input","toUpperCase","getLastKeyPressed","lastKeyPressed","sphereBody","rayHelper","shootBall","control2","CharacterController3","sphere","CreateSphere","segments","diameter","sphereShape","PhysicsShapeSphere","disableThisObject","Aggregate","meshIdPromise","createBowlingPin","Promise","resolve","_z","body","meshId","uniqueId","getMeshId","isPinUp","toEulerAngles","Math","abs","player1","player2","countPlayer1","countPlayer2","addQuille","listeQuilles1","winCountPlayer1","winCountPlayer2","launchEnd","render","launchLevel2","camera","FollowCamera","cameraRotation","viewport","Viewport","camera2","activeCameras","havokInstance","HavokPhysics","hk","HavokPlugin","enablePhysics","collisionsEnabled","triggerDie","place","playerMesh","onTriggerCollisionObservable","add","ev","type","collider","collidedAgainst","eventHandler","sceneData","playerMesh2","lockedTarget","executeWhenReady","catch","error","launchLevel3","triggerEnd","onPointerDown","evt","pickResult","hit","pickedMesh","playerMesh1","launchLevel4","inertia","angularSensibility","detachControl","model","listeQuilles2","ball1","ball2","countPlayer","playerText","splice","innerHTML","testSearch","testSearch2","code","launchStart","setcountPlayer1","setcountPlayer2","GUI","AdvancedDynamicTexture","CreateFullscreenUI","playButton","Button","CreateSimpleButton","color","cornerRadius","background","thickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","pointerEnterAnimation","pointerOutAnimation","children","fontFamily","onPointerClickObservable","addControl","headerText","TextBlock","text","fontSize","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_CENTER","verticalAlignment","VERTICAL_ALIGNMENT_TOP","paddingTop","displayMenu"],"sourceRoot":""}