{"version":3,"file":"js/babylonBundle.js","mappings":"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","sources":["webpack://gaw/webpack/bootstrap","webpack://gaw/webpack/runtime/define property getters","webpack://gaw/webpack/runtime/hasOwnProperty shorthand","webpack://gaw/./game/SoundManager.js","webpack://gaw/./game/cinematique.js","webpack://gaw/./game/End.js","webpack://gaw/./game/CustomModels.js","webpack://gaw/./game/CharacterController.js","webpack://gaw/./game/PlayerLevel1.js","webpack://gaw/./game/scene2.js","webpack://gaw/./game/CharacterController2.js","webpack://gaw/./game/PlayerLevel2.js","webpack://gaw/./game/scene3.js","webpack://gaw/./game/CharacterController3.js","webpack://gaw/./game/PlayerLevel3.js","webpack://gaw/./game/BowlingPin.js","webpack://gaw/./game/scene4.js","webpack://gaw/./game/Menu.js","webpack://gaw/./game/SceneManager.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","class SoundManager {\r\n    constructor(scene,  musicName) {\r\n        this.scene = scene;\r\n\r\n        this.musicName = musicName;\r\n        this.musicSound = null;\r\n    }\r\n\r\n    initMusic() {\r\n        const music = () => {\r\n            this.musicSound = new BABYLON.Sound(\"\", \"./models/Music/\"+this.musicName, this.scene, null, {\r\n                loop: true,\r\n                autoplay: true,\r\n            });\r\n        };\r\n\r\n        window.addEventListener('click', () => {\r\n            if (BABYLON.Engine.audioEngine.audioContext.state === 'suspended') {\r\n                BABYLON.Engine.audioEngine.audioContext.resume().then(() => {\r\n                    music();\r\n                });\r\n            } else {\r\n                music();\r\n            }\r\n        }, { once: true });\r\n    }\r\n\r\n    stopMusic() {\r\n        if (this.musicSound) {\r\n            this.musicSound.stop();\r\n        }\r\n    }\r\n}\r\nexport default SoundManager;","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n//let soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n    soundManager.initMusic();\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  \r\n    // Création d'une caméra\r\n        const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n        camera.attachControl()\r\n    screen();\r\n     // Attendre quelques secondes avant de charger le niveau suivant\r\n    setTimeout(function () {\r\n        loadNextLevel();\r\n    }, 21000); \r\n    //loadNextLevel();\r\n   \r\n}\r\nasync function screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 100,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    // Options pour la texture vidéo, y compris la lecture audio\r\n    var videoTextureOptions = {\r\n        loop: false, // Désactivé la boucle\r\n        autoPlay: false, // Désactiver la lecture automatique pour éviter les erreurs\r\n        autoUpdateTexture: true,\r\n        poster: null,\r\n        muted: true // Initialement en mode muet\r\n    };\r\n\r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"video/scrawl text.mp4\", scene, true, false, videoTextureOptions);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n\r\n    // Démarre la vidéo en mode muet pour éviter les restrictions du navigateur\r\n    videoTexture.video.play();\r\n\r\n    // Gestionnaire d'événement pour activer le son après un clic sur le canvas\r\n    var canvas = document.getElementById('renderCanvas');\r\n    canvas.addEventListener('click', function() {\r\n        // Désactiver le mode muet et redémarrer la vidéo\r\n        videoTexture.video.muted = false;\r\n        videoTexture.video.play().then(() => {\r\n            console.log(\"Video is playing with sound.\");\r\n        }).catch((error) => {\r\n            console.error(\"Error attempting to play the video with sound:\", error);\r\n        });\r\n    });\r\n\r\n    // Gestionnaire d'événement pour détecter la fin de la vidéo\r\n    videoTexture.video.addEventListener('ended', function() {\r\n        console.log(\"Video has ended.\");\r\n        // Ajouter ici toute action à effectuer lorsque la vidéo se termine\r\n    });\r\n}\r\n\r\n\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\nfunction loadNextLevel(){\r\n    soundManager.stopMusic();\r\n    killLevel();\r\n    sceneManager.launchLevel2();\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    engine.stopRenderLoop();\r\n \r\n}\r\n\r\n\r\nexport {  scene, launch };","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"End.mp3\");\r\n\r\nvar createScene = function () {\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 4, -12.5), scene);\r\n\r\n    //camera.attachControl();\r\n    if(sceneManager.winCountPlayer1 > sceneManager.winCountPlayer2){\r\n        playerWin(-4,0,-1);\r\n        playerLoose(2,0,0);\r\n        trophy(-3.5,0,-1.5);\r\n\r\n    }else{\r\n        playerWin(2,0,-1);\r\n        playerLoose(-4,0,0);\r\n        trophy(2.5,0,-1.5);\r\n    }\r\n\r\n    //scene.debugLayer.show();\r\n    displayControlUI();\r\n    loadEndScene();\r\n    soundManager.initMusic();\r\n    createSkyBox();   \r\n    //hideControlUI();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\nfunction hideControlUI(){\r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"End\");\r\n\r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n\r\n}\r\nfunction playerLoose(x,y,z){\r\n    \r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Loose.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerLoose\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n\r\n\r\n}\r\nfunction playerWin(x,y,z){\r\n  \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"victory.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n}\r\n\r\nfunction loadEndScene(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"recommencer.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi end scene\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"EndScene\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\nfunction trophy(x,y,z){\r\n    \r\n    BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Trophy.glb\", scene, (meshes) => {\r\n        console.log(\"Chargement réussi coliseum\", meshes);\r\n     \r\n        let mesh = meshes[0];\r\n       \r\n        mesh.name =\"playerWin\"\r\n        \r\n       \r\n        mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n        \r\n        \r\n    \r\n      \r\n      \r\n    }, undefined, undefined, \".glb\");\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nexport {  scene, launch };\r\n\r\n","\r\n\r\n\r\nexport class CustomModels {\r\n\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    \r\n    \r\n    /** ######################################################################## LEVEL2 3D MODEL #########################################################################**/\r\n\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    async CreateTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n         \r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n            \r\n        \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    async CreatePineTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        return   BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            meshes[0].scaling.x = 3\r\n            meshes[0].scaling.y = 2\r\n            meshes[0].scaling.z = 4\r\n            tree = meshes[0];\r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n            \r\n           \r\n            tree.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(3, 3, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n            //troncAggregate.shape.\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, shapeBox2, { mass: 0 }, this.scene);\r\n           \r\n            \r\n        \r\n           //return boundingBox;\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n       \r\n    }\r\n\r\n\r\n\r\n    CreateSnowManOnSki(x, y, z,parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        // Charger le modèle 3D\r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"snowman_on_skis.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi SnowMan\", meshes);\r\n            mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n            mesh.name = \"SnowMan\";\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne le modèle une fois chargé\r\n            mesh.setParent(parent);\r\n \r\n            //mesh.rotationQuaternion._y = 85;\r\n\r\n          \r\n        }, undefined, undefined, \".glb\");\r\n    \r\n        return { mesh }; // Retourne mesh\r\n    }\r\n    \r\n    \r\n  \r\n    \r\n   \r\n    async CreateSceneProd(x, y, z) {\r\n       \r\n    }\r\n    async CreatePlayer(x, y, z) {\r\n        \r\n    }\r\n      \r\n    async Zone(x, y, z) {\r\n      \r\n     \r\n    }\r\n\r\n    async plane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(-0.1, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n\r\n    async flatplane(x, y, z,width,height,scene) {\r\n      \r\n        let subdivisions = 1\r\n        \r\n        var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width, height, subdivisions },scene);\r\n        ground.position.addInPlace(new BABYLON.Vector3(x, y, z)); \r\n        // Créez un quaternion pour représenter la rotation souhaitée\r\n       \r\n       \r\n        ground.rotation = new BABYLON.Vector3(0, 0, 0);\r\n\r\n        \r\n        //create physic impostor\r\n        var groundAggregate =new BABYLON.PhysicsAggregate(ground, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, scene);\r\n        \r\n            // Appliquez la rotation au sol\r\n      \r\n        // create Materials\r\n        var groundMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        groundMaterial.diffuseColor = new BABYLON.Color3(0.92, 0.29, 0.28); // Rouge doux\r\n         // Set position of the ground\r\n        //ground.position = new BABYLON.Vector3(x, y, z);\r\n        \r\n        //add material to the object\r\n        ground.material = groundMaterial;\r\n        //console.log(ground);\r\n        return ground;\r\n     \r\n    }\r\n    async createDeadTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Dead Trees With Snow.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 30\r\n            meshes[0].scaling.y = 20\r\n            meshes[0].scaling.z = 20\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 1, 3),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(30, 30, 30),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n\r\n  \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Snow Tree.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createLitleSnowTree(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Pine Tree with Snow two.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 10\r\n            meshes[0].scaling.y = 10\r\n            meshes[0].scaling.z = 10\r\n\r\n            let globalMesh = meshes[0];\r\n            tronc = meshes[1];\r\n\r\n            tronc.name =\"tronc\"\r\n            console.log(tronc.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n    async createSnowMan(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"SnowManRotated.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi arbre\", meshes);\r\n            \r\n            meshes[0].scaling.x = 1\r\n            meshes[0].scaling.y = 1\r\n            meshes[0].scaling.z = 1\r\n      \r\n            let globalMesh = meshes[0];\r\n            \r\n            tronc = meshes[1];\r\n            tronc.name =\"tronc\"\r\n            console.log(\"SNOWMAN \"+globalMesh.name);\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n            const shapeBox2 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, -1),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(5, 10, 5),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n           \r\n            \r\n           \r\n            globalMesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(tronc, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc,shapeBox2, { mass: 0 }, this.scene);\r\n      \r\n        \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n     \r\n    \r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateRampe1(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"rampe_2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n \r\n            meshes[0].scaling.x = 5\r\n            meshes[0].scaling.y = 5\r\n            meshes[0].scaling.z = 5\r\n   \r\n           \r\n            let mesh = meshes[0];\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            mesh.name =\"Rampe\"\r\n            let elment =meshes[1] ;\r\n           \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n\r\n            var troncAggregate =new BABYLON.PhysicsAggregate(elment, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n           \r\n\r\n            \r\n           // var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n    createSnowMount(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Rock Forms 3 (White).glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            meshes[0].scaling.x = 150\r\n            meshes[0].scaling.y = 150\r\n            meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 4, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[1].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            let element =meshes[1] ;\r\n            element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n        \r\n             \r\n          \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0 }, this.scene);\r\n            troncAggregate.shape.isTrigger =  true;\r\n\r\n            \r\n            var troncAggregate2 =new BABYLON.PhysicsAggregate(element, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n\r\n\r\n    createFinalScene2(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n       \r\n        \r\n        let bigMesh = BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"finalscene2.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi\", meshes);\r\n           \r\n            //meshes[0].scaling.x = 150\r\n            //meshes[0].scaling.y = 150\r\n            //meshes[0].scaling.z = 150\r\n\r\n\r\n            const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                new BABYLON.Vector3(10, 10, 20),      // dimensions of the box\r\n                this.scene                                // scene of the shape\r\n            );\r\n            \r\n       \r\n           \r\n            let mesh = meshes[0];\r\n            mesh.name =\"tronc\"\r\n            console.log(meshes[2].name);\r\n            //tronc = meshes[1];\r\n            //mesh.name =\"tronc\"\r\n            //let element =meshes[1] ;\r\n            let element = this.scene.getMeshByName(\"Cube (sol)\");\r\n            //let element2 = this.scene.getMeshByName(\"Cube (sol)\") ;\r\n            //let element3 = this.scene.getMeshByUniqueId(769) ;\r\n\r\n            //element.name =\"tronc\"\r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n\r\n            //console.log();\r\n        \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                i++\r\n            }\r\n            \r\n          \r\n          \r\n          \r\n        }, undefined, undefined, \".glb\");\r\n\r\n        bigMesh.position= new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n    \r\n        return {  bigMesh};\r\n    }\r\n    \r\n    \r\n    \r\n    /** ######################################################################## Scene3 3D MODEL #########################################################################**/\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreatePlateform(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"plateforme_scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n        CreatePlateformlevel2(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene3.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform level2\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n\r\n        \r\n\r\n            return { boundingBox };\r\n        }\r\n\r\n\r\n\r\n /** ######################################################################## Scene4 3D MODEL #########################################################################**/\r\n    // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n    CreatePlateform_Scene4(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene4_gameplay_ELEMENT.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingPlatform(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"scene_de_bowling.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi plateform\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n            //tronc = meshes[1];\r\n            mesh.name =\"colision\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            \r\n            let i =1;\r\n            while( i <  meshes.length){\r\n                \r\n                var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                i++\r\n            }\r\n        \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n    CreateBowlingBall(x, y, z) {\r\n        let tree;\r\n        let boundingBox;\r\n        let tronc;\r\n    \r\n        BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Spiky Ball.glb\", this.scene, (meshes) => {\r\n            console.log(\"Chargement réussi ball\", meshes);\r\n        \r\n            let mesh = meshes[0];\r\n          \r\n            mesh.name =\"ball\"\r\n            \r\n        \r\n            mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n            \r\n            var troncAggregate =new BABYLON.PhysicsAggregate(mesh, BABYLON.PhysicsShapeType.SPHERE, { mass: 0 }, this.scene);\r\n         \r\n        \r\n        }, undefined, undefined, \".glb\");\r\n\r\n    \r\n\r\n        return { boundingBox };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /** ######################################################################## MENU 3D MODEL #########################################################################**/\r\n\r\n\r\n\r\n        // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n               // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateColiseum(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"coliseum.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi coliseum\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"coliseum\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n    \r\n                //var troncAggregate =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n               // troncAggregate.shape.isTrigger =  true;\r\n    \r\n                \r\n                //var troncAggregate2 =new BABYLON.PhysicsAggregate(tronc, BABYLON.PhysicsShapeType.BOX, { mass: 0 }, this.scene);\r\n\r\n                 \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n          // Crée un modèle d'arbre 3D et le positionne aux coordonnées spécifiées (x, y, z)\r\n        CreateMenu3dScene(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n           \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"fmenu.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi du menu\", meshes);\r\n             \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"fondMenu\"\r\n                \r\n               \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n            \r\n              \r\n              \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n         \r\n        \r\n            return { boundingBox };\r\n        }\r\n\r\n        async Createlevel1(x, y, z) {\r\n            let tree;\r\n            let boundingBox;\r\n            let tronc;\r\n        \r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"level2Map.glb\", this.scene, (meshes) => {\r\n                console.log(\"Chargement réussi plateform\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                //tronc = meshes[1];\r\n                mesh.name =\"colision\"\r\n                \r\n            \r\n                mesh.position = new BABYLON.Vector3(x, y, z); // Positionne l'arbre aux \r\n                \r\n                \r\n                let i =1;\r\n                while( i <  meshes.length){\r\n                    \r\n                    var troncAggregate =new BABYLON.PhysicsAggregate(meshes[i], BABYLON.PhysicsShapeType.MESH, { mass: 0 }, this.scene);\r\n                    //troncAggregate.body.setCollisionCallbackEnabled(true);\r\n                    i++\r\n                }\r\n            \r\n            \r\n            }, undefined, undefined, \".glb\");\r\n    \r\n        \r\n    \r\n            return { boundingBox };\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n    \r\n   \r\n}\r\n","class CharacterController {\r\n    constructor(canvas , engine, character,forward,backward,left,right) {\r\n        this.setupKeyboardInput(canvas, engine, character,forward,backward,left,right);\r\n    }\r\n\r\n    setupKeyboardInput(canvas, engine, character,forwardI,backward,left,right) {\r\n        this.keys = {};\r\n\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            this.keys[event.key] = true;\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            // Vérifie l'état des touches dans l'objet \"keys\" et effectue des actions en conséquence.\r\n\r\n            if (this.keys[forwardI]) {\r\n                //console.log('Touche Z enfoncée');\r\n                \r\n                let forward = character.transformNode.forward.scale(-5);\r\n               //console.log(forward);\r\n\r\n                character.applyForce(forward , character.transformNode.position);\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n          \r\n            }\r\n\r\n            if (this.keys[backward]) {\r\n                //console.log('Touche S enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(0, 0, 5), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                //charater.position.z += 0.1; // Déplace le personnage vers l'avant (positif sur l'axe z).\r\n            }\r\n\r\n            if (this.keys[left]) {\r\n                //console.log('Touche Q enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, -0.5, 0));\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n                //character.position.x += 0.1; // Déplace le personnage vers la gauche (positif sur l'axe x).\r\n            }\r\n\r\n            if (this.keys[right]) {\r\n                //console.log('Touche D enfoncée');\r\n                character.applyForce(new BABYLON.Vector3(-5, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0.5, 0));\r\n                //character.position.x -= 0.1; // Déplace le personnage vers la droite (négatif sur l'axe x).\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController;\r\n","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n\r\n\r\n\r\n\r\nexport class PlayerLevel1 {\r\n\r\n    constructor(scene,engine,name,forward,backward,left,right,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.boxBody ;\r\n\r\n        this.testPlayer(scene,engine,name,x,y,z);\r\n        this.enablePlayerControl(forward,backward,left,right);\r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n\r\n        \r\n\r\n\r\n       \r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n\r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        box.isVisible = false;\r\n\r\n        let snowMan = new CustomModels(scene).CreateSnowManOnSki(x,y-0.5,z,box);\r\n      \r\n\r\n        \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        \r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n\r\n        //rotate character\r\n      \r\n      \r\n        this.boxBody = boxBody;\r\n        \r\n     \r\n        \r\n      \r\n     \r\n        \r\n    \r\n       \r\n \r\n        return box;\r\n    \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(forward,backward,left,right){\r\n       let control = new CharacterController(canvas2,this.engine,this.boxBody,forward,backward,left,right);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel1;","\r\nimport CharacterController from './CharacterController.js';\r\nimport { CustomModels } from './CustomModels.js';\r\n\r\nimport {PlayerLevel1} from \"./PlayerLevel1.js\";\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\nlet soundManager = new SoundManager(scene,\"level1.mp3\");\r\nlet advancedTexture ;\r\nBABYLON.SceneLoader.ShowLoadingScreen = true; \r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nvar name = \"level2\";\r\nvar value = \"start\";     \r\n//var player = new PlayerLevel1(scene);\r\n\r\nasync function getInitializedHavok() {\r\n  return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //BABYLON.SceneLoader.ShowLoadingScreen = true; \r\n    //displayControlUI();\r\n    // Ajoutez une lumière hémisphériques\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    \r\n    const havokInstance = await HavokPhysics();\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n   \r\n    \r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0),  hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n\r\n    var sceneprod = new CustomModels(scene);\r\n\r\n   soundManager.initMusic();\r\n\r\n    let x = -10;\r\n\r\n\r\n//********************************************************** PART 5 LEVEL ******************************************************************************/////////////////\r\n    //rajoute d'un plane\r\n    \r\n\r\n\r\n    //trigger to die and pass\r\n    triggerDie(-1.79, -1.02, -832.37);\r\n    \r\n\r\n    \r\n\r\n    displayControlUI();\r\n\r\n   //testPlayer();\r\n\r\n\r\n    \r\n   //montrer le layer\r\n   //scene.debugLayer.show();\r\n   \r\n   \r\n\r\n    var place = new CustomModels(scene);\r\n    //place.createFinalScene2(4,-24,-970);\r\n   \r\n    await place.Createlevel1(0,0,-800)\r\n    \r\n\r\n    \r\n   let player = new PlayerLevel1(scene,engine,'player1','z','s','q','d',5,170,0);\r\n\r\n   let player2 = new PlayerLevel1(scene,engine,'player2','ArrowUp','ArrowDown','ArrowLeft','ArrowRight',0,170,0);\r\n \r\n\r\n    \r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n\r\n    \r\n    eventHandler(hk,player);\r\n    createSkyBox();\r\n   return playerMesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getScene() {\r\n    return scene;\r\n}\r\n\r\n\r\n\r\nfunction triggerDie(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(40, 40, 40),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction eventHandler(hk,player){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"tronc\"){\r\n                console.log(\"End OF the Game\")\r\n                reloadlevel();\r\n               \r\n                player = null;\r\n}      \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1+\"  COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n           //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n            player = null;\r\n  \r\n\r\n        }\r\n        if(ev.collidedAgainst.transformNode.name ==\"Die\"){\r\n            console.log(\"YOU DIEEEEEEEEEE\");\r\n            value = \"death\";\r\n            reloadlevel();\r\n            player = null;\r\n           \r\n            //return \"death\";\r\n        }\r\n    });\r\n}\r\n\r\nasync function launch() {\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1); \r\n\r\n    scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh;\r\n        camera2.lockedTarget = playerMesh2;\r\n\r\n        // Lancer le rendu une fois que la scène est prête\r\n        scene.executeWhenReady(() => {\r\n            engine.runRenderLoop(function () {\r\n                scene.render();\r\n            });\r\n        });\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n    // Afficher l'écran de chargement de Babylon.js\r\n    scene.executeWhenReady(() => {\r\n        BABYLON.SceneLoader.ShowLoadingScreen = true;\r\n    });\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n  \r\n  \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction reloadlevel(){\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n\r\n \r\n\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel3();\r\n\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n   // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"block\";\r\n\r\n}\r\nfunction hideControlUI(){\r\n       // Récupération de l'élément par son ID\r\n   var level1 = document.getElementById(\"level1\");\r\n\r\n   // Afficher l'élément\r\n   level1.style.display = \"none\";\r\n\r\n}\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nexport { name, scene, sceneData, launch,killLevel };\r\n","class CharacterController2 {\r\n    constructor(canvas, scene, engine, character1, input1, inputJump,animationGroup) {\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, input1, inputJump,animationGroup);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1, inputJump,animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n\r\n                \r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n                    \r\n                 \r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                    console.log(\"Touche enfoncée, action effectuée jump\");\r\n              \r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n            \r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump ) {\r\n                isKeyPressed2 = false;\r\n                console.log(\"Touche relâchée jump\");\r\n                // Ajoutez ici la logique pour arrêter le saut du personnage si nécessaire\r\n            \r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n                //console.log(\"Touche relâchée\");\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n            \r\n            if (isKeyPressed) {\r\n            \r\n                character.applyForce(new BABYLON.Vector3(0, 0, -50), new BABYLON.Vector3(0, 0, 0));\r\n    \r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n               \r\n                isKeyPressed = false;\r\n                //console.log(  animationGroup)\r\n               //animationGroup[1].play();\r\n            }\r\n            /*\r\n            if (isKeyPressed2) {\r\n                character.applyForce(new BABYLON.Vector3(0, 200, 0), new BABYLON.Vector3(0, 0, 0));\r\n                character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n                isKeyPressed2 = false;\r\n                //animationGroup[2].play();\r\n            }\r\n            */\r\n           \r\n            character.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n        });\r\n    }\r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController2 from './CharacterController2.js';\r\nvar engine2 = new BABYLON.Engine(canvas, true);\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel2 {\r\n\r\n    constructor(scene,engine,name,forward,jump,x,y,z) {\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name = name;\r\n        this.boxBody ;\r\n        this.boxMesh;\r\n        this.animationGroups = [];\r\n        this.forward = forward\r\n        this.jump = jump;\r\n        \r\n        this.createPlayer(x,y,z);\r\n        this.enablePlayerControl(forward,jump);\r\n     \r\n     \r\n    }\r\n    \r\n\r\n    async createPlayer(x,y,z){\r\n\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n        var box = BABYLON.MeshBuilder.CreateBox(this.name, {width: boxW, height: boxH, depth: boxD},this.scene);\r\n        this.boxMesh = box;\r\n        //ADD character disable box visibility \r\n        box.visibility = false;\r\n     \r\n\r\n\r\n\r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n        //box.position = new BABYLON.Vector3(0,5,0);\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD),this.scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        this.boxBody = boxBody;\r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", this.scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n        this.animationGroups = await this.Character(x, y, z, box);\r\n       //console.log(this.animationGroups);\r\n      \r\n    \r\n     \r\n     \r\n \r\n        return box;\r\n    }\r\n    \r\n  \r\n \r\n    enablePlayerControl(forward,jump){\r\n       let control = new CharacterController2(canvas,this.scene,this.engine,this.boxBody,forward,jump,this.animationGroups);\r\n    }\r\n    \r\n\r\n    destroyPlayer(){\r\n        \r\n        control = null;\r\n    }\r\n\r\n   \r\n    async Character(x, y, z, parent) {\r\n        let mesh; // Déclaration de mesh à un niveau supérieur pour qu'il soit accessible en dehors de la fonction de rappel\r\n    \r\n        const { meshes, animationGroups } = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"./models/character1_anim/\", \"animCharacter.glb\", this.scene);\r\n    \r\n        mesh = meshes[0]; // Assignation de meshes[0] à mesh\r\n        mesh.name = \"RUNNER\";\r\n        mesh.position = new BABYLON.Vector3(x, y - 1.05, z); // Positionne le modèle une fois chargé\r\n    \r\n        if (parent) {\r\n            mesh.setParent(parent); // Attacher le modèle au parent si spécifié\r\n        }\r\n        this.animationGroups.push(animationGroups) ;\r\n        // Vous pouvez ajouter des manipulations supplémentaires sur le mesh ici, comme l'échelle ou la rotation\r\n    \r\n        console.log(\"Chargement réussi Personnage\", mesh);\r\n \r\n        await this.animGestionner(canvas,this.forward,this.jump,animationGroups)\r\n        \r\n    \r\n        return { animationGroups };\r\n    }\r\n\r\n    async animGestionner(canvas, input1, inputJump, animationGroup) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n                // Vérifie si la touche est celle que vous souhaitez traiter\r\n                if (event.key === input1 && !isKeyPressed) {\r\n                    isKeyPressed = true;\r\n                    //console.log(\"Touche enfoncée, action effectuée\");\r\n\r\n\r\n                }\r\n                if (event.key === inputJump && !isKeyPressed2) {\r\n                    isKeyPressed2 = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n\r\n            // Ensuite, planifiez la mise à false après une seconde\r\n            if (event.key === inputJump) {\r\n                isKeyPressed2 = false;\r\n\r\n\r\n            }\r\n\r\n            // Vérifie si la touche est celle que vous souhaitez traiter\r\n            if (event.key === input1) {\r\n                isKeyPressed = false;\r\n\r\n            }\r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n\r\n        engine2.runRenderLoop(() => {\r\n\r\n            if (isKeyPressed) {\r\n                isKeyPressed = false;\r\n                console.log(\"VOILA LE GROUPE :\" + animationGroup)\r\n                animationGroup[2].play();\r\n\r\n            }\r\n\r\n            if (isKeyPressed2) {\r\n\r\n                isKeyPressed2 = false;\r\n                //animationGroup[1].play();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel2;","var canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level2.mp3\");\r\nvar name = \"level3\";\r\nimport SoundManager from './SoundManager.js';\r\nimport { CustomModels } from './CustomModels.js';\r\nimport CharacterController2 from './CharacterController2.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport PlayerLevel2 from './PlayerLevel2.js';\r\n\r\nasync function getInitializedHavok() {\r\n    return await HavokPhysics();\r\n}\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n    \r\n   \r\n\r\n    // Configurez une caméra\r\n   \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n    //var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n\r\n\r\n\r\n    //var devcamera = new DevCamera(canvas, scene);\r\n    // Positionnez le cube où vous le souhaitez\r\n\r\n    triggerEnd(5,11,-620);\r\n    eventHandler(hk);\r\n\r\n    // Ajoutez l'événement de clic à la scène\r\n    scene.onPointerDown = function (evt, pickResult) {\r\n        onPointerDown(evt, pickResult);\r\n    };\r\n\r\n    var plane2 = new CustomModels(scene);\r\n    //plane2.CreatePlateform(0,0, -472,678);\r\n    plane2.CreatePlateformlevel2(-7,14, -265);\r\n    displayControlUI();\r\n\r\n\r\n     \r\n    let player1 = new PlayerLevel2(scene,engine,\"player1\",'s','f', 0,20,0);\r\n    let player2 = new PlayerLevel2(scene,engine,\"player2\",'k','m',-14,20,0);\r\n   //scene.debugLayer.show();\r\n\r\n   createSkyBox();\r\n\r\n}\r\n\r\nfunction launch() {\r\n   \r\n\r\n    \r\n   \r\n    //var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    var camera = new BABYLON.FollowCamera(\"camera\", new BABYLON.Vector3(0, 5, -10), scene);\r\n    camera.cameraRotation = 0;\r\n    camera.viewport = new BABYLON.Viewport(0.5, 0, 0.5, 1);\r\n    \r\n    \r\n    var camera2 = new BABYLON.FollowCamera(\"camera2\", new BABYLON.Vector3(-3, 5, -10), scene);\r\n    camera2.cameraRotation = 0;\r\n    camera2.viewport = new BABYLON.Viewport(0, 0, 0.5, 1); \r\n   \r\n    //scene.activeCameras.push(camera);\r\n    scene.activeCameras.push(camera2);\r\n    scene.activeCameras.push(camera)\r\n\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\n    //cam1\r\n    sceneData().then(playerMesh => {\r\n        let playerMesh2 = scene.getMeshByName(\"player2\");\r\n        console.log(\"MESH PLAYER2\"+playerMesh2); // Utilisez playerMesh comme nécessaire\r\n\r\n        let playerMesh1 = scene.getMeshByName(\"player1\");\r\n        //console.log(\"MESH PLAYER2\"+playerMesh); // Utilisez playerMesh comme nécessaire\r\n        \r\n        camera.lockedTarget = playerMesh2;\r\n        camera2.lockedTarget = playerMesh1;\r\n        \r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n\r\n\r\n    engine.runRenderLoop(function () {\r\n        scene.render();\r\n    });\r\n}\r\n\r\n// Fonction appelée lorsqu'un clic est détecté\r\nfunction onPointerDown(evt, pickResult) {\r\n    if (pickResult.hit) {\r\n        // Votre code d'interaction ici, par exemple, changez la couleur de l'objet\r\n        if(pickResult.pickedMesh.name ==\"player\"){\r\n\r\n            pickResult.pickedMesh.material.diffuseColor = new BABYLON.Color3(0, 1, 0); // Vert\r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerEnd(x,y,z){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(60, 2, 2000),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n\r\n    var boxW = 40;\r\n    var boxH = 40;\r\n    var boxD = 40;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Ending\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n        \r\n        \r\n  \r\n    var Aggregate2 =new BABYLON.PhysicsAggregate(box, BABYLON.PhysicsShapeType.MESH, { mass: 0 }, scene);\r\n    Aggregate2.shape.isTrigger =  true;\r\n\r\n    \r\n}\r\n\r\n\r\nfunction eventHandler(hk){\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n\r\n        if(ev.collider.transformNode.name ==\"player1\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 111111 PASSSSSS\")\r\n            sceneManager.setcountPlayer1()\r\n            console.log(\"COUNT_WIN PLAYER1:\"+sceneManager.winCountPlayer1)\r\n        }\r\n        if(ev.collider.transformNode.name ==\"player2\" && ev.collidedAgainst.transformNode.name == \"Ending\"){\r\n            console.log(\"PLAYER 2 PASSSSSS\")\r\n            sceneManager.setcountPlayer2()\r\n            console.log(\"COUNT_WIN PLAYER2\"+sceneManager.winCountPlayer2)\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n   \r\n   \r\n\r\n            //console.log(\"YOU WINNNNNNN\")\r\n            killLevel();\r\n            loadNextLevel();\r\n\r\n        }\r\n      \r\n    });\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchLevel4();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level2\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox3/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\nexport { name, scene, sceneData, launch };\r\n","class CharacterController2 {\r\n    constructor(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch) {\r\n        this.destroyed = false;\r\n        this.action = false;\r\n        this.setupKeyboardInputPlayer(canvas, engine, character1, inputLeft, inputRight,inputJump,inputLaunch);\r\n    }\r\n\r\n    setupKeyboardInputPlayer(canvas, engine, character, input1,input2, inputJump,inputLaunch) {\r\n        this.keys = {};\r\n        let isKeyPressed = false;\r\n        let isKeyPressed2 = false;\r\n        // Écoute l'événement \"keydown\" (touche enfoncée) sur le canvas.\r\n        canvas.addEventListener('keydown', (event) => {\r\n            if (!this.keys[event.key]) {\r\n                this.keys[event.key] = true;\r\n         \r\n             \r\n            }\r\n        });\r\n\r\n        // Écoute l'événement \"keyup\" (touche relâchée) sur le canvas.\r\n        canvas.addEventListener('keyup', (event) => {\r\n            this.keys[event.key] = false;\r\n       \r\n        });\r\n\r\n        // Démarre la boucle de rendu du moteur Babylon.js.\r\n        engine.runRenderLoop(() => {\r\n          \r\n            if(!this.destroyed){\r\n                if (this.keys[input1] ) {\r\n                    //console.log('Touche gauche enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            \r\n                }\r\n\r\n                if (this.keys[input2] ) {\r\n                    //console.log('Touche Droite enfoncée');\r\n                    character.applyForce(new BABYLON.Vector3(-5*2, 0, 0), new BABYLON.Vector3(0, 0, 0));\r\n                    character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n         \r\n                if (this.keys[inputLaunch] && !this.action) {\r\n                    //console.log('Touche LAUNCH enfoncée');\r\n                    this.action = true;\r\n                    character.applyForce(new BABYLON.Vector3(0, 0, 700*4), new BABYLON.Vector3(0, 0, 0));\r\n                    //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n        \r\n                }\r\n\r\n                //character.setAngularVelocity(BABYLON.Vector3.ZeroReadOnly);\r\n            }\r\n        });\r\n\r\n       \r\n    }\r\n\r\n\r\n    destroy() {\r\n     \r\n        this.destroyed = true;\r\n\r\n        // Libérez les références aux objets\r\n        this.canvas = null;\r\n        this.engine = null;\r\n\r\n        //this.character1.dispose();\r\n        this.character1 = null;\r\n        this.inputLeft = null;\r\n        this.inputRight = null;\r\n        this.inputJump = null;\r\n        this.inputLaunch = null;\r\n\r\n        // Réinitialisez ou supprimez d'autres ressources si nécessaire\r\n    }\r\n    isUpperCase(input,key) {\r\n        return key === input.toUpperCase();\r\n    }\r\n    getLastKeyPressed() {\r\n        return this.lastKeyPressed; // Fonction pour récupérer la dernière touche enfoncée\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default CharacterController2;\r\n","\r\nimport CharacterController3 from './CharacterController3.js';\r\n\r\nvar canvas2 = document.getElementById(\"renderCanvas\");\r\n//var engine2 = new BABYLON.Engine(canvas2, true);\r\n\r\n//variables\r\n\r\n\r\n\r\nexport class PlayerLevel3 {\r\n\r\n    constructor(scene,engine,name,left,right,jump,action,x,y,z) {\r\n        this.control;\r\n        this.scene = scene;\r\n        this.engine = engine;\r\n        this.name= name;\r\n        this.boxBody ;\r\n        this.sphereBody;\r\n        this.box;\r\n        this.rayHelper;\r\n        //this.testPlayer(scene,engine,name,x,y,z);\r\n      \r\n        this.shootBall(left,right,jump,action,x,y,z);\r\n    \r\n        this.enablePlayerControl(left,right,jump,action);\r\n\r\n        \r\n     \r\n     \r\n    }\r\n    \r\n\r\n    testPlayer(scene,engine,name,x,y,z){\r\n        var boxW = 2;\r\n        var boxH = 2;\r\n        var boxD = 2;\r\n        \r\n       \r\n        var box = BABYLON.MeshBuilder.CreateBox(name, {width: boxW, height: boxH, depth: boxD},scene);\r\n        this.box =box;\r\n   \r\n        box.rotationQuaternion = BABYLON.Quaternion.Identity();\r\n\r\n        box.position = new BABYLON.Vector3(x,y,z);\r\n        var boxShape = new BABYLON.PhysicsShapeBox(new BABYLON.Vector3(0,0,0), BABYLON.Quaternion.Identity(), new BABYLON.Vector3(boxW, boxH, boxD), scene);\r\n        var boxBody = new BABYLON.PhysicsBody(box, BABYLON.PhysicsMotionType.DYNAMIC, false, scene);\r\n    \r\n        boxBody.shape = boxShape;\r\n        boxBody.setMassProperties({mass : 1})\r\n    \r\n    \r\n        //add create material add tothe cube\r\n        var blueMaterial = new BABYLON.StandardMaterial(\"groundMaterial\", scene);\r\n        blueMaterial.diffuseColor = new BABYLON.Color3(0, 0, 1); // Rouge doux\r\n        box.material = blueMaterial;\r\n       \r\n        \r\n        boxBody.setCollisionCallbackEnabled(true)\r\n      \r\n       \r\n        this.boxBody = boxBody;\r\n        \r\n    \r\n     \r\n     \r\n        \r\n    \r\n\r\n      \r\n        \r\n    }\r\n  \r\n \r\n    enablePlayerControl(inputLeft,inputRight,jump,action){\r\n\r\n        let control2 = new CharacterController3(canvas2,this.engine,this.sphereBody, inputRight,inputLeft,jump,action);\r\n        this.control = control2;\r\n     \r\n      \r\n    }\r\n\r\n   \r\n    shootBall(left,right,jump,action,x,y,z){\r\n        let segments = 16;\r\n        let diameter = 2;\r\n\r\n        const sphere = BABYLON.MeshBuilder.CreateSphere(this.name, { segments, diameter }, this.scene);\r\n        sphere.position = new BABYLON.Vector3(x,y,z);\r\n\r\n       \r\n        var sphereShape = new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),diameter-1,this.scene);\r\n        var sphereBody = new BABYLON.PhysicsBody(sphere, BABYLON.PhysicsMotionType.DYNAMIC, false, this.scene);\r\n        sphereBody.shape = sphereShape;\r\n        sphereBody.setMassProperties({mass : 2});\r\n\r\n       \r\n        \r\n        this.sphereBody = sphereBody;\r\n       \r\n    }\r\n    disableThisObject(){\r\n\r\n        this.control.destroy();\r\n        this.control = null;\r\n        \r\n  \r\n       \r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default PlayerLevel3;","\r\n\r\nexport class BowlingPin {\r\n\r\n    constructor(scene,x,y,z) {\r\n       \r\n        this.scene = scene;\r\n       \r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        this.mesh;\r\n        this.Aggregate;\r\n        this.meshIdPromise = this.createBowlingPin();\r\n    }\r\n    \r\n    createBowlingPin(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            BABYLON.SceneLoader.ImportMesh(\"\", \"./models/\", \"Bowling Pin.glb\", this.scene, (meshes) => {\r\n\r\n             \r\n\r\n                const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n                    new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n                    new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n                    new BABYLON.Vector3(0.5, 1.2, 0.5),      // dimensions of the box\r\n                    this.scene                                // scene of the shape\r\n                );\r\n        \r\n\r\n                let boxKid = BABYLON.MeshBuilder.CreateBox(\"Pintrigger\");\r\n                //boxKid.isVisible = false;\r\n\r\n                //console.log(\"Chargement réussi Pin\", meshes);\r\n            \r\n                let mesh = meshes[0];\r\n                mesh.scaling._z =  mesh.scaling._z *-1;\r\n                mesh.name =\"Pin\"\r\n\r\n  \r\n            \r\n        \r\n                mesh.position = new BABYLON.Vector3(this.x, this.y, this.z); // Positionne l'objet\r\n            \r\n\r\n            \r\n                var Aggregate =new BABYLON.PhysicsAggregate(mesh, shapeBox1, { mass: 0.1 }, this.scene);\r\n                Aggregate.body.setCollisionCallbackEnabled(true);\r\n                this.Aggregate = Aggregate;\r\n                this.mesh = mesh;\r\n               \r\n                const meshId = mesh.uniqueId;\r\n                resolve(meshId);\r\n\r\n            }, undefined, undefined, \".glb\");\r\n        })\r\n\r\n    }\r\n  \r\n    \r\n    async getMeshId(){\r\n         return await this.meshIdPromise;\r\n    }\r\n \r\n   \r\n    disableThisObject(){\r\n        this.Aggregate.body.setCollisionCallbackEnabled(false);\r\n        this.Aggregate.body.dispose();\r\n        //this.mesh.dispose();\r\n       \r\n    }\r\n    isPinUp() {\r\n        // Récupérer la rotation de la quille\r\n        const rotation = this.mesh.rotationQuaternion.toEulerAngles();\r\n\r\n        // Définir un seuil pour la rotation, en dessous duquel la quille est considérée comme renversée\r\n        const threshold = 0.1; // À ajuster selon vos besoins\r\n\r\n        // Vérifier si la rotation autour de l'axe X (ou un autre axe selon votre modèle) dépasse le seuil\r\n        const isUp = Math.abs(rotation.x) < threshold;\r\n\r\n        return isUp;\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default BowlingPin;","import { CustomModels } from './CustomModels.js';\r\nimport CharacterController3 from './CharacterController3.js';\r\nimport PlayerLevel3 from './PlayerLevel3.js';\r\nimport BowlingPin from './BowlingPin.js';\r\nimport * as sceneManager from './SceneManager.js';\r\nimport SoundManager from './SoundManager.js';\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"level3.mp3\");\r\nvar name = \"level4\";\r\nlet advancedTexture ;\r\n\r\n\r\n\r\n\r\nlet player1;\r\nlet player2;\r\n\r\nlet countPlayer1 =0;\r\nlet countPlayer2 =0;\r\n\r\n\r\n\r\nasync function sceneData() {\r\n    //activer la physique sur la scene \r\n\r\n    const havokInstance = await HavokPhysics();\r\n    soundManager.initMusic();\r\n\r\n    // pass the engine to the plugin\r\n    const hk = new BABYLON.HavokPlugin(true, havokInstance);\r\n\r\n\r\n    scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), hk);\r\n    scene.collisionsEnabled = true;\r\n       \r\n    \r\n    \r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   \r\n\r\n    var model = new CustomModels(scene);\r\n    \r\n    var listeQuilles1 = [];\r\n\r\n    \r\n\r\n    let add =13 ;\r\n    var listeQuilles2 = [];\r\n   \r\n    \r\n    \r\n\r\n\r\n \r\n   // console.log(countPlayer1);\r\n     player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8);\r\n     player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n\r\n     //let pin = new BowlingPin(scene,0,2,19.397);\r\n    \r\n   \r\n    let ball1 = scene.getMeshByName(\"player1\");\r\n    \r\n    displayControlUI();\r\n    //CreateBowlingBall(0,6,0);\r\n\r\n    eventHandler(hk,player1,player2);\r\n\r\n   // model.CreatePlateform_Scene4();\r\n    model.CreateBowlingPlatform();\r\n    listeQuilles1 =  addQuille(listeQuilles1,0,0,-8);\r\n    listeQuilles2 =  addQuille(listeQuilles2,25,0,-8);\r\n\r\n    testSearch(listeQuilles1,countPlayer1,\"player1\");\r\n    testSearch2(listeQuilles2,countPlayer2,\"player2\");\r\n\r\n    \r\n        \r\n\r\n    let ball = scene.getMeshByName(\"ball\");\r\n    \r\n    \r\n\r\n  \r\n    /*\r\n    //trigger Player1\r\n    triggerRespawn(0,2,97.43,30, 30, 10);\r\n    triggerRespawn(7.5,2,48,1, 30,90);\r\n    triggerRespawn(-7.5,2,48,1, 30,90);\r\n\r\n    //trigger Player2\r\n    triggerRespawn(30,2,97.43,30, 30, 10);\r\n    triggerRespawn(20,2,48,1, 30,90);\r\n    triggerRespawn(35.5,2,48,1, 30,90);*/\r\n\r\n    respawnPlayerInput(player1,player2);\r\n\r\n    \r\n    createSkyBox();\r\n\r\n\r\n}\r\n\r\nfunction launch() {\r\n      \r\n    var camera = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(0, 5, -22), scene);\r\n    camera.inertia = 0;\r\n    camera.angularSensibility = 0;\r\n    camera.detachControl(canvas);\r\n    camera.cameraRotation = 0;\r\n    scene.activeCameras.push(camera);\r\n    \r\n    camera.viewport = new BABYLON.Viewport(0, 0, 0.5, 1);\r\n    scene.activeCameras.push(camera);\r\n\r\n\r\n    var camera2 = new BABYLON.FreeCamera(\"camera\", new BABYLON.Vector3(25, 4, -23), scene);\r\n    camera2.inertia = 0;\r\n    camera2.angularSensibility = 0;\r\n    camera2.detachControl(canvas);\r\n    camera2.cameraRotation = 0;\r\n    scene.activeCameras.push(camera2);\r\n    camera2.viewport = new BABYLON.Viewport(0.5,0 , 0.5, 1);\r\n    scene.activeCameras.push(camera2);\r\n    \r\n   \r\n\r\n \r\n\r\n    sceneData();\r\n  \r\n\r\n    let playerMesh = scene.getMeshByName(\"player1\");\r\n    let playerMesh2 = scene.getMeshByName(\"player2\");\r\n    //console.log(playerMesh2);\r\n    //console.log(playerMesh); // Utilisez playerMesh comme nécessaire\r\n    \r\n    camera.lockedTarget = playerMesh;\r\n    //camera2.lockedTarget = playerMesh2;\r\n\r\n    engine.runRenderLoop(function () {\r\n\r\n        scene.render();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction triggerRespawn(x,y,z,sizeX,sizeY,sizeZ){\r\n\r\n    const shapeBox1 = new BABYLON.PhysicsShapeBox(\r\n        new BABYLON.Vector3(0, 0, 0),        // center of the box\r\n        new BABYLON.Quaternion(0, 0, 0, 1),  // rotation of the box\r\n        new BABYLON.Vector3(sizeX,sizeY,sizeZ),      // dimensions of the box\r\n        scene                                // scene of the shape\r\n    );\r\n    \r\n\r\n    //let RainBowMesh = scene.getMeshByName(\"RainBow\");\r\n\r\n    var boxW = 2;\r\n    var boxH = 2;\r\n    var boxD = 2;\r\n\r\n    var box = BABYLON.MeshBuilder.CreateBox(\"Respawn\", {width: boxW, height: boxH, depth: boxD},scene);\r\n    box.isVisible = false;\r\n\r\n    box.position.x = x;\r\n    box.position.y = y;\r\n    box.position.z = z;\r\n    //box.position = BABYLON.Vector3(4,-24,-850);    \r\n        \r\n    var Aggregate =new BABYLON.PhysicsAggregate(box, shapeBox1, { mass: 0 },scene);\r\n    Aggregate.shape.isTrigger =  true;\r\n    \r\n\r\n    \r\n    //Aggregate.dispose();\r\n    \r\n}\r\n\r\nfunction eventHandler(hk,player1,player2){\r\n\r\n    \r\n    hk.onTriggerCollisionObservable.add((ev) => {\r\n        // console.log(ev);\r\n        console.log(ev.type, ':', ev.collider.transformNode.name, '-', ev.collidedAgainst.transformNode.name);\r\n       \r\n        if(ev.collidedAgainst.transformNode.name ==\"Ending\"){\r\n            console.log(\"YOU WINNNNNNN\")\r\n            //killLevel();\r\n            //loadNextLevel();\r\n            player1 = null;\r\n  \r\n\r\n        }\r\n\r\n        if(ev.collidedAgainst.transformNode.name ==\"Respawn\" && ( ev.collider.transformNode.name == \"player1\" || ev.collider.transformNode.name == \"player2\" ) ){\r\n            console.log(\"YOU RESPAWNWNNN\");\r\n\r\n            if(ev.collider.transformNode.name == \"player1\"){\r\n                let ball1 = scene.getMeshByName(\"player1\");\r\n         \r\n                player1.disableThisObject();\r\n                //player1 = null;\r\n                ball1.dispose();\r\n                \r\n                player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',-5,5,0);\r\n            \r\n     \r\n            }else{\r\n                let ball2 = scene.getMeshByName(\"player2\");\r\n                player2.disableThisObject();\r\n                //player2 = null;\r\n                ball2.dispose()\r\n\r\n                player2= new PlayerLevel3(scene,engine,\"player2\",'j','l','i','Enter',28,5,0);\r\n              \r\n            }\r\n          \r\n         \r\n\r\n            \r\n          \r\n        }\r\n     \r\n    });\r\n\r\n   //WinParty\r\n\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nasync function testSearch(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer1++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer1);\r\n        document.getElementById(\"pin1\").innerHTML = countPlayer1 + \"/93 PINS\";\r\n\r\n  \r\n        if(countPlayer1 >=93){\r\n            sceneManager.setcountPlayer1()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2:\"+sceneManager.winCountPlayer2)\r\n        }\r\n        \r\n      \r\n   \r\n        if(countPlayer1 >= 93 ){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n       \r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\nasync function testSearch2(listeQuilles1,countPlayer,playerText){\r\n\r\n \r\n    engine.runRenderLoop(async () => {\r\n\r\n        for(let i=0;i<listeQuilles1.length; i++){\r\n            const meshIdQuille = await listeQuilles1[i].getMeshId();\r\n            const quille =  listeQuilles1[i];\r\n            //console.log(meshIdQuille);\r\n            /*\r\n            if(meshIdQuille == id){\r\n                \r\n                quille.disableThisObject();\r\n            \r\n            }*/\r\n            if(!quille.isPinUp()){\r\n                countPlayer2++;\r\n                \r\n                listeQuilles1.splice(i, 1);\r\n\r\n                // Décrémenter i pour compenser la suppression de l'élément\r\n                i--;\r\n                    \r\n            };\r\n        }\r\n        //console.log(\"compteur \"+playerText+\" \" +countPlayer2);\r\n\r\n\r\n        document.getElementById(\"pin2\").innerHTML = countPlayer2 + \"/93 PINS\";\r\n  \r\n     \r\n        if(countPlayer2 >92){\r\n            sceneManager.setcountPlayer2()\r\n            //console.log(\"PLAYER1:\"+sceneManager.winCountPlayer1)\r\n            //console.log(\"PLAYER2\"+sceneManager.winCountPlayer2)\r\n\r\n        }\r\n   \r\n        if(countPlayer2 >= 93){\r\n            killLevel();\r\n            loadNextLevel();\r\n        }\r\n\r\n        // Utiliser setInterval pour appeler la fonction de mise à jour à intervalles réguliers (par exemple, toutes les 1000 millisecondes)\r\n        //setInterval(updateCountPins, 1000); //\r\n        \r\n\r\n\r\n    })\r\n   \r\n  \r\n    \r\n \r\n}\r\n\r\n\r\n\r\nfunction addQuille( listeQuilles1,x,y,z){\r\n\r\n\r\n    listeQuilles1 = [\r\n        //-3\r\n        new BowlingPin(scene, 0.25+x, 2+y,21+z),\r\n        //-2\r\n             \r\n        //new BowlingPin(scene, 0, 2, 21.5),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y,21.5+z),\r\n        new BowlingPin(scene, 0.50+x, 2+y,21.5+z),\r\n        //new BowlingPin(scene, 0.60, 2,21.5),\r\n      \r\n\r\n\r\n        //-1\r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0.25+x, 2+y, 22+z),\r\n        new BowlingPin(scene, 0.60+x, 2+y,22+z),\r\n        \r\n      \r\n\r\n\r\n        //0\r\n        new BowlingPin(scene, -0.5+x, 2+y, 22.5+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 22.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,22.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,22.5+z),\r\n        \r\n        //1\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23+z),\r\n       \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23+z),\r\n   \r\n        //2\r\n        new BowlingPin(scene, -0.5+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 23.5+z),\r\n\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 23.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y,23.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,23.5+z),\r\n      \r\n        \r\n        //3\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24+z),\r\n   \r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24+z),\r\n        \r\n        //4\r\n        new BowlingPin(scene, -0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 24.5+z),\r\n      \r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y,24.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 24.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 24.5+z),\r\n       \r\n\r\n\r\n        \r\n        //5\r\n\r\n        new BowlingPin(scene, -0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25+z),\r\n      \r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25+z),\r\n        //new BowlingPin(scene, 4, 2, 25),\r\n        \r\n        \r\n\r\n       //6\r\n       \r\n        new BowlingPin(scene, -0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 25.5+z),\r\n        \r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 25.5+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 25.5+z),\r\n   \r\n        \r\n\r\n        //7\r\n        new BowlingPin(scene, -0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -1.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, -4+x, 2+y, 26+z),\r\n \r\n                \r\n        \r\n        new BowlingPin(scene, 0+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 0.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 1.5+x, 2+y, 26+z),  \r\n        new BowlingPin(scene, 2+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 2.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 3.5+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4+x, 2+y, 26+z),\r\n        new BowlingPin(scene, 4.5+x, 2+y, 26+z),\r\n\r\n        //listeQuilles1.forEach(pin => pin.position.y += 5)\r\n    \r\n     \r\n    ];\r\n    return listeQuilles1;\r\n}\r\n\r\nfunction respawnPlayerInput() {\r\n    // Ajouter un écouteur d'événements pour la touche \"espace\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.key === 'Shift') {\r\n            // Code à exécuter lorsque la touche \"espace\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"espace\" a été enfoncée');\r\n            let ball1 = scene.getMeshByName(\"player1\");\r\n            player1.disableThisObject();\r\n            ball1.dispose();\r\n            player1 = new PlayerLevel3(scene,engine,\"player1\",'q','d','s',' ',0,8,-8);\r\n            \r\n        //document.getElementById(\"pin1\").innerText = countPlayer1+\"/93 PINS\";\r\n        \r\n        // Modifier le texte de l'élément avec l'identifiant \"pin2\"\r\n  \r\n        }\r\n    });\r\n\r\n    // Ajouter un écouteur d'événements pour la touche \"entrée\"\r\n    document.addEventListener('keydown', function(event) {\r\n        if (event.code === 'Backspace') {\r\n            // Code à exécuter lorsque la touche \"entrée\" est enfoncée\r\n            // Par exemple :\r\n            console.log('La touche \"entrée\" a été enfoncée');\r\n            let ball2 = scene.getMeshByName(\"player2\");\r\n            player2.disableThisObject();\r\n            ball2.dispose();\r\n            player2 = new PlayerLevel3(scene,engine,\"player2\",'ArrowLeft','ArrowRight','i','Enter',25,8,-8);\r\n            //document.getElementById(\"pin2\").innerText = countPlayer2+\"/93 PINS\";\r\n       \r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nfunction loadNextLevel(){\r\n    \r\n    sceneManager.launchEnd();\r\n\r\n}\r\nfunction killLevel(){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n\r\n    \r\n    engine.stopRenderLoop();\r\n    hideControlUI();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction displayControlUI(){\r\n  \r\n    // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"block\";\r\n \r\n }\r\n function hideControlUI(){\r\n        // Récupération de l'élément par son ID\r\n    var level1 = document.getElementById(\"level3\");\r\n \r\n    // Afficher l'élément\r\n    level1.style.display = \"none\";\r\n \r\n }\r\n\r\n function createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox2/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\nexport { name, scene, sceneData, launch };\r\n","import { CustomModels } from './CustomModels.js';\r\nimport * as sceneManager from './SceneManager.js'\r\nimport SoundManager from './SoundManager.js';\r\n\r\nlet advancedTexture ;\r\nlet advancedTexture2 ;\r\n\r\n//const BABYLON = require('babylonjs');\r\n\r\n\r\n\r\nvar canvas = document.getElementById(\"renderCanvas\");\r\nvar engine = new BABYLON.Engine(canvas, true);\r\nvar scene = new BABYLON.Scene(engine);\r\nlet soundManager = new SoundManager(scene,\"Menu.mp3\");\r\n\r\n\r\nvar createScene = function () {\r\n\r\n    // GUI\r\n    // Ajoutez une lumière\r\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n   // Création d'une caméra\r\n    const camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 8, -50), scene);\r\n    //camera.attachControl()\r\n  \r\n   //screen();\r\n\r\n    let menu = new CustomModels(scene);\r\n    menu.CreateMenu3dScene(0,0,0);\r\n\r\n    displayMenu();\r\n    soundManager.initMusic();\r\n    createSkyBox();\r\n\r\n\r\n    //scene.debugLayer.show();\r\n    return scene;\r\n};\r\nfunction launch(){\r\n    createScene();\r\n\r\n    engine.runRenderLoop(function () {\r\n        \r\n        scene.render();\r\n    });\r\n    \r\n\r\n}\r\n\r\nfunction displayMenu(){\r\n\r\n\r\n  \r\n    advancedTexture2 = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_text\");\r\n\r\n    button();\r\n\r\n    \r\n    // Création du texte en haut de la page\r\n    const headerText = new BABYLON.GUI.TextBlock();\r\n    headerText.text = \"Les Jeux Olympiques Maudits\";\r\n    headerText.color = \"black\";\r\n    headerText.fontSize = 100;\r\n    headerText.fontFamily = \"UnifrakturCook\";\r\n   \r\n   // headerText.fontFamily = \"Pirata One\"; // Utiliser la police Pirata One ici\r\n    headerText.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n    headerText.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP; // Modifier cette ligne\r\n    headerText.paddingTop = \"-500px\"; // Ajout de 20px de padding en haut\r\n    advancedTexture2.addControl(headerText);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nfunction killLevel(player){\r\n    //scene.dispose();\r\n     \r\n    scene.meshes.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n   \r\n    scene.cameras.forEach(function(mesh) {\r\n        mesh.dispose();\r\n    });\r\n    // Supprimer toutes les lumières de la scène\r\n    scene.lights.forEach(function(light) {\r\n        light.dispose();\r\n    });\r\n    advancedTexture2.dispose();\r\n    advancedTexture.dispose();\r\n    engine.stopRenderLoop();\r\n    soundManager.stopMusic();\r\n}\r\n\r\nfunction loadNextLevel(){\r\n    //sceneManager.launchLevel2();\r\n    sceneManager.launchStart();\r\n}\r\n\r\nfunction button(){\r\n    // Création du GUI\r\nadvancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI_button\");\r\n\r\n\r\n// Création du bouton Play\r\nconst playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"Play\");\r\nplayButton.width = \"150px\";\r\nplayButton.height = \"80px\";\r\nplayButton.color = \"white\";\r\nplayButton.cornerRadius = 20; // Coins arrondis\r\nplayButton.background = \"grey\";\r\n\r\n// Style supplémentaire\r\nplayButton.thickness = 2; // Épaisseur du contour\r\nplayButton.shadowOffsetX = 4; // Décalage de l'ombre en X\r\nplayButton.shadowOffsetY = 4; // Décalage de l'ombre en Y\r\nplayButton.shadowColor = \"#000000\"; // Couleur de l'ombre\r\nplayButton.shadowBlur = 8; // Flou de l'ombre\r\n\r\n// Ajouter une animation au survol\r\nplayButton.pointerEnterAnimation = function () {\r\n    playButton.background = \"white\";\r\n    playButton.color = \"grey\";\r\n   \r\n};\r\nplayButton.pointerOutAnimation = function () {\r\n    playButton.background = \"grey\";\r\n    playButton.color = \"white\";\r\n};\r\n\r\nplayButton.children[0].fontFamily = \"UnifrakturCook\";\r\n\r\n// Logique du bouton Play\r\nplayButton.onPointerClickObservable.add(function () {\r\n    console.log(\"Play button clicked\");\r\n    killLevel();\r\n    loadNextLevel();\r\n});\r\n\r\nadvancedTexture.addControl(playButton);\r\n\r\n}\r\n\r\n\r\nfunction createSkyBox(){\r\n\r\n    const skybox = BABYLON.MeshBuilder.CreateBox(\"skyBox\", { size: 100.0 }, scene);\r\n    const skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.disableLighting = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    //skybox.infiniteDistance = true;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"./models/skybox/skybox1/skybox\", scene);\r\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n   \r\n}\r\n\r\n\r\nfunction screen(){\r\n    var planeOpts = {\r\n        height: 80,\r\n        width: 80,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    };\r\n\r\n    // Création de l'avion\r\n    var videoPlane = BABYLON.MeshBuilder.CreatePlane(\"plane\", planeOpts, scene);\r\n    videoPlane.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n    \r\n    // Création du matériau vidéo\r\n    var videoMaterial = new BABYLON.StandardMaterial(\"m\", scene);\r\n    var videoTexture = new BABYLON.VideoTexture(\"vidtex\", \"video/Loading.mp4\", scene);\r\n    videoMaterial.diffuseTexture = videoTexture;\r\n    videoMaterial.roughness = 1;\r\n    videoMaterial.emissiveColor = new BABYLON.Color3.White();\r\n    videoPlane.material = videoMaterial;\r\n    \r\n}\r\n\r\n\r\nexport {  scene, launch };","// Importez les modules \"scene1.js\" et \"scene2.js\" pour accéder à leurs fonctionnalités\r\nimport * as start from './cinematique.js';\r\nimport * as end from './End.js';\r\nimport * as scene2 from './scene2.js'\r\nimport * as scene3 from './scene3.js'\r\nimport * as scene4 from './scene4.js'\r\nimport * as menu from './Menu.js'\r\n\r\nlet winCountPlayer1 =0;\r\nlet winCountPlayer2 =0;\r\n// Fonctions principales\r\nfunction Main() {\r\n    \r\n    // Appelez la fonction \"launch\" du module \"level2\" pour lancer la scène 2\r\n    \r\n    //launchEnd();\r\n   \r\n   // launchLevel2();\r\n   //launchLevel3();\r\n   //launchLevel4();\r\n\r\n    launchLevelMenu();\r\n   //launchStart();\r\n    \r\n\r\n   \r\n}\r\nfunction launchLevelMenu(){\r\n    \r\n    menu.launch();\r\n}\r\nfunction launchEnd(){\r\n    \r\n    end.launch();\r\n}\r\nfunction launchLevel2(){\r\n    scene2.killLevel();\r\n    scene2.launch();\r\n}\r\n\r\n\r\nfunction launchLevel3(){\r\n    \r\n   scene3.launch();\r\n}\r\n\r\nfunction launchLevel4(){\r\n    \r\n    scene4.launch();\r\n}\r\nfunction launchStart(){\r\n    \r\n    start.launch();\r\n}\r\n\r\n\r\n\r\nfunction setcountPlayer1(){\r\n    winCountPlayer1++;\r\n}\r\nfunction setcountPlayer2(){\r\n    winCountPlayer2++;\r\n}\r\n \r\n// Exportez toutes les fonctions d'un coup\r\nexport { Main, launchEnd, launchLevel2, launchLevel3, launchLevel4,setcountPlayer1,setcountPlayer2,launchLevelMenu,launchStart,winCountPlayer1,winCountPlayer2 };\r\n\r\n\r\n// Exécute la fonction principale\r\nMain();\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","scene","musicName","this","musicSound","initMusic","music","BABYLON","Sound","loop","autoplay","window","addEventListener","Engine","audioEngine","audioContext","state","resume","then","once","stopMusic","stop","canvas","document","getElementById","engine","Scene","soundManager","createScene","HemisphericLight","Vector3","FreeCamera","attachControl","async","planeOpts","height","width","sideOrientation","Mesh","DOUBLESIDE","videoPlane","MeshBuilder","CreatePlane","position","videoMaterial","StandardMaterial","videoTexture","VideoTexture","autoPlay","autoUpdateTexture","poster","muted","diffuseTexture","roughness","emissiveColor","Color3","White","material","video","play","console","log","catch","error","screen","setTimeout","meshes","forEach","mesh","dispose","cameras","lights","light","stopRenderLoop","playerWin","playerLoose","trophy","style","display","SceneLoader","ImportMesh","name","x","y","z","undefined","skybox","CreateBox","size","skyboxMaterial","backFaceCulling","disableLighting","infiniteDistance","reflectionTexture","CubeTexture","coordinatesMode","Texture","SKYBOX_MODE","createSkyBox","CustomModels","CreateTree","tree","tronc","PhysicsAggregate","PhysicsShapeType","BOX","mass","shape","isTrigger","boundingBox","CreatePineTree","scaling","shapeBox1","PhysicsShapeBox","Quaternion","shapeBox2","CreateSnowManOnSki","parent","setParent","CreateSceneProd","CreatePlayer","Zone","plane","ground","CreateGround","subdivisions","addInPlace","rotation","groundMaterial","diffuseColor","flatplane","createDeadTree","globalMesh","createSnowTree","createLitleSnowTree","createSnowMan","CreateRampe1","bigMesh","elment","MESH","createSnowMount","element","createFinalScene2","getMeshByName","i","length","CreatePlateform","CreatePlateformlevel2","CreatePlateform_Scene4","CreateBowlingPlatform","CreateBowlingBall","SPHERE","CreateColiseum","CreateMenu3dScene","Createlevel1","character","forward","backward","left","right","setupKeyboardInput","forwardI","keys","event","runRenderLoop","transformNode","scale","applyForce","setAngularVelocity","ZeroReadOnly","canvas2","PlayerLevel1","boxBody","testPlayer","enablePlayerControl","box","depth","isVisible","rotationQuaternion","Identity","boxShape","PhysicsBody","PhysicsMotionType","DYNAMIC","setMassProperties","blueMaterial","setCollisionCallbackEnabled","destroyPlayer","control","ShowLoadingScreen","player","reloadlevel","character1","input1","inputJump","animationGroup","setupKeyboardInputPlayer","isKeyPressed","isKeyPressed2","engine2","jump","boxMesh","animationGroups","createPlayer","visibility","Character","ImportMeshAsync","push","animGestionner","inputLeft","inputRight","inputLaunch","destroyed","action","input2","destroy","isUpperCase","input","toUpperCase","getLastKeyPressed","lastKeyPressed","sphereBody","rayHelper","shootBall","control2","CharacterController3","sphere","CreateSphere","segments","diameter","sphereShape","PhysicsShapeSphere","disableThisObject","Aggregate","meshIdPromise","createBowlingPin","Promise","resolve","_z","body","meshId","uniqueId","getMeshId","isPinUp","toEulerAngles","Math","abs","player1","player2","countPlayer1","countPlayer2","addQuille","listeQuilles1","winCountPlayer1","winCountPlayer2","launchEnd","render","launchLevel2","camera","FollowCamera","cameraRotation","viewport","Viewport","camera2","activeCameras","havokInstance","HavokPhysics","hk","HavokPlugin","enablePhysics","collisionsEnabled","triggerDie","place","playerMesh","onTriggerCollisionObservable","add","ev","type","collider","collidedAgainst","eventHandler","sceneData","playerMesh2","lockedTarget","executeWhenReady","launchLevel3","triggerEnd","onPointerDown","evt","pickResult","hit","pickedMesh","playerMesh1","launchLevel4","inertia","angularSensibility","detachControl","model","listeQuilles2","ball1","ball2","countPlayer","playerText","splice","innerHTML","testSearch","testSearch2","code","launchStart","setcountPlayer1","setcountPlayer2","GUI","AdvancedDynamicTexture","CreateFullscreenUI","playButton","Button","CreateSimpleButton","color","cornerRadius","background","thickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","pointerEnterAnimation","pointerOutAnimation","children","fontFamily","onPointerClickObservable","addControl","headerText","TextBlock","text","fontSize","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_CENTER","verticalAlignment","VERTICAL_ALIGNMENT_TOP","paddingTop","displayMenu"],"sourceRoot":""}